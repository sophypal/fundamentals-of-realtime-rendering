"use strict"
function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}define("fundamentals/adapters/-json-api",["exports","@ember-data/adapter/json-api"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("fundamentals/app",["exports","ember-resolver","ember-load-initializers","fundamentals/config/environment"],(function(e,t,n,r){function o(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function a(e,t){return(a=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function i(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1
if(Reflect.construct.sham)return!1
if("function"==typeof Proxy)return!0
try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}()
return function(){var n,r=u(e)
if(t){var o=u(this).constructor
n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments)
return s(this,n)}}function s(e,t){return!t||"object"!==_typeof(t)&&"function"!=typeof t?l(e):t}function l(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
return e}function u(e){return(u=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var f=function(e){(function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function")
e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&a(e,t)})(s,Ember.Application)
var n=i(s)
function s(){var e
o(this,s)
for(var a=arguments.length,i=new Array(a),u=0;u<a;u++)i[u]=arguments[u]
return c(l(e=n.call.apply(n,[this].concat(i))),"modulePrefix",r.default.modulePrefix),c(l(e),"podModulePrefix",r.default.podModulePrefix),c(l(e),"Resolver",t.default),e}return s}()
e.default=f,(0,n.default)(f,r.default.modulePrefix)})),define("fundamentals/component-managers/glimmer",["exports","@glimmer/component/-private/ember-component-manager"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("fundamentals/components/ember-ace-completion-tooltip",["exports","ember-ace/components/ember-ace-completion-tooltip"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("fundamentals/components/ember-ace",["exports","ember-ace/components/ember-ace"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("fundamentals/data-adapter",["exports","@ember-data/debug"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("fundamentals/helpers/and",["exports","ember-truth-helpers/helpers/and"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"and",{enumerable:!0,get:function(){return t.and}})})),define("fundamentals/helpers/app-version",["exports","fundamentals/config/environment","ember-cli-app-version/utils/regexp"],(function(e,t,n){function r(e){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},o=t.default.APP.version,a=r.versionOnly||r.hideSha,i=r.shaOnly||r.hideVersion,s=null
return a&&(r.showExtended&&(s=o.match(n.versionExtendedRegExp)),s||(s=o.match(n.versionRegExp))),i&&(s=o.match(n.shaRegExp)),s?s[0]:o}Object.defineProperty(e,"__esModule",{value:!0}),e.appVersion=r,e.default=void 0
var o=Ember.Helper.helper(r)
e.default=o})),define("fundamentals/helpers/array-contains",["exports"],(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.Helper.helper((function(e){var t=e[0],n=e[1]
return t.includes(n)}))
e.default=t})),define("fundamentals/helpers/did-insert",["exports","ember-render-helpers/helpers/did-insert"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("fundamentals/helpers/did-update",["exports","ember-render-helpers/helpers/did-update"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("fundamentals/helpers/eq",["exports","ember-truth-helpers/helpers/equal"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"equal",{enumerable:!0,get:function(){return t.equal}})})),define("fundamentals/helpers/gt",["exports","ember-truth-helpers/helpers/gt"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"gt",{enumerable:!0,get:function(){return t.gt}})})),define("fundamentals/helpers/gte",["exports","ember-truth-helpers/helpers/gte"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"gte",{enumerable:!0,get:function(){return t.gte}})})),define("fundamentals/helpers/is-array",["exports","ember-truth-helpers/helpers/is-array"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"isArray",{enumerable:!0,get:function(){return t.isArray}})})),define("fundamentals/helpers/is-empty",["exports","ember-truth-helpers/helpers/is-empty"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("fundamentals/helpers/is-equal",["exports","ember-truth-helpers/helpers/is-equal"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"isEqual",{enumerable:!0,get:function(){return t.isEqual}})})),define("fundamentals/helpers/loc",["exports","@ember/string/helpers/loc"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"loc",{enumerable:!0,get:function(){return t.loc}})})),define("fundamentals/helpers/lt",["exports","ember-truth-helpers/helpers/lt"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"lt",{enumerable:!0,get:function(){return t.lt}})})),define("fundamentals/helpers/lte",["exports","ember-truth-helpers/helpers/lte"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"lte",{enumerable:!0,get:function(){return t.lte}})})),define("fundamentals/helpers/not-eq",["exports","ember-truth-helpers/helpers/not-equal"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"notEqualHelper",{enumerable:!0,get:function(){return t.notEqualHelper}})})),define("fundamentals/helpers/not",["exports","ember-truth-helpers/helpers/not"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"not",{enumerable:!0,get:function(){return t.not}})})),define("fundamentals/helpers/or",["exports","ember-truth-helpers/helpers/or"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"or",{enumerable:!0,get:function(){return t.or}})})),define("fundamentals/helpers/page-title",["exports","ember-page-title/helpers/page-title"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var n=t.default
e.default=n})),define("fundamentals/helpers/pluralize",["exports","ember-inflector/lib/helpers/pluralize"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var n=t.default
e.default=n})),define("fundamentals/helpers/root-url",["exports","ember-root-url/helpers/root-url"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"rootUrl",{enumerable:!0,get:function(){return t.rootUrl}})})),define("fundamentals/helpers/singularize",["exports","ember-inflector/lib/helpers/singularize"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var n=t.default
e.default=n})),define("fundamentals/helpers/to-number",["exports"],(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.Helper.helper((function(e){return Number(e[0])}))
e.default=t})),define("fundamentals/helpers/vector3",["exports","three"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var n=Ember.Helper.helper((function(e,n){var r=new t.default.Vector3(e[0],e[1],e[2])
return n.normalize&&r.normalize(),r}))
e.default=n})),define("fundamentals/helpers/will-destroy",["exports","ember-render-helpers/helpers/will-destroy"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}))
function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}define("fundamentals/helpers/xor",["exports","ember-truth-helpers/helpers/xor"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"xor",{enumerable:!0,get:function(){return t.xor}})})),define("fundamentals/initializers/app-version",["exports","ember-cli-app-version/initializer-factory","fundamentals/config/environment"],(function(e,t,n){var r,o
Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0,n.default.APP&&(r=n.default.APP.name,o=n.default.APP.version)
var a={name:"App Version",initialize:(0,t.default)(r,o)}
e.default=a})),define("fundamentals/initializers/container-debug-adapter",["exports","ember-resolver/resolvers/classic/container-debug-adapter"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var n={name:"container-debug-adapter",initialize:function(){var e=arguments[1]||arguments[0]
e.register("container-debug-adapter:main",t.default),e.inject("container-debug-adapter:main","namespace","application:main")}}
e.default=n})),define("fundamentals/initializers/ember-data-data-adapter",["exports","@ember-data/debug/setup"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("fundamentals/initializers/ember-data",["exports","ember-data","ember-data/setup-container"],(function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var r={name:"ember-data",initialize:n.default}
e.default=r})),define("fundamentals/initializers/export-application-global",["exports","fundamentals/config/environment"],(function(e,t){function n(){var e=arguments[1]||arguments[0]
if(!1!==t.default.exportApplicationGlobal){var n
if("undefined"!=typeof window)n=window
else if("undefined"!=typeof global)n=global
else{if("undefined"==typeof self)return
n=self}var r,o=t.default.exportApplicationGlobal
r="string"==typeof o?o:Ember.String.classify(t.default.modulePrefix),n[r]||(n[r]=e,e.reopen({willDestroy:function(){this._super.apply(this,arguments),delete n[r]}}))}}Object.defineProperty(e,"__esModule",{value:!0}),e.initialize=n,e.default=void 0
var r={name:"export-application-global",initialize:n}
e.default=r})),define("fundamentals/initializers/usable-function-manager",["exports","ember-could-get-used-to-this/initializers/usable-function-manager"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"initialize",{enumerable:!0,get:function(){return t.initialize}})})),define("fundamentals/instance-initializers/ember-data",["exports"],(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
e.default={name:"ember-data",initialize:function(){}}})),define("fundamentals/modifiers/did-insert",["exports","@ember/render-modifiers/modifiers/did-insert"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("fundamentals/modifiers/did-update",["exports","@ember/render-modifiers/modifiers/did-update"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("fundamentals/modifiers/katex",["exports","ember-modifier","katex/contrib/auto-render/auto-render"],(function(e,t,n){function r(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(e)))return
var n=[],r=!0,o=!1,a=void 0
try{for(var i,s=e[Symbol.iterator]();!(r=(i=s.next()).done)&&(n.push(i.value),!t||n.length!==t);r=!0);}catch(l){o=!0,a=l}finally{try{r||null==s.return||s.return()}finally{if(o)throw a}}return n}(e,t)||function(e,t){if(!e)return
if("string"==typeof e)return o(e,t)
var n=Object.prototype.toString.call(e).slice(8,-1)
"Object"===n&&e.constructor&&(n=e.constructor.name)
if("Map"===n||"Set"===n)return Array.from(e)
if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return o(e,t)}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function o(e,t){(null==t||t>e.length)&&(t=e.length)
for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n]
return r}Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var a=(0,t.modifier)((function(e,t){var o=r(t,1)[0],a=o?"\\(".concat(o,"\\)"):e.innerHTML,i=a.replace(/\n*/,"").match(/^\s+/g)||"",s=i?new RegExp("^"+i,"gm"):"",l=a.replace(s,"").replace(/^\s+|\s+$/g,"")
e.innerHTML=l,(0,n.default)(e)}))
e.default=a})),define("fundamentals/modifiers/markdown",["exports","ember-modifier","prism","marked"],(function(e,t,n,r){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var o=(0,t.modifier)((function(e){var t=e.innerHTML.replace(/&gt;/gm,">").replace(/&lt;/gm,"<"),o=t.replace(/\n*/,"").match(/^\s+/g),a=new RegExp("^"+o,"gm"),i=t.replace(a,"").replace(/^\s+|\s+$/g,"")
i=(0,r.default)(i),e.innerHTML=i,n.default.highlightAllUnder(e)}))
e.default=o})),define("fundamentals/modifiers/on-window-resize",["exports","ember-modifier"],(function(e,t){function n(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(e)))return
var n=[],r=!0,o=!1,a=void 0
try{for(var i,s=e[Symbol.iterator]();!(r=(i=s.next()).done)&&(n.push(i.value),!t||n.length!==t);r=!0);}catch(l){o=!0,a=l}finally{try{r||null==s.return||s.return()}finally{if(o)throw a}}return n}(e,t)||function(e,t){if(!e)return
if("string"==typeof e)return r(e,t)
var n=Object.prototype.toString.call(e).slice(8,-1)
"Object"===n&&e.constructor&&(n=e.constructor.name)
if("Map"===n||"Set"===n)return Array.from(e)
if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return r(e,t)}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function r(e,t){(null==t||t>e.length)&&(t=e.length)
for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n]
return r}Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var o=(0,t.modifier)((function(e,t){var r=n(t,1)[0]
function o(t){r(e,t)}return window.addEventListener("resize",o),function(){window.removeEventListener("resize",o)}}))
e.default=o})),define("fundamentals/modifiers/show-fullscreen",["exports","ember-modifier"],(function(e,t){var n,r,o
function a(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){for(var n=0;n<t.length;n++){var r=t[n]
r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function s(e,t){return(s=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function l(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1
if(Reflect.construct.sham)return!1
if("function"==typeof Proxy)return!0
try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}()
return function(){var n,r=f(e)
if(t){var o=f(this).constructor
n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments)
return u(this,n)}}function u(e,t){return!t||"object"!==_typeof(t)&&"function"!=typeof t?c(e):t}function c(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
return e}function f(e){return(f=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function d(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var p,m,h,b,y,g,v=(n=Ember._action,o=function(e){(function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function")
e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&s(e,t)})(u,e)
var t,n,r,o=l(u)
function u(){var e
a(this,u)
for(var t=arguments.length,n=new Array(t),r=0;r<t;r++)n[r]=arguments[r]
return d(c(e=o.call.apply(o,[this].concat(n))),"initialized",!1),e}return t=u,(n=[{key:"onFullscreenChange",value:function(){this.args.named.onFullscreenChange&&this.args.named.onFullscreenChange(null!==document.fullscreenElement)}},{key:"didReceiveArguments",value:function(){this.isFullscreen?this.element.requestFullscreen():document.fullscreenElement&&document.exitFullscreen(),this.initialized||this.element.addEventListener("fullscreenchange",this.onFullscreenChange,!0)}},{key:"willDestroy",value:function(){this.element.removeEventListener("fullscreenchange",this.onFullscreenChange)}},{key:"isFullscreen",get:function(){return this.args.named.isFullscreen}}])&&i(t.prototype,n),r&&i(t,r),u}(t.default),p=(r=o).prototype,m="onFullscreenChange",h=[n],b=Object.getOwnPropertyDescriptor(r.prototype,"onFullscreenChange"),y=r.prototype,g={},Object.keys(b).forEach((function(e){g[e]=b[e]})),g.enumerable=!!g.enumerable,g.configurable=!!g.configurable,("value"in g||g.initializer)&&(g.writable=!0),g=h.slice().reverse().reduce((function(e,t){return t(p,m,e)||e}),g),y&&void 0!==g.initializer&&(g.value=g.initializer?g.initializer.call(y):void 0,g.initializer=void 0),void 0===g.initializer&&(Object.defineProperty(p,m,g),g=null),r)
e.default=v})),define("fundamentals/modifiers/visibility-detector",["exports","ember-modifier"],(function(e,t){var n,r,o
function a(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){for(var n=0;n<t.length;n++){var r=t[n]
r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function s(e,t){return(s=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function l(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1
if(Reflect.construct.sham)return!1
if("function"==typeof Proxy)return!0
try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}()
return function(){var n,r=f(e)
if(t){var o=f(this).constructor
n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments)
return u(this,n)}}function u(e,t){return!t||"object"!==_typeof(t)&&"function"!=typeof t?c(e):t}function c(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
return e}function f(e){return(f=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function d(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var p,m,h,b,y,g,v=(n=Ember._action,o=function(e){(function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function")
e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&s(e,t)})(u,e)
var t,n,r,o=l(u)
function u(){var e
a(this,u)
for(var t=arguments.length,n=new Array(t),r=0;r<t;r++)n[r]=arguments[r]
return d(c(e=o.call.apply(o,[this].concat(n))),"isInViewport",!1),d(c(e),"container",null),e}return t=u,(n=[{key:"checkIsInViewport",value:function(){return this.element.getBoundingClientRect().top<window.innerHeight}},{key:"handleVisibility",value:function(){var e=this,t=this.checkIsInViewport()
t&&!this.isInViewport?(this.isInViewport=!0,Ember.run.schedule("afterRender",(function(){e.onEnter(e.element)}))):!t&&this.isInViewport&&(this.isInViewport=!1,Ember.run.schedule("afterRender",(function(){e.onLeave(e.element)})))}},{key:"didInstall",value:function(){this.container=document.querySelector(this.args.named.container),this.container&&(this.container.addEventListener("scroll",this.handleVisibility),this.handleVisibility())}},{key:"willDestroy",value:function(){this.container&&this.container.removeEventListener("scroll",this.handleVisibility)}},{key:"onEnter",get:function(){return this.args.named.onEnter}},{key:"onLeave",get:function(){return this.args.named.onLeave}}])&&i(t.prototype,n),r&&i(t,r),u}(t.default),p=(r=o).prototype,m="handleVisibility",h=[n],b=Object.getOwnPropertyDescriptor(r.prototype,"handleVisibility"),y=r.prototype,g={},Object.keys(b).forEach((function(e){g[e]=b[e]})),g.enumerable=!!g.enumerable,g.configurable=!!g.configurable,("value"in g||g.initializer)&&(g.writable=!0),g=h.slice().reverse().reduce((function(e,t){return t(p,m,e)||e}),g),y&&void 0!==g.initializer&&(g.value=g.initializer?g.initializer.call(y):void 0,g.initializer=void 0),void 0===g.initializer&&(Object.defineProperty(p,m,g),g=null),r)
e.default=v})),define("fundamentals/modifiers/will-destroy",["exports","@ember/render-modifiers/modifiers/will-destroy"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("fundamentals/pods/application/template",["exports"],(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.HTMLBars.template({id:"Vy3t3Ick",block:'{"symbols":[],"statements":[[1,[30,[36,1],[[30,[36,0],null,null]],null]]],"hasEval":false,"upvars":["-outlet","component"]}',moduleName:"fundamentals/pods/application/template.hbs"})
e.default=t})),define("fundamentals/pods/components/demo-viewer/component",["exports","@glimmer/component","three","dat.gui","@tweenjs/tween.js","lodash"],(function(e,t,n,r,o,a){var i,s,l,u,c,f,d,p,m,h,b,y,g,v,w,x,_,k,j,O,E,P,S,T,M,R,z,C,I,A
function D(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(e)))return
var n=[],r=!0,o=!1,a=void 0
try{for(var i,s=e[Symbol.iterator]();!(r=(i=s.next()).done)&&(n.push(i.value),!t||n.length!==t);r=!0);}catch(l){o=!0,a=l}finally{try{r||null==s.return||s.return()}finally{if(o)throw a}}return n}(e,t)||function(e,t){if(!e)return
if("string"==typeof e)return V(e,t)
var n=Object.prototype.toString.call(e).slice(8,-1)
"Object"===n&&e.constructor&&(n=e.constructor.name)
if("Map"===n||"Set"===n)return Array.from(e)
if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return V(e,t)}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function V(e,t){(null==t||t>e.length)&&(t=e.length)
for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n]
return r}function L(e,t,n){return(L="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=W(e)););return e}(e,t)
if(r){var o=Object.getOwnPropertyDescriptor(r,t)
return o.get?o.get.call(n):o.value}})(e,t,n||e)}function H(e,t){for(var n=0;n<t.length;n++){var r=t[n]
r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function U(e,t,n){return t&&H(e.prototype,t),n&&H(e,n),e}function B(e,t){return(B=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function F(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1
if(Reflect.construct.sham)return!1
if("function"==typeof Proxy)return!0
try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}()
return function(){var n,r=W(e)
if(t){var o=W(this).constructor
n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments)
return N(this,n)}}function N(e,t){return!t||"object"!==_typeof(t)&&"function"!=typeof t?G(e):t}function G(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
return e}function W(e){return(W=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function q(e,t,n,r){n&&Object.defineProperty(e,t,{enumerable:n.enumerable,configurable:n.configurable,writable:n.writable,value:n.initializer?n.initializer.call(r):void 0})}function Y(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function X(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function Z(e,t,n,r,o){var a={}
return Object.keys(r).forEach((function(e){a[e]=r[e]})),a.enumerable=!!a.enumerable,a.configurable=!!a.configurable,("value"in a||a.initializer)&&(a.writable=!0),a=n.slice().reverse().reduce((function(n,r){return r(e,t,n)||n}),a),o&&void 0!==a.initializer&&(a.value=a.initializer?a.initializer.call(o):void 0,a.initializer=void 0),void 0===a.initializer&&(Object.defineProperty(e,t,a),a=null),a}Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var K=(i=Ember._tracked,s=Ember._tracked,l=Ember._tracked,c=Z((u=function e(){Y(this,e),q(this,"scene",c,this),q(this,"vertex",f,this),q(this,"fragment",d,this)}).prototype,"scene",[i],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),f=Z(u.prototype,"vertex",[s],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),d=Z(u.prototype,"fragment",[l],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),u),Q=(p=Ember._tracked,m=Ember._tracked,h=Ember._tracked,b=Ember._action,y=Ember._action,g=Ember._action,v=Ember._action,w=Ember._action,x=Ember._action,_=Ember._action,k=Ember._action,j=Ember._action,O=Ember._action,E=Ember._action,P=Ember._action,S=Ember._action,T=Ember._action,M=Ember._action,A=function(e){(function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function")
e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&B(e,t)})(i,e)
var t=F(i)
function i(){var e
return Y(this,i),X(G(e=t.apply(this,arguments)),"object",new n.default.Object3D),X(G(e),"scene",null),X(G(e),"animations",[]),X(G(e),"animatedProps",{}),X(G(e),"animCallback",null),X(G(e),"raf",null),q(G(e),"currentTab",z,G(e)),q(G(e),"isFullscreen",C,G(e)),q(G(e),"isPlaying",I,G(e)),X(G(e),"editorValue",new K),e.editorValue.scene="/* globals THREE, scene, camera, vertexShadersource, fragmentShaderSource, animate */\n".concat(e.args.sceneEditorValue),e.editorValue.vertex=e.args.vertexEditorValue,e.editorValue.fragment=e.args.fragmentEditorValue,e}return U(i,[{key:"container",get:function(){return this.args.container||".scroll-container"}},{key:"isFullscreenEnabled",get:function(){return void 0===this.args.isFullscreenEnabled||this.args.isFullscreenEnabled}},{key:"enabledEditors",get:function(){return{scene:!Ember.isNone(this.args.sceneEditorValue),vertex:!Ember.isNone(this.args.vertexEditorValue),fragment:!Ember.isNone(this.args.fragmentEditorValue)}}},{key:"showEditor",get:function(){return this.isFullscreen&&(this.enabledEditors.scene||this.enabledEditors.vertex||this.enabledEditors.fragment)||this.args.isFullSize}},{key:"hasAnimation",get:function(){return Ember.isPresent(this.args.animations)}}]),U(i,[{key:"willDestroy",value:function(){L(W(i.prototype),"willDestroy",this).call(this),this.rafID&&cancelAnimationFrame(this.rafID)}},{key:"reloadScene",value:function(){var e,t,r,o,a,i=this
this.cleanupResources(this.object),this.scene.remove(this.object),this.object.clear(),this.animCallback=null
try{e=this.editorValue,t=n.default,r=this.object,o=this.camera,a=function(e){i.animCallback=e},Function('"use strict"; return (function (THREE, scene, camera, vertexShaderSource, fragmentShaderSource, animate) {'.concat(e.scene,"})"))()(t,r,o,e.vertex,e.fragment,a)}catch(s){this.animCallback=null,console.info("user code failed to eval",s)}this.scene.add(this.object)}},{key:"cleanupResources",value:function(e){e.traverse((function(e){e.material&&e.material.dispose(),e.geometry&&e.geometry.dispose()}))}},{key:"startDemo",value:function(e){this.args.hdr||this.args.overrideLights||this.addLights(e),this.setupControls(this._element),this.setupAnimations(),this.reloadScene(),this.animate()}},{key:"addLights",value:function(e){var t=[]
t[0]=new n.default.PointLight(16777215,1,0),t[1]=new n.default.PointLight(16777215,1,0),t[2]=new n.default.PointLight(16777215,1,0),t[0].position.set(0,200,0),t[1].position.set(100,200,100),t[2].position.set(-100,-200,-100),e.add(t[0]),e.add(t[1]),e.add(t[2])}},{key:"setupControls",value:function(e){var t=this
if(!Ember.isNone(this.args.controlDef)){this.gui=new r.GUI
var n=this.gui.domElement.parentElement
e.querySelector(".scene-controls").append(this.gui.domElement),n.parentNode&&n.parentNode.removeChild(n),this.args.controlDef&&Object.entries(this.args.controlDef).forEach((function(e){var n=D(e,2),r=n[0],o=n[1],a=t.gui.addFolder(r),i=Object.entries(o).reduce((function(e,t){var n=D(t,2),r=n[0],o=n[1]
return e[r]=Array.isArray(o)?o[0]:o.default,e}),{})
Object.entries(o).forEach((function(e){var n,o=D(e,2),s=o[0],l=o[1]
Array.isArray(l)?n=a.add(i,s,l):(n=a.add(i,s,l.min,l.max),l.step&&n.step(l.step)),n.onChange((function(){t.onControlChanged("".concat(r,".").concat(s),i[s])}))}))}))}}},{key:"setupAnimations",value:function(){var e=this,t=this.args.keyframes,n=this.args.animations
t&&n&&Object.entries(n).forEach((function(n){var r=D(n,2),i=r[0],s=r[1],l=s.keyframe,u=s.duration,c=s.easing,f=t[l],d=f.from,p=f.to,m=a.default.cloneDeep(d),h=new o.default.Tween(m).to(p,u).easing(c).onComplete(e.onComplete).onUpdate((function(e,t){1!==t||h._repeat||(h._isPlaying=!1)}))
e.animatedProps[i]=m,e.animations.push(h)})),this.animate()}},{key:"onSceneInsert",value:function(e,t){this.scene=e,this.sceneComponent=t,this.camera=t.camera,this.scene.add(this.object),this.startDemo(e),this.args.onSceneInsert&&this.args.onSceneInsert(e,t)}},{key:"onEditorUpdated",value:function(e){this.editorValue[this.currentTab]=e,this.reloadScene()}},{key:"onEnterFullscreen",value:function(){this.isFullscreen=!0}},{key:"onExitFullscreen",value:function(){this.isFullscreen=!1}},{key:"onFullscreenChange",value:function(e){var t=this
e!==this.isFullscreen&&(this.isFullscreen=e),Ember.run.later((function(){t.sceneComponent.resize(t.sceneComponent.element)}),100)}},{key:"onDidInsert",value:function(e){this._element=e}},{key:"onControlChanged",value:function(e,t){this.args.onControlChanged&&this.args.onControlChanged(e,t),this.animations.forEach((function(e){return e.pause()})),this.isPlaying=!1}},{key:"animate",value:function(e){this.raf=requestAnimationFrame(this.animate),o.default.update(e),this.isPlaying&&this.onAnimate(e),this.animCallback&&"function"==typeof this.animCallback&&this.animCallback.call(null,e)}},{key:"onAnimate",value:function(){this.args.onAnimate&&this.args.onAnimate(this.animatedProps)}},{key:"onComplete",value:function(){this.animations.every((function(e){return!e.isPlaying()}))&&(this.isPlaying=!1)}},{key:"onPlay",value:function(){this.animations.forEach((function(e){e.isPaused()?e.resume():e.start()})),this.isPlaying=!0}},{key:"onPause",value:function(){this.animations.forEach((function(e){e.pause()})),this.isPlaying=!1}},{key:"onEditorTab",value:function(e){this.currentTab=e}},{key:"onEnter",value:function(e){this._element=e,this.raf||this.animate()}},{key:"onLeave",value:function(){cancelAnimationFrame(this.raf),this.raf=null}}]),i}(t.default),z=Z((R=A).prototype,"currentTab",[p],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return"scene"}}),C=Z(R.prototype,"isFullscreen",[m],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),I=Z(R.prototype,"isPlaying",[h],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),Z(R.prototype,"onSceneInsert",[b],Object.getOwnPropertyDescriptor(R.prototype,"onSceneInsert"),R.prototype),Z(R.prototype,"onEditorUpdated",[y],Object.getOwnPropertyDescriptor(R.prototype,"onEditorUpdated"),R.prototype),Z(R.prototype,"onEnterFullscreen",[g],Object.getOwnPropertyDescriptor(R.prototype,"onEnterFullscreen"),R.prototype),Z(R.prototype,"onExitFullscreen",[v],Object.getOwnPropertyDescriptor(R.prototype,"onExitFullscreen"),R.prototype),Z(R.prototype,"onFullscreenChange",[w],Object.getOwnPropertyDescriptor(R.prototype,"onFullscreenChange"),R.prototype),Z(R.prototype,"onDidInsert",[x],Object.getOwnPropertyDescriptor(R.prototype,"onDidInsert"),R.prototype),Z(R.prototype,"onControlChanged",[_],Object.getOwnPropertyDescriptor(R.prototype,"onControlChanged"),R.prototype),Z(R.prototype,"animate",[k],Object.getOwnPropertyDescriptor(R.prototype,"animate"),R.prototype),Z(R.prototype,"onAnimate",[j],Object.getOwnPropertyDescriptor(R.prototype,"onAnimate"),R.prototype),Z(R.prototype,"onComplete",[O],Object.getOwnPropertyDescriptor(R.prototype,"onComplete"),R.prototype),Z(R.prototype,"onPlay",[E],Object.getOwnPropertyDescriptor(R.prototype,"onPlay"),R.prototype),Z(R.prototype,"onPause",[P],Object.getOwnPropertyDescriptor(R.prototype,"onPause"),R.prototype),Z(R.prototype,"onEditorTab",[S],Object.getOwnPropertyDescriptor(R.prototype,"onEditorTab"),R.prototype),Z(R.prototype,"onEnter",[T],Object.getOwnPropertyDescriptor(R.prototype,"onEnter"),R.prototype),Z(R.prototype,"onLeave",[M],Object.getOwnPropertyDescriptor(R.prototype,"onLeave"),R.prototype),R)
e.default=Q})),define("fundamentals/pods/components/demo-viewer/template",["exports"],(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.HTMLBars.template({id:"EqR5XsR+",block:'{"symbols":["parent","@cameraPosition","@cameraLookAt","@hdr","&default"],"statements":[[11,"div"],[16,0,[31,["absolute demo-viewer w-full h-full top-0 left-0 ",[30,[36,1],[[30,[36,7],[[32,0,["isFullscreen"]],[32,0,["args","isFullSize"]]],null],"fullscreen"],null]]]],[4,[38,8],null,[["isFullscreen","onFullscreenChange"],[[32,0,["isFullscreen"]],[32,0,["onFullscreenChange"]]]]],[4,[38,9],null,[["container","onEnter","onLeave"],[[32,0,["container"]],[32,0,["onEnter"]],[32,0,["onLeave"]]]]],[4,[38,10],[[32,0,["onDidInsert"]]],null],[12],[2,"\\n    "],[10,"div"],[14,0,"flex flex-col h-full"],[12],[2,"\\n        "],[10,"div"],[15,0,[31,["relative scene-container ",[30,[36,1],[[32,0,["isFullscreen"]],"h-full"],null]," ",[30,[36,1],[[32,0,["showEditor"]],"h-2/3 m-4 mb-2","h-full"],null]]]],[12],[2,"\\n            "],[8,"scene",[],[["@container","@cameraPosition","@cameraLookAt","@onSceneInsert","@hdr"],[[32,0,["container"]],[32,2],[32,3],[30,[36,11],[[32,0],[32,0,["onSceneInsert"]]],null],[32,4]]],[["default"],[{"statements":[[2,"\\n                "],[18,5,[[32,1]]],[2,"\\n            "]],"parameters":[1]}]]],[2,"\\n            "],[10,"div"],[14,0,"scene-controls absolute  top-0 left-0 w-full h-full"],[12],[2,"\\n"],[6,[37,1],[[32,0,["isFullscreen"]]],null,[["default","else"],[{"statements":[[6,[37,1],[[32,0,["isFullscreenEnabled"]]],null,[["default"],[{"statements":[[2,"                        "],[11,"div"],[24,0,"control absolute bottom-1 right-1 cursor-pointer"],[4,[38,3],["click",[32,0,["onExitFullscreen"]]],null],[12],[2,"\\n                            "],[10,"svg"],[14,0,"text-white"],[14,"width","1.5rem"],[14,"height","1.5em"],[14,"xmlns","http://www.w3.org/2000/svg","http://www.w3.org/2000/xmlns/"],[14,"viewBox","0 0 24 24"],[14,"fill","none"],[14,"stroke","currentColor"],[14,"stroke-width","2"],[14,"stroke-linecap","round"],[14,"stroke-linejoin","round"],[12],[2,"\\n                                "],[10,"path"],[14,"d","M8 3v3a2 2 0 0 1-2 2H3m18 0h-3a2 2 0 0 1-2-2V3m0 18v-3a2 2 0 0 1 2-2h3M3 16h3a2 2 0 0 1 2 2v3"],[12],[13],[2,"\\n                            "],[13],[2,"\\n                        "],[13],[2,"\\n"]],"parameters":[]}]]]],"parameters":[]},{"statements":[[6,[37,1],[[32,0,["isFullscreenEnabled"]]],null,[["default"],[{"statements":[[2,"                    "],[11,"div"],[24,0,"control absolute bottom-1 right-1 cursor-pointer"],[4,[38,3],["click",[32,0,["onEnterFullscreen"]]],null],[12],[2,"\\n                    "],[10,"svg"],[14,0,"text-white"],[14,"fill","currentColor"],[14,"width","1.5rem"],[14,"height","1.5rem"],[14,"viewBox","0 0 14 14"],[14,"version","1.1"],[14,"xmlns","http://www.w3.org/2000/svg","http://www.w3.org/2000/xmlns/"],[14,"xmlns:xlink","http://www.w3.org/1999/xlink","http://www.w3.org/2000/xmlns/"],[12],[2,"\\n                       "],[10,"g"],[14,1,"Icons"],[14,"stroke","none"],[14,"stroke-width","1"],[14,"fill","none"],[14,"fill-rule","evenodd"],[12],[2,"\\n                            "],[10,"g"],[14,1,"Outlined"],[14,"transform","translate(-173.000000, -3481.000000)"],[12],[2,"\\n                                "],[10,"g"],[14,1,"Navigation"],[14,"transform","translate(100.000000, 3378.000000)"],[12],[2,"\\n                                    "],[10,"g"],[14,1,"Outlined-/-Navigation-/-fullscreen"],[14,"transform","translate(68.000000, 98.000000)"],[12],[2,"\\n                                        "],[10,"g"],[12],[2,"\\n                                            "],[10,"polygon"],[14,1,"Path"],[14,"points","0 0 24 0 24 24 0 24"],[12],[13],[2,"\\n                                            "],[10,"path"],[14,"d","M7,14 L5,14 L5,19 L10,19 L10,17 L7,17 L7,14 Z M5,10 L7,10 L7,7 L10,7 L10,5 L5,5 L5,10 Z M17,17 L14,17 L14,19 L19,19 L19,14 L17,14 L17,17 Z M14,5 L14,7 L17,7 L17,10 L19,10 L19,5 L14,5 Z"],[14,1,"🔹-Icon-Color"],[14,"fill","#ffffff"],[12],[13],[2,"\\n                                        "],[13],[2,"\\n                                    "],[13],[2,"\\n                                "],[13],[2,"\\n                            "],[13],[2,"\\n                        "],[13],[2,"\\n                    "],[13],[2,"\\n                    "],[13],[2,"\\n"]],"parameters":[]}]]],[6,[37,1],[[35,6]],null,[["default"],[{"statements":[[6,[37,1],[[35,5]],null,[["default","else"],[{"statements":[[2,"                            "],[11,"div"],[24,0,"control absolute bottom-1 left-1 cursor-pointer"],[4,[38,3],["click",[32,0,["onPause"]]],null],[12],[2,"\\n                                "],[10,"svg"],[14,0,"text-white"],[14,"fill","currentColor"],[14,"xmlns","http://www.w3.org/2000/svg","http://www.w3.org/2000/xmlns/"],[14,"width","30"],[14,"height","30"],[14,"viewBox","0 0 28 42"],[12],[2,"\\n                                    "],[10,"g"],[12],[2,"\\n                                        "],[10,"rect"],[14,"width","10"],[14,"height","42"],[14,"rx","3"],[14,"ry","3"],[12],[13],[2,"\\n                                        "],[10,"rect"],[14,"x","18"],[14,"width","10"],[14,"height","42"],[14,"rx","3"],[14,"ry","3"],[12],[13],[2,"\\n                                    "],[13],[2,"\\n                                "],[13],[2,"\\n                            "],[13],[2,"\\n"]],"parameters":[]},{"statements":[[2,"                        "],[11,"div"],[24,0,"control absolute bottom-1 left-1 cursor-pointer"],[4,[38,3],["click",[32,0,["onPlay"]]],null],[12],[2,"\\n                            "],[10,"svg"],[14,"width","30px"],[14,"height","30px"],[14,"viewBox","0 0 11 14"],[12],[2,"\\n                                "],[10,"g"],[14,1,"Icons"],[14,"stroke","none"],[14,"stroke-width","1"],[14,"fill","none"],[14,"fill-rule","evenodd"],[12],[2,"\\n                                    "],[10,"g"],[14,1,"Rounded"],[14,"transform","translate(-753.000000, -955.000000)"],[12],[2,"\\n                                        "],[10,"g"],[14,1,"AV"],[14,"transform","translate(100.000000, 852.000000)"],[12],[2,"\\n                                            "],[10,"g"],[14,1,"-Round-/-AV-/-play_arrow"],[14,"transform","translate(646.000000, 98.000000)"],[12],[2,"\\n                                                "],[10,"g"],[12],[2,"\\n                                                    "],[10,"path"],[14,"d","M7,6.82 L7,17.18 C7,17.97 7.87,18.45 8.54,18.02 L16.68,12.84 C17.3,12.45 17.3,11.55 16.68,11.15 L8.54,5.98 C7.87,5.55 7,6.03 7,6.82 Z"],[14,"fill","#ffffff"],[12],[13],[2,"\\n                                                "],[13],[2,"\\n                                            "],[13],[2,"\\n                                        "],[13],[2,"\\n                                    "],[13],[2,"\\n                                "],[13],[2,"\\n                            "],[13],[2,"\\n                        "],[13],[2,"\\n"]],"parameters":[]}]]]],"parameters":[]}]]]],"parameters":[]}]]],[2,"            "],[13],[2,"\\n        "],[13],[2,"\\n"],[6,[37,1],[[32,0,["showEditor"]]],null,[["default"],[{"statements":[[2,"            "],[10,"div"],[14,0,"flex flex-col demo-editor-wrapper h-1/3 m-4 mt-2"],[12],[2,"\\n                "],[10,"div"],[14,0,"inline-flex file-tabs ml-14 text-gray-400"],[12],[2,"\\n"],[6,[37,1],[[32,0,["enabledEditors","scene"]]],null,[["default"],[{"statements":[[2,"                        "],[11,"div"],[16,0,[31,["rounded-t-md mx-0.5 px-2 cursor-pointer ",[30,[36,1],[[30,[36,0],[[32,0,["currentTab"]],"scene"],null],"text-gray-800 bg-gray-400","bg-gray-800"],null]]]],[4,[38,3],["click",[30,[36,2],[[32,0,["onEditorTab"]],"scene"],null]],null],[12],[2,"Scene"],[13],[2,"\\n"]],"parameters":[]}]]],[6,[37,1],[[32,0,["enabledEditors","vertex"]]],null,[["default"],[{"statements":[[2,"                        "],[11,"div"],[16,0,[31,["rounded-t-md mx-0.5 px-2 cursor-pointer ",[30,[36,1],[[30,[36,0],[[32,0,["currentTab"]],"vertex"],null],"text-gray-800 bg-gray-400","bg-gray-800"],null]]]],[4,[38,3],["click",[30,[36,2],[[32,0,["onEditorTab"]],"vertex"],null]],null],[12],[2,"Vertex Shader"],[13],[2,"\\n"]],"parameters":[]}]]],[6,[37,1],[[32,0,["enabledEditors","fragment"]]],null,[["default"],[{"statements":[[2,"                        "],[11,"div"],[16,0,[31,["rounded-t-md mx-0.5 px-2 cursor-pointer ",[30,[36,1],[[30,[36,0],[[32,0,["currentTab"]],"fragment"],null],"text-gray-800 bg-gray-400","bg-gray-800"],null]]]],[4,[38,3],["click",[30,[36,2],[[32,0,["onEditorTab"]],"fragment"],null]],null],[12],[2,"Fragment Shader"],[13],[2,"\\n"]],"parameters":[]}]]],[2,"                "],[13],[2,"\\n                "],[8,"ember-ace",[[24,0,"demo-editor"]],[["@useSoftTabs","@tabSize","@printMarginColumn","@theme","@mode","@value","@update"],["true","4","120","ace/theme/monokai",[30,[36,1],[[30,[36,0],[[32,0,["currentTab"]],"scene"],null],"ace/mode/javascript"],null],[30,[36,4],[[32,0,["editorValue"]],[32,0,["currentTab"]]],null],[32,0,["onEditorUpdated"]]]],null],[2,"\\n            "],[13],[2,"\\n"]],"parameters":[]}]]],[2,"    "],[13],[2,"\\n"],[13]],"hasEval":false,"upvars":["eq","if","fn","on","get","isPlaying","hasAnimation","or","show-fullscreen","visibility-detector","did-insert","action"]}',moduleName:"fundamentals/pods/components/demo-viewer/template.hbs"})
e.default=t})),define("fundamentals/pods/components/figures/beyond-basics/animated-functions/component",["exports","@glimmer/component"],(function(e,t){function n(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function r(e,t){return(r=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function o(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1
if(Reflect.construct.sham)return!1
if("function"==typeof Proxy)return!0
try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}()
return function(){var n,r=s(e)
if(t){var o=s(this).constructor
n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments)
return a(this,n)}}function a(e,t){return!t||"object"!==_typeof(t)&&"function"!=typeof t?i(e):t}function i(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
return e}function s(e){return(s=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var u=function(e){(function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function")
e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&r(e,t)})(a,e)
var t=o(a)
function a(){var e
n(this,a)
for(var r=arguments.length,o=new Array(r),s=0;s<r;s++)o[s]=arguments[s]
return l(i(e=t.call.apply(t,[this].concat(o))),"sceneEditorValue","\nconst material = new THREE.ShaderMaterial({\n    uniforms: {\n        uTime: {\n            value: 0,\n        },\n    },\n    vertexShader: vertexShaderSource,\n    fragmentShader: fragmentShaderSource,\n})\nconst sphere = new THREE.Mesh(\n    new THREE.PlaneBufferGeometry(2, 1),\n    material\n);\n\nanimate(function (t) {\n    material.uniforms.uTime.value = t/1000;\n})\n\nscene.add(sphere);\n"),l(i(e),"vertexEditorValue","\nvarying vec2 vUV;\nvoid main()\n{\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n    vUV = uv;\n}\n"),l(i(e),"fragmentEditorValue","\n#define PI 3.1459265359\n\nvarying vec2 vUV;\nuniform float uTime;\n\nvoid main()\n{\n    float y = (sin(vUV.x*7.0*PI+uTime) + 1.0)/2.0;\n    //float y = step(0.5, vUV.x);\n\n    vec3 color = vec3(y);\n    gl_FragColor = vec4(color, 1.0);\n}\n"),e}return a}(t.default)
e.default=u})),define("fundamentals/pods/components/figures/beyond-basics/animated-functions/template",["exports"],(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.HTMLBars.template({id:"89oiLhmT",block:'{"symbols":[],"statements":[[8,"demo-viewer",[],[["@cameraPosition","@cameraLookAt","@sceneEditorValue","@vertexEditorValue","@fragmentEditorValue"],[[30,[36,0],null,[["x","y","z"],[0,0,1]]],[30,[36,0],null,[["x","y","z"],[0,0,0]]],[32,0,["sceneEditorValue"]],[32,0,["vertexEditorValue"]],[32,0,["fragmentEditorValue"]]]],null]],"hasEval":false,"upvars":["hash"]}',moduleName:"fundamentals/pods/components/figures/beyond-basics/animated-functions/template.hbs"})
e.default=t})),define("fundamentals/pods/components/figures/beyond-basics/basic-functions/component",["exports","@glimmer/component"],(function(e,t){function n(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function r(e,t){return(r=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function o(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1
if(Reflect.construct.sham)return!1
if("function"==typeof Proxy)return!0
try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}()
return function(){var n,r=s(e)
if(t){var o=s(this).constructor
n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments)
return a(this,n)}}function a(e,t){return!t||"object"!==_typeof(t)&&"function"!=typeof t?i(e):t}function i(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
return e}function s(e){return(s=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var u=function(e){(function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function")
e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&r(e,t)})(a,e)
var t=o(a)
function a(){var e
n(this,a)
for(var r=arguments.length,o=new Array(r),s=0;s<r;s++)o[s]=arguments[s]
return l(i(e=t.call.apply(t,[this].concat(o))),"sceneEditorValue","\nconst sphere = new THREE.Mesh(\n    new THREE.PlaneBufferGeometry(2, 1),\n    new THREE.ShaderMaterial({\n        vertexShader: vertexShaderSource,\n        fragmentShader: fragmentShaderSource,\n    })\n);\n\nscene.add(sphere);\n"),l(i(e),"vertexEditorValue","\nvarying vec2 vUV;\nvoid main()\n{\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n    vUV = uv;\n}\n"),l(i(e),"fragmentEditorValue","\nvarying vec2 vUV;\n\nvoid main()\n{\n    float y = 1.0;\n    //float y = pow(vUV.x - 0.5, 2.0); // subtract 0.5 to center\n    //float y = vUV.x;\n    //float y = abs(vUV.x - 0.5);\n    //float y = mod(vUV.x, 0.5); // often used to repeat\n\n    vec3 color = vec3(y);\n    gl_FragColor = vec4(color, 1.0);\n}\n"),e}return a}(t.default)
e.default=u})),define("fundamentals/pods/components/figures/beyond-basics/basic-functions/template",["exports"],(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.HTMLBars.template({id:"dkRxY1zx",block:'{"symbols":[],"statements":[[8,"demo-viewer",[],[["@cameraPosition","@cameraLookAt","@sceneEditorValue","@vertexEditorValue","@fragmentEditorValue"],[[30,[36,0],null,[["x","y","z"],[0,0,1]]],[30,[36,0],null,[["x","y","z"],[0,0,0]]],[32,0,["sceneEditorValue"]],[32,0,["vertexEditorValue"]],[32,0,["fragmentEditorValue"]]]],null]],"hasEval":false,"upvars":["hash"]}',moduleName:"fundamentals/pods/components/figures/beyond-basics/basic-functions/template.hbs"})
e.default=t})),define("fundamentals/pods/components/figures/beyond-basics/color-brightness/component",["exports","@glimmer/component"],(function(e,t){function n(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function r(e,t){return(r=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function o(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1
if(Reflect.construct.sham)return!1
if("function"==typeof Proxy)return!0
try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}()
return function(){var n,r=s(e)
if(t){var o=s(this).constructor
n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments)
return a(this,n)}}function a(e,t){return!t||"object"!==_typeof(t)&&"function"!=typeof t?i(e):t}function i(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
return e}function s(e){return(s=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var u=function(e){(function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function")
e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&r(e,t)})(a,e)
var t=o(a)
function a(){var e
n(this,a)
for(var r=arguments.length,o=new Array(r),s=0;s<r;s++)o[s]=arguments[s]
return l(i(e=t.call.apply(t,[this].concat(o))),"sceneEditorValue","\nconst sphere = new THREE.Mesh(\n    new THREE.PlaneBufferGeometry(2, 1),\n    new THREE.ShaderMaterial({\n        vertexShader: vertexShaderSource,\n        fragmentShader: fragmentShaderSource,\n    })\n);\n\nscene.add(sphere);\n"),l(i(e),"vertexEditorValue","\nvarying vec2 vUV;\nvoid main()\n{\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n    vUV = uv;\n}\n"),l(i(e),"fragmentEditorValue","\nfloat brightness = 2.0;\nvoid main()\n{\n    vec3 color = vec3(1.0, 0.5, 0.0);\n    gl_FragColor = vec4(color * brightness, 1.0);\n}\n"),e}return a}(t.default)
e.default=u})),define("fundamentals/pods/components/figures/beyond-basics/color-brightness/template",["exports"],(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.HTMLBars.template({id:"lD8qTN1V",block:'{"symbols":[],"statements":[[8,"demo-viewer",[],[["@cameraPosition","@cameraLookAt","@sceneEditorValue","@vertexEditorValue","@fragmentEditorValue"],[[30,[36,0],null,[["x","y","z"],[0,0,1]]],[30,[36,0],null,[["x","y","z"],[0,0,0]]],[32,0,["sceneEditorValue"]],[32,0,["vertexEditorValue"]],[32,0,["fragmentEditorValue"]]]],null]],"hasEval":false,"upvars":["hash"]}',moduleName:"fundamentals/pods/components/figures/beyond-basics/color-brightness/template.hbs"})
e.default=t})),define("fundamentals/pods/components/figures/beyond-basics/color-hsb/component",["exports","@glimmer/component"],(function(e,t){function n(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function r(e,t){return(r=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function o(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1
if(Reflect.construct.sham)return!1
if("function"==typeof Proxy)return!0
try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}()
return function(){var n,r=s(e)
if(t){var o=s(this).constructor
n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments)
return a(this,n)}}function a(e,t){return!t||"object"!==_typeof(t)&&"function"!=typeof t?i(e):t}function i(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
return e}function s(e){return(s=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var u=function(e){(function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function")
e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&r(e,t)})(a,e)
var t=o(a)
function a(){var e
n(this,a)
for(var r=arguments.length,o=new Array(r),s=0;s<r;s++)o[s]=arguments[s]
return l(i(e=t.call.apply(t,[this].concat(o))),"sceneEditorValue","\nconst sphere = new THREE.Mesh(\n    new THREE.PlaneBufferGeometry(2, 1),\n    new THREE.ShaderMaterial({\n        vertexShader: vertexShaderSource,\n        fragmentShader: fragmentShaderSource,\n    })\n);\n\nscene.add(sphere);\n"),l(i(e),"vertexEditorValue","\nvarying vec2 vUV;\nvoid main()\n{\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n    vUV = uv;\n}\n"),l(i(e),"fragmentEditorValue","\nvarying vec2 vUV;\n\nvec3 rgb2hsb( in vec3 c ){\n    vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n    vec4 p = mix(vec4(c.bg, K.wz),\n                    vec4(c.gb, K.xy),\n                    step(c.b, c.g));\n    vec4 q = mix(vec4(p.xyw, c.r),\n                    vec4(c.r, p.yzx),\n                    step(p.x, c.r));\n    float d = q.x - min(q.w, q.y);\n    float e = 1.0e-10;\n    return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)),\n                d / (q.x + e),\n                q.x);\n}\n\n//  Function from Iñigo Quiles\n//  https://www.shadertoy.com/view/MsS3Wc\nvec3 hsb2rgb( in vec3 c ){\n    vec3 rgb = clamp(abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),\n                                6.0)-3.0)-1.0,\n                        0.0,\n                        1.0 );\n    rgb = rgb*rgb*(3.0-2.0*rgb);\n    return c.z * mix(vec3(1.0), rgb, c.y);\n}\n\nvoid main()\n{\n    vec3 color = hsb2rgb(vec3(vUV.s, 1.0, vUV.t));\n    gl_FragColor = vec4(color, 1.0);\n}\n"),e}return a}(t.default)
e.default=u})),define("fundamentals/pods/components/figures/beyond-basics/color-hsb/template",["exports"],(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.HTMLBars.template({id:"hO1gWXhN",block:'{"symbols":[],"statements":[[8,"demo-viewer",[],[["@cameraPosition","@cameraLookAt","@sceneEditorValue","@vertexEditorValue","@fragmentEditorValue"],[[30,[36,0],null,[["x","y","z"],[0,0,1]]],[30,[36,0],null,[["x","y","z"],[0,0,0]]],[32,0,["sceneEditorValue"]],[32,0,["vertexEditorValue"]],[32,0,["fragmentEditorValue"]]]],null]],"hasEval":false,"upvars":["hash"]}',moduleName:"fundamentals/pods/components/figures/beyond-basics/color-hsb/template.hbs"})
e.default=t})),define("fundamentals/pods/components/figures/beyond-basics/color-saturation/component",["exports","@glimmer/component"],(function(e,t){function n(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function r(e,t){return(r=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function o(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1
if(Reflect.construct.sham)return!1
if("function"==typeof Proxy)return!0
try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}()
return function(){var n,r=s(e)
if(t){var o=s(this).constructor
n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments)
return a(this,n)}}function a(e,t){return!t||"object"!==_typeof(t)&&"function"!=typeof t?i(e):t}function i(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
return e}function s(e){return(s=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var u=function(e){(function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function")
e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&r(e,t)})(a,e)
var t=o(a)
function a(){var e
n(this,a)
for(var r=arguments.length,o=new Array(r),s=0;s<r;s++)o[s]=arguments[s]
return l(i(e=t.call.apply(t,[this].concat(o))),"sceneEditorValue","\nconst sphere = new THREE.Mesh(\n    new THREE.PlaneBufferGeometry(2, 1),\n    new THREE.ShaderMaterial({\n        vertexShader: vertexShaderSource,\n        fragmentShader: fragmentShaderSource,\n    })\n);\n\nscene.add(sphere);\n"),l(i(e),"vertexEditorValue","\nvarying vec2 vUV;\nvoid main()\n{\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n    vUV = uv;\n}\n"),l(i(e),"fragmentEditorValue","\n    varying vec2 vUV;\n\n    void main()\n    {\n        float brightness = 1.0;\n        vec3 color = vec3(1, 1.0 - vUV.s, 1.0 - vUV.s) * brightness;\n        gl_FragColor = vec4(color, 1.0);\n    }\n"),e}return a}(t.default)
e.default=u})),define("fundamentals/pods/components/figures/beyond-basics/color-saturation/template",["exports"],(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.HTMLBars.template({id:"Q5cdawt9",block:'{"symbols":[],"statements":[[8,"demo-viewer",[],[["@cameraPosition","@cameraLookAt","@sceneEditorValue","@vertexEditorValue","@fragmentEditorValue"],[[30,[36,0],null,[["x","y","z"],[0,0,1]]],[30,[36,0],null,[["x","y","z"],[0,0,0]]],[32,0,["sceneEditorValue"]],[32,0,["vertexEditorValue"]],[32,0,["fragmentEditorValue"]]]],null]],"hasEval":false,"upvars":["hash"]}',moduleName:"fundamentals/pods/components/figures/beyond-basics/color-saturation/template.hbs"})
e.default=t})),define("fundamentals/pods/components/figures/beyond-basics/color-spectrum/component",["exports","@glimmer/component"],(function(e,t){function n(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function r(e,t){return(r=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function o(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1
if(Reflect.construct.sham)return!1
if("function"==typeof Proxy)return!0
try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}()
return function(){var n,r=s(e)
if(t){var o=s(this).constructor
n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments)
return a(this,n)}}function a(e,t){return!t||"object"!==_typeof(t)&&"function"!=typeof t?i(e):t}function i(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
return e}function s(e){return(s=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var u=function(e){(function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function")
e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&r(e,t)})(a,e)
var t=o(a)
function a(){var e
n(this,a)
for(var r=arguments.length,o=new Array(r),s=0;s<r;s++)o[s]=arguments[s]
return l(i(e=t.call.apply(t,[this].concat(o))),"sceneEditorValue","\nconst sphere = new THREE.Mesh(\n    new THREE.PlaneBufferGeometry(2, 1),\n    new THREE.ShaderMaterial({\n        vertexShader: vertexShaderSource,\n        fragmentShader: fragmentShaderSource,\n    })\n);\n\nscene.add(sphere);\n"),l(i(e),"vertexEditorValue","\nvarying vec2 vUV;\nvoid main()\n{\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n    vUV = uv;\n}\n"),l(i(e),"fragmentEditorValue","\nvarying vec2 vUV;\n\nvec3 hsb2rgb(vec3 c ){\n    vec3 rgb = clamp(abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),\n                                6.0)-3.0)-1.0,\n                        0.0,\n                        1.0 );\n    rgb = rgb*rgb*(3.0-2.0*rgb);\n    return c.z * mix(vec3(1.0), rgb, c.y);\n}\n\nvoid main()\n{\n    gl_FragColor = vec4(hsb2rgb(vec3(vUV.s, 1.0, 1.0)), 1.0);\n}\n"),e}return a}(t.default)
e.default=u}))
function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}define("fundamentals/pods/components/figures/beyond-basics/color-spectrum/template",["exports"],(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.HTMLBars.template({id:"1Ow27Bdb",block:'{"symbols":[],"statements":[[8,"demo-viewer",[],[["@cameraPosition","@cameraLookAt","@sceneEditorValue","@vertexEditorValue","@fragmentEditorValue"],[[30,[36,0],null,[["x","y","z"],[0,0,1]]],[30,[36,0],null,[["x","y","z"],[0,0,0]]],[32,0,["sceneEditorValue"]],[32,0,["vertexEditorValue"]],[32,0,["fragmentEditorValue"]]]],null]],"hasEval":false,"upvars":["hash"]}',moduleName:"fundamentals/pods/components/figures/beyond-basics/color-spectrum/template.hbs"})
e.default=t})),define("fundamentals/pods/components/figures/beyond-basics/mixing-colors/component",["exports","@glimmer/component"],(function(e,t){function n(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function r(e,t){return(r=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function o(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1
if(Reflect.construct.sham)return!1
if("function"==typeof Proxy)return!0
try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}()
return function(){var n,r=s(e)
if(t){var o=s(this).constructor
n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments)
return a(this,n)}}function a(e,t){return!t||"object"!==_typeof(t)&&"function"!=typeof t?i(e):t}function i(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
return e}function s(e){return(s=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var u=function(e){(function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function")
e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&r(e,t)})(a,e)
var t=o(a)
function a(){var e
n(this,a)
for(var r=arguments.length,o=new Array(r),s=0;s<r;s++)o[s]=arguments[s]
return l(i(e=t.call.apply(t,[this].concat(o))),"sceneEditorValue","\nconst sphere = new THREE.Mesh(\n    new THREE.PlaneBufferGeometry(2, 1),\n    new THREE.ShaderMaterial({\n        vertexShader: vertexShaderSource,\n        fragmentShader: fragmentShaderSource,\n    })\n);\n\nscene.add(sphere);\n"),l(i(e),"vertexEditorValue","\nvarying vec2 vUV;\nvoid main()\n{\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n    vUV = uv;\n}\n"),l(i(e),"fragmentEditorValue","\nvarying vec2 vUV;\n\nvoid main()\n{\n    // creates circles for all 3 channels\n    // a unit circle is defined as all the points equally distant from a center point which is easy to calculate with length\n    // pseudocode\n    // 1. Create a vector from current point to center point, scale x by 2 because of the aspect ratio of this rectangle surface\n    // 2. Take this length and use smoothstep to create a nice transition at the circle border. Everything below 0.3 gets 0.0 and\n    //    everything above 0.3 gets 1.0. Everything between is smoothly transitioned.\n    // 3. Take the inverse of this result so that 1.0 is inside and 0.0 is outside.\n    float red = 1.0 - smoothstep(0.3, 0.31, length(vec2((vUV.s - 0.4) * 2.0, vUV.t - 0.6)));\n    float green = 1.0 - smoothstep(0.3, 0.31, length(vec2((vUV.s - 0.6) * 2.0, vUV.t - 0.6)));\n    float blue = 1.0 - smoothstep(0.3, 0.31, length(vec2((vUV.s - 0.5) * 2.0, vUV.t - 0.4)));\n\n    //vec3 color = vec3(red, green, blue); // uncomment this and comment out the layer stack use of mix below to see what it does\n\n    vec3 color = vec3(1.0, 1.0, 1.0); // first layer (white background)\n    color = mix(color, vec3(1.0, 0.0, 0.0), red); // second layer\n    color = mix(color, vec3(0.0, 1.0, 0.0), green); // third layer\n    color = mix(color, vec3(0.0, 0.0, 1.0), blue); // fourth layer\n\n    gl_FragColor = vec4(color, 1.0);\n}\n"),e}return a}(t.default)
e.default=u})),define("fundamentals/pods/components/figures/beyond-basics/mixing-colors/template",["exports"],(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.HTMLBars.template({id:"4/5cMpoR",block:'{"symbols":[],"statements":[[8,"demo-viewer",[],[["@cameraPosition","@cameraLookAt","@sceneEditorValue","@vertexEditorValue","@fragmentEditorValue"],[[30,[36,0],null,[["x","y","z"],[0,0,1]]],[30,[36,0],null,[["x","y","z"],[0,0,0]]],[32,0,["sceneEditorValue"]],[32,0,["vertexEditorValue"]],[32,0,["fragmentEditorValue"]]]],null]],"hasEval":false,"upvars":["hash"]}',moduleName:"fundamentals/pods/components/figures/beyond-basics/mixing-colors/template.hbs"})
e.default=t})),define("fundamentals/pods/components/figures/beyond-basics/shape-collection/component",["exports","@glimmer/component"],(function(e,t){function n(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function r(e,t){return(r=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function o(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1
if(Reflect.construct.sham)return!1
if("function"==typeof Proxy)return!0
try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}()
return function(){var n,r=s(e)
if(t){var o=s(this).constructor
n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments)
return a(this,n)}}function a(e,t){return!t||"object"!==_typeof(t)&&"function"!=typeof t?i(e):t}function i(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
return e}function s(e){return(s=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var u=function(e){(function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function")
e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&r(e,t)})(a,e)
var t=o(a)
function a(){var e
n(this,a)
for(var r=arguments.length,o=new Array(r),s=0;s<r;s++)o[s]=arguments[s]
return l(i(e=t.call.apply(t,[this].concat(o))),"sceneEditorValue","\nconst sphere = new THREE.Mesh(\n    new THREE.PlaneBufferGeometry(2, 1),\n    new THREE.ShaderMaterial({\n        vertexShader: vertexShaderSource,\n        fragmentShader: fragmentShaderSource,\n    })\n);\n\nscene.add(sphere);\n"),l(i(e),"vertexEditorValue","\nvarying vec2 vUV;\nvoid main()\n{\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n    vUV = uv;\n}\n"),l(i(e),"fragmentEditorValue","\nvarying vec2 vUV;\n\nvoid main()\n{\n    float y = smoothstep(0.0, 1.0, vUV.x);\n    //float y = step(0.5, vUV.x);\n\n    vec3 color = vec3(y);\n    gl_FragColor = vec4(color, 1.0);\n}\n"),e}return a}(t.default)
e.default=u})),define("fundamentals/pods/components/figures/beyond-basics/shape-collection/template",["exports"],(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.HTMLBars.template({id:"e8NUGLS3",block:'{"symbols":[],"statements":[[8,"demo-viewer",[],[["@cameraPosition","@cameraLookAt","@sceneEditorValue","@vertexEditorValue","@fragmentEditorValue"],[[30,[36,0],null,[["x","y","z"],[0,0,1]]],[30,[36,0],null,[["x","y","z"],[0,0,0]]],[32,0,["sceneEditorValue"]],[32,0,["vertexEditorValue"]],[32,0,["fragmentEditorValue"]]]],null]],"hasEval":false,"upvars":["hash"]}',moduleName:"fundamentals/pods/components/figures/beyond-basics/shape-collection/template.hbs"})
e.default=t})),define("fundamentals/pods/components/figures/beyond-basics/step-functions/component",["exports","@glimmer/component"],(function(e,t){function n(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function r(e,t){return(r=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function o(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1
if(Reflect.construct.sham)return!1
if("function"==typeof Proxy)return!0
try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}()
return function(){var n,r=s(e)
if(t){var o=s(this).constructor
n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments)
return a(this,n)}}function a(e,t){return!t||"object"!==_typeof(t)&&"function"!=typeof t?i(e):t}function i(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
return e}function s(e){return(s=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var u=function(e){(function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function")
e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&r(e,t)})(a,e)
var t=o(a)
function a(){var e
n(this,a)
for(var r=arguments.length,o=new Array(r),s=0;s<r;s++)o[s]=arguments[s]
return l(i(e=t.call.apply(t,[this].concat(o))),"sceneEditorValue","\nconst sphere = new THREE.Mesh(\n    new THREE.PlaneBufferGeometry(2, 1),\n    new THREE.ShaderMaterial({\n        vertexShader: vertexShaderSource,\n        fragmentShader: fragmentShaderSource,\n    })\n);\n\nscene.add(sphere);\n"),l(i(e),"vertexEditorValue","\nvarying vec2 vUV;\nvoid main()\n{\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n    vUV = uv;\n}\n"),l(i(e),"fragmentEditorValue","\nvarying vec2 vUV;\n\nvoid main()\n{\n    float y = smoothstep(0.0, 1.0, vUV.x);\n    //float y = step(0.5, vUV.x);\n\n    vec3 color = vec3(y);\n    gl_FragColor = vec4(color, 1.0);\n}\n"),e}return a}(t.default)
e.default=u})),define("fundamentals/pods/components/figures/beyond-basics/step-functions/template",["exports"],(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.HTMLBars.template({id:"IB4Mtl4b",block:'{"symbols":[],"statements":[[8,"demo-viewer",[],[["@cameraPosition","@cameraLookAt","@sceneEditorValue","@vertexEditorValue","@fragmentEditorValue"],[[30,[36,0],null,[["x","y","z"],[0,0,1]]],[30,[36,0],null,[["x","y","z"],[0,0,0]]],[32,0,["sceneEditorValue"]],[32,0,["vertexEditorValue"]],[32,0,["fragmentEditorValue"]]]],null]],"hasEval":false,"upvars":["hash"]}',moduleName:"fundamentals/pods/components/figures/beyond-basics/step-functions/template.hbs"})
e.default=t})),define("fundamentals/pods/components/figures/beyond-basics/trig-functions/component",["exports","@glimmer/component"],(function(e,t){function n(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function r(e,t){return(r=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function o(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1
if(Reflect.construct.sham)return!1
if("function"==typeof Proxy)return!0
try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}()
return function(){var n,r=s(e)
if(t){var o=s(this).constructor
n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments)
return a(this,n)}}function a(e,t){return!t||"object"!==_typeof(t)&&"function"!=typeof t?i(e):t}function i(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
return e}function s(e){return(s=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var u=function(e){(function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function")
e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&r(e,t)})(a,e)
var t=o(a)
function a(){var e
n(this,a)
for(var r=arguments.length,o=new Array(r),s=0;s<r;s++)o[s]=arguments[s]
return l(i(e=t.call.apply(t,[this].concat(o))),"sceneEditorValue","\nconst sphere = new THREE.Mesh(\n    new THREE.PlaneBufferGeometry(2, 1),\n    new THREE.ShaderMaterial({\n        vertexShader: vertexShaderSource,\n        fragmentShader: fragmentShaderSource,\n    })\n);\n\nscene.add(sphere);\n"),l(i(e),"vertexEditorValue","\nvarying vec2 vUV;\nvoid main()\n{\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n    vUV = uv;\n}\n"),l(i(e),"fragmentEditorValue","\n#define PI 3.1459265359\n\nvarying vec2 vUV;\n\nvoid main()\n{\n    float y = (sin(vUV.x*PI*7.0)+1.0)/2.0; // map -1.0, 1.0 to 0.0, 1.0\n\n    vec3 color = vec3(y);\n    gl_FragColor = vec4(color, 1.0);\n}\n"),e}return a}(t.default)
e.default=u})),define("fundamentals/pods/components/figures/beyond-basics/trig-functions/template",["exports"],(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.HTMLBars.template({id:"RHdUA4aH",block:'{"symbols":[],"statements":[[8,"demo-viewer",[],[["@cameraPosition","@cameraLookAt","@sceneEditorValue","@vertexEditorValue","@fragmentEditorValue"],[[30,[36,0],null,[["x","y","z"],[0,0,1]]],[30,[36,0],null,[["x","y","z"],[0,0,0]]],[32,0,["sceneEditorValue"]],[32,0,["vertexEditorValue"]],[32,0,["fragmentEditorValue"]]]],null]],"hasEval":false,"upvars":["hash"]}',moduleName:"fundamentals/pods/components/figures/beyond-basics/trig-functions/template.hbs"})
e.default=t})),define("fundamentals/pods/components/figures/camera-projection/component",["exports","@glimmer/component","three"],(function(e,t,n){var r,o,a
function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t,n,r,o){var a={}
return Object.keys(r).forEach((function(e){a[e]=r[e]})),a.enumerable=!!a.enumerable,a.configurable=!!a.configurable,("value"in a||a.initializer)&&(a.writable=!0),a=n.slice().reverse().reduce((function(n,r){return r(e,t,n)||n}),a),o&&void 0!==a.initializer&&(a.value=a.initializer?a.initializer.call(o):void 0,a.initializer=void 0),void 0===a.initializer&&(Object.defineProperty(e,t,a),a=null),a}function l(e){return function(e){if(Array.isArray(e))return u(e)}(e)||function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(e)||function(e,t){if(!e)return
if("string"==typeof e)return u(e,t)
var n=Object.prototype.toString.call(e).slice(8,-1)
"Object"===n&&e.constructor&&(n=e.constructor.name)
if("Map"===n||"Set"===n)return Array.from(e)
if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return u(e,t)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function u(e,t){(null==t||t>e.length)&&(t=e.length)
for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n]
return r}function c(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function f(e,t){for(var n=0;n<t.length;n++){var r=t[n]
r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function d(e,t,n){return t&&f(e.prototype,t),n&&f(e,n),e}function p(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function")
e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&m(e,t)}function m(e,t){return(m=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function h(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1
if(Reflect.construct.sham)return!1
if("function"==typeof Proxy)return!0
try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}()
return function(){var n,r=g(e)
if(t){var o=g(this).constructor
n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments)
return b(this,n)}}function b(e,t){return!t||"object"!==_typeof(t)&&"function"!=typeof t?y(e):t}function y(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
return e}function g(e){return(g=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var v=function(e){p(r,e)
var t=h(r)
function r(e){var o
c(this,r)
var a=[],i=[],s=[],u=(o=t.call(this)).getFrustumRects(e),f=o.getFrustumPlanes(e)
return o.type="FrustumGeometry",i.push(-u.near.h,u.near.v,-e.near),i.push(-u.near.h,-u.near.v,-e.near),i.push(u.near.h,-u.near.v,-e.near),i.push(u.near.h,u.near.v,-e.near),s.push.apply(s,l(f.near.normal.toArray())),s.push.apply(s,l(f.near.normal.toArray())),s.push.apply(s,l(f.near.normal.toArray())),s.push.apply(s,l(f.near.normal.toArray())),a.push(0,1,2,0,2,3),i.push(u.far.h,u.far.v,-e.far),i.push(u.far.h,-u.far.v,-e.far),i.push(-u.far.h,-u.far.v,-e.far),i.push(-u.far.h,u.far.v,-e.far),s.push.apply(s,l(f.far.normal.toArray())),s.push.apply(s,l(f.far.normal.toArray())),s.push.apply(s,l(f.far.normal.toArray())),s.push.apply(s,l(f.far.normal.toArray())),a.push(4,5,6,4,6,7),i.push(u.near.h,u.near.v,-e.near),i.push(u.near.h,-u.near.v,-e.near),i.push(u.far.h,-u.far.v,-e.far),i.push(u.far.h,u.far.v,-e.far),s.push.apply(s,l(f.right.normal.toArray())),s.push.apply(s,l(f.right.normal.toArray())),s.push.apply(s,l(f.right.normal.toArray())),s.push.apply(s,l(f.right.normal.toArray())),a.push(8,9,10,8,10,11),i.push(-u.far.h,u.far.v,-e.far),i.push(-u.far.h,-u.far.v,-e.far),i.push(-u.near.h,-u.near.v,-e.near),i.push(-u.near.h,u.near.v,-e.near),s.push.apply(s,l(f.left.normal.toArray())),s.push.apply(s,l(f.left.normal.toArray())),s.push.apply(s,l(f.left.normal.toArray())),s.push.apply(s,l(f.left.normal.toArray())),a.push(12,13,14,12,14,15),i.push(-u.near.h,-u.near.v,-e.near),i.push(u.near.h,-u.near.v,-e.near),i.push(u.far.h,-u.far.v,-e.far),i.push(-u.far.h,-u.far.v,-e.far),s.push.apply(s,l(f.bottom.normal.toArray())),s.push.apply(s,l(f.bottom.normal.toArray())),s.push.apply(s,l(f.bottom.normal.toArray())),s.push.apply(s,l(f.bottom.normal.toArray())),a.push(16,17,18,16,18,19),i.push(-u.near.h,u.near.v,-e.near),i.push(u.near.h,u.near.v,-e.near),i.push(u.far.h,u.far.v,-e.far),i.push(-u.far.h,u.far.v,-e.far),s.push.apply(s,l(f.top.normal.toArray())),s.push.apply(s,l(f.top.normal.toArray())),s.push.apply(s,l(f.top.normal.toArray())),s.push.apply(s,l(f.top.normal.toArray())),a.push(20,21,22,20,22,23),o.setIndex(a),o.setAttribute("position",new n.Float32BufferAttribute(i,3)),o.setAttribute("normal",new n.Float32BufferAttribute(s,3)),o}return d(r,[{key:"getFrustumRects",value:function(e){var t=Math.tan(n.default.MathUtils.degToRad(.5*e.fov)),r=2*(e.near*t),o=e.aspect*r,a=2*(e.far*t)
return{near:{h:o/2,v:r/2},far:{h:e.aspect*a/2,v:a/2}}}},{key:"getFrustumPlanes",value:function(e){var t=(new n.default.Frustum).setFromProjectionMatrix(e.projectionMatrix)
return t.planes.forEach((function(e){e.normal.multiplyScalar(-1)})),{right:t.planes[0],left:t.planes[1],bottom:t.planes[2],top:t.planes[3],far:t.planes[4],near:t.planes[5]}}}]),r}(n.default.BufferGeometry),w=function(e){p(r,e)
var t=h(r)
function r(e){var o
c(this,r),o=t.call(this)
for(var a=[],i=e.geometry.getAttribute("position"),s=0;s<i.count;s+=3){var u=(new n.default.Vector3).fromBufferAttribute(i,s)
u.applyMatrix4(e.matrixWorld),a.push.apply(a,l(u.toArray())),a.push(0,0,0)}return o.setAttribute("position",new n.default.Float32BufferAttribute(a,3)),o}return r}(n.default.BufferGeometry),x=(r=Ember._action,o=Ember._action,s((a=function(e){p(r,e)
var t=h(r)
function r(){var e
return c(this,r),i(y(e=t.apply(this,arguments)),"object",new n.default.Group),i(y(e),"cameraDef",{nearPlane:{min:.1,max:10,default:1},farPlane:{min:10,max:100,default:100},fov:{min:45,max:100,default:70},aspect:{min:.5,max:2,default:1}}),i(y(e),"sceneDef",{x:{min:-20,max:20,default:0},y:{min:-20,max:20,default:0},z:{min:-20,max:20,default:-5}}),i(y(e),"controlDef",{}),e.args.props.enableCameraControls&&(e.controlDef.Projection=e.cameraDef),e.args.props.enableObjectControls&&(e.controlDef.Object=e.sceneDef),e}return d(r,[{key:"updateFrustum",value:function(e){this.object.geometry.dispose(),this.object.geometry=new v(e),(new n.default.Frustum).setFromProjectionMatrix(e.projectionMatrix).intersectsObject(this.sceneObject)?this.lines.visible=!0:this.lines.visible=!1}},{key:"updateScene",value:function(){this.sceneObject.updateMatrixWorld(),this.lines.geometry.dispose(),this.lines.geometry=new w(this.sceneObject)}},{key:"onSceneInsert",value:function(e){this.camera=new n.default.PerspectiveCamera(70,1,1,100),this.object=new n.default.Mesh(new v(this.camera),new n.default.MeshPhongMaterial({color:65416,side:n.default.DoubleSide,transparent:!0,opacity:.5,depthWrite:!1})),this.object.renderOrder=3,this.sceneGroup=new n.default.Group,this.sceneObject=new n.default.Mesh(new n.default.BoxBufferGeometry(2,2,2),new n.default.MeshBasicMaterial({color:16711680,transparent:!0,opacity:.5})),this.sceneObject.position.z=-5,this.sceneObject.renderOrder=0,this.sceneObject.updateMatrixWorld(),this.lines=new n.default.LineSegments(new w(this.sceneObject)),this.wireframe=new n.default.LineSegments(this.sceneObject.geometry,new n.default.LineBasicMaterial({color:16777215,transparent:!0,opacity:.5})),this.wireframe.position.z=-5,this.wireframe.renderOrder=1,this.sceneGroup.add(this.sceneObject),this.sceneGroup.add(this.lines),this.sceneGroup.add(this.wireframe),e.add(this.object),this.args.props.enableObjectControls&&e.add(this.sceneGroup)}},{key:"onControlChanged",value:function(e,t){switch(e=e.replace("Projection.","").replace("Object.","")){case"nearPlane":this.camera.near=t
break
case"farPlane":this.camera.far=t
break
case"fov":this.camera.fov=t
break
case"aspect":this.camera.aspect=t
break
case"x":this.sceneObject.position.x=t,this.wireframe.position.x=t
break
case"y":this.sceneObject.position.y=t,this.wireframe.position.y=t
break
case"z":this.sceneObject.position.z=t,this.wireframe.position.z=t}this.camera.updateProjectionMatrix(),this.updateFrustum(this.camera),this.updateScene()}}]),r}(t.default)).prototype,"onSceneInsert",[r],Object.getOwnPropertyDescriptor(a.prototype,"onSceneInsert"),a.prototype),s(a.prototype,"onControlChanged",[o],Object.getOwnPropertyDescriptor(a.prototype,"onControlChanged"),a.prototype),a)
e.default=x})),define("fundamentals/pods/components/figures/camera-projection/template",["exports"],(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.HTMLBars.template({id:"EPLQBm/S",block:'{"symbols":["parent"],"statements":[[8,"demo-viewer",[],[["@cameraPosition","@cameraLookAt","@controlDef","@onSceneInsert","@onControlChanged"],[[30,[36,0],null,[["x","y","z"],[0,5,10]]],[30,[36,0],null,[["x","y","z"],[0,0,0]]],[32,0,["controlDef"]],[32,0,["onSceneInsert"]],[32,0,["onControlChanged"]]]],[["default"],[{"statements":[[2,"\\n    "],[8,"scene-object",[],[["@parent","@type","@constructorProps"],[[32,1],"GridHelper",[30,[36,2],[100,20,[30,[36,1],["0x3486eb"],null],[30,[36,1],["0x666666"],null]],null]]],null],[2,"\\n"]],"parameters":[1]}]]]],"hasEval":false,"upvars":["hash","to-number","array"]}',moduleName:"fundamentals/pods/components/figures/camera-projection/template.hbs"})
e.default=t})),define("fundamentals/pods/components/figures/getting-started/frag-gen/component",["exports","@glimmer/component"],(function(e,t){function n(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function r(e,t){return(r=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function o(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1
if(Reflect.construct.sham)return!1
if("function"==typeof Proxy)return!0
try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}()
return function(){var n,r=s(e)
if(t){var o=s(this).constructor
n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments)
return a(this,n)}}function a(e,t){return!t||"object"!==_typeof(t)&&"function"!=typeof t?i(e):t}function i(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
return e}function s(e){return(s=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var u=function(e){(function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function")
e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&r(e,t)})(a,e)
var t=o(a)
function a(){var e
n(this,a)
for(var r=arguments.length,o=new Array(r),s=0;s<r;s++)o[s]=arguments[s]
return l(i(e=t.call.apply(t,[this].concat(o))),"sceneEditorValue","\nconst sphere = new THREE.Mesh(\n    new THREE.SphereBufferGeometry(1, 32, 32),\n    new THREE.ShaderMaterial({\n        vertexShader: vertexShaderSource,\n        fragmentShader: fragmentShaderSource,\n    })\n);\n\nscene.add(sphere);\n"),l(i(e),"vertexEditorValue","\nvarying vec2 vUV;\nvoid main()\n{\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n    vUV = uv;\n}\n"),l(i(e),"fragmentEditorValue","\nvarying vec2 vUV;\n\nvoid main()\n{\n    gl_FragColor = vec4(vUV.s, vUV.t, 0.0, 1.0);\n}\n"),e}return a}(t.default)
e.default=u})),define("fundamentals/pods/components/figures/getting-started/frag-gen/template",["exports"],(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.HTMLBars.template({id:"JGnBaOEW",block:'{"symbols":[],"statements":[[8,"demo-viewer",[],[["@cameraPosition","@cameraLookAt","@sceneEditorValue","@vertexEditorValue","@fragmentEditorValue"],[[30,[36,0],null,[["x","y","z"],[0,0,5]]],[30,[36,0],null,[["x","y","z"],[0,0,0]]],[32,0,["sceneEditorValue"]],[32,0,["vertexEditorValue"]],[32,0,["fragmentEditorValue"]]]],null]],"hasEval":false,"upvars":["hash"]}',moduleName:"fundamentals/pods/components/figures/getting-started/frag-gen/template.hbs"})
e.default=t})),define("fundamentals/pods/components/figures/getting-started/hardcoded-color/component",["exports","@glimmer/component"],(function(e,t){function n(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function r(e,t){return(r=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function o(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1
if(Reflect.construct.sham)return!1
if("function"==typeof Proxy)return!0
try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}()
return function(){var n,r=s(e)
if(t){var o=s(this).constructor
n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments)
return a(this,n)}}function a(e,t){return!t||"object"!==_typeof(t)&&"function"!=typeof t?i(e):t}function i(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
return e}function s(e){return(s=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var u=function(e){(function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function")
e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&r(e,t)})(a,e)
var t=o(a)
function a(){var e
n(this,a)
for(var r=arguments.length,o=new Array(r),s=0;s<r;s++)o[s]=arguments[s]
return l(i(e=t.call.apply(t,[this].concat(o))),"sceneEditorValue","\nconst sphere = new THREE.Mesh(\n    new THREE.SphereBufferGeometry(1, 32, 32), // creates a sphere with radius 1 with 32 segments horizontally and vertically\n    new THREE.ShaderMaterial({\n        vertexShader: vertexShaderSource, // vertexShaderSource is the content of the vertex shader editor\n        fragmentShader: fragmentShaderSource, // fragmentShaderSource is the content of the fragment shader editor\n    })\n);\n\nscene.add(sphere);\n"),l(i(e),"vertexEditorValue","\n// uniform mat4 projectionMatrix; // provided by ShaderMaterial\n// uniform mat4 modelViewMatrix; // provided by ShaderMaterial\n// attribute vec3 position; // provided by SphereBufferGeometry\n\nvoid main()\n{\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n}\n"),l(i(e),"fragmentEditorValue","\nvoid main() {\n    gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0); // color is a vec4 because of alpha\n}\n"),e}return a}(t.default)
e.default=u})),define("fundamentals/pods/components/figures/getting-started/hardcoded-color/template",["exports"],(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.HTMLBars.template({id:"hj5yDNM7",block:'{"symbols":[],"statements":[[8,"demo-viewer",[],[["@cameraPosition","@cameraLookAt","@sceneEditorValue","@vertexEditorValue","@fragmentEditorValue"],[[30,[36,0],null,[["x","y","z"],[0,0,5]]],[30,[36,0],null,[["x","y","z"],[0,0,0]]],[32,0,["sceneEditorValue"]],[32,0,["vertexEditorValue"]],[32,0,["fragmentEditorValue"]]]],null]],"hasEval":false,"upvars":["hash"]}',moduleName:"fundamentals/pods/components/figures/getting-started/hardcoded-color/template.hbs"})
e.default=t})),define("fundamentals/pods/components/figures/getting-started/per-pixel-lighting/component",["exports","@glimmer/component"],(function(e,t){function n(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function r(e,t){return(r=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function o(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1
if(Reflect.construct.sham)return!1
if("function"==typeof Proxy)return!0
try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}()
return function(){var n,r=s(e)
if(t){var o=s(this).constructor
n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments)
return a(this,n)}}function a(e,t){return!t||"object"!==_typeof(t)&&"function"!=typeof t?i(e):t}function i(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
return e}function s(e){return(s=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var u=function(e){(function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function")
e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&r(e,t)})(a,e)
var t=o(a)
function a(){var e
n(this,a)
for(var r=arguments.length,o=new Array(r),s=0;s<r;s++)o[s]=arguments[s]
return l(i(e=t.call.apply(t,[this].concat(o))),"sceneEditorValue","\nconst sphere = new THREE.Mesh(\n    new THREE.SphereBufferGeometry(1, 32, 32),\n    new THREE.ShaderMaterial({\n        vertexShader: vertexShaderSource,\n        fragmentShader: fragmentShaderSource,\n    })\n);\n\nscene.add(sphere);\n"),l(i(e),"vertexEditorValue","\nvarying vec3 vPos;\nvarying vec3 vNormal;\n\nvoid main() {\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n    vPos = (modelViewMatrix * vec4(position, 1.0)).xyz;\n    vNormal = normalMatrix * normal;\n}\n"),l(i(e),"fragmentEditorValue","\nvarying vec3 vPos;\nvarying vec3 vNormal;\n\nvoid main() {\n    vec3 lightPos = (viewMatrix * vec4(1.0, 1.0, 1.0, 1.0)).xyz;\n    float attenuation = 1.0 / pow(length(lightPos - vPos), 2.0);\n    vec3 lightDir = normalize(lightPos - vPos);\n    vec3 lightDirView = (viewMatrix * normalize(vec4(lightDir, 0.0))).xyz;\n\n    gl_FragColor = vec4(1.0, 1.0, 0.0, 1.0) * dot(lightDirView, vNormal) * attenuation;\n}\n"),e}return a}(t.default)
e.default=u})),define("fundamentals/pods/components/figures/getting-started/per-pixel-lighting/template",["exports"],(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.HTMLBars.template({id:"y85x+HXv",block:'{"symbols":[],"statements":[[8,"demo-viewer",[],[["@cameraPosition","@cameraLookAt","@sceneEditorValue","@vertexEditorValue","@fragmentEditorValue"],[[30,[36,0],null,[["x","y","z"],[0,0,5]]],[30,[36,0],null,[["x","y","z"],[0,0,0]]],[32,0,["sceneEditorValue"]],[32,0,["vertexEditorValue"]],[32,0,["fragmentEditorValue"]]]],null]],"hasEval":false,"upvars":["hash"]}',moduleName:"fundamentals/pods/components/figures/getting-started/per-pixel-lighting/template.hbs"})
e.default=t})),define("fundamentals/pods/components/figures/getting-started/per-vertex-lighting/component",["exports","@glimmer/component"],(function(e,t){function n(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function r(e,t){return(r=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function o(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1
if(Reflect.construct.sham)return!1
if("function"==typeof Proxy)return!0
try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}()
return function(){var n,r=s(e)
if(t){var o=s(this).constructor
n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments)
return a(this,n)}}function a(e,t){return!t||"object"!==_typeof(t)&&"function"!=typeof t?i(e):t}function i(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
return e}function s(e){return(s=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var u=function(e){(function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function")
e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&r(e,t)})(a,e)
var t=o(a)
function a(){var e
n(this,a)
for(var r=arguments.length,o=new Array(r),s=0;s<r;s++)o[s]=arguments[s]
return l(i(e=t.call.apply(t,[this].concat(o))),"sceneEditorValue","\nconst sphere = new THREE.Mesh(\n    new THREE.SphereBufferGeometry(1, 32, 32),\n    new THREE.ShaderMaterial({\n        vertexShader: vertexShaderSource,\n        fragmentShader: fragmentShaderSource,\n    })\n);\n\nscene.add(sphere);\n"),l(i(e),"vertexEditorValue","\nvarying vec4 vColor;\n\nvoid main() {\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n    vec3 vPos = (modelViewMatrix * vec4(position, 1.0)).xyz;\n    vec3 vNormal = normalMatrix * normal;\n\n    vec3 lightPos = (viewMatrix * vec4(1.0, 1.0, 1.0, 1.0)).xyz;\n    float attenuation = 1.0 / pow(length(lightPos - vPos), 2.0);\n    vec3 lightDir = normalize(lightPos - vPos);\n    vec3 lightDirView = (viewMatrix * normalize(vec4(lightDir, 0.0))).xyz;\n\n    vColor = vec4(1.0, 1.0, 0.0, 1.0) * max(dot(lightDirView, vNormal), 0.0);\n}\n"),l(i(e),"fragmentEditorValue","\nvarying vec4 vColor;\n\nvoid main() {\n    gl_FragColor = vColor;\n}\n"),e}return a}(t.default)
e.default=u})),define("fundamentals/pods/components/figures/getting-started/per-vertex-lighting/template",["exports"],(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.HTMLBars.template({id:"71bKTcSm",block:'{"symbols":[],"statements":[[8,"demo-viewer",[],[["@cameraPosition","@cameraLookAt","@sceneEditorValue","@vertexEditorValue","@fragmentEditorValue"],[[30,[36,0],null,[["x","y","z"],[0,0,5]]],[30,[36,0],null,[["x","y","z"],[0,0,0]]],[32,0,["sceneEditorValue"]],[32,0,["vertexEditorValue"]],[32,0,["fragmentEditorValue"]]]],null]],"hasEval":false,"upvars":["hash"]}',moduleName:"fundamentals/pods/components/figures/getting-started/per-vertex-lighting/template.hbs"})
e.default=t})),define("fundamentals/pods/components/figures/getting-started/texture/component",["exports","@glimmer/component","fundamentals/config/environment"],(function(e,t,n){function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function o(e,t){return(o=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function a(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1
if(Reflect.construct.sham)return!1
if("function"==typeof Proxy)return!0
try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}()
return function(){var n,r=l(e)
if(t){var o=l(this).constructor
n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments)
return i(this,n)}}function i(e,t){return!t||"object"!==_typeof(t)&&"function"!=typeof t?s(e):t}function s(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
return e}function l(e){return(l=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function u(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var c=function(e){(function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function")
e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&o(e,t)})(i,e)
var t=a(i)
function i(){var e
r(this,i)
for(var o=arguments.length,a=new Array(o),l=0;l<o;l++)a[l]=arguments[l]
return u(s(e=t.call.apply(t,[this].concat(a))),"sceneEditorValue","\nconst loader = new THREE.TextureLoader();\n\nloader.load('".concat(n.default.rootURL,"textures/castle_wall-9f8741be56b9c1ad074c0479269223d1.jpg', function (texture) {\n    const sphere = new THREE.Mesh(\n        new THREE.SphereBufferGeometry(1, 32, 32), // creates a sphere with radius 1 with 32 segments horizontally and vertically\n        new THREE.ShaderMaterial({\n            /// new code block ///\n            uniforms: {\n                map: {\n                    value: texture,\n                },\n            },\n            //////////////////////\n            vertexShader: vertexShaderSource, // vertexShaderSource is the content of the vertex shader editor\n            fragmentShader: fragmentShaderSource, // fragmentShaderSource is the content of the fragment shader editor\n        })\n    );\n\n    scene.add(sphere);\n});\n")),u(s(e),"vertexEditorValue","\nvarying vec2 vUv;\n\nvoid main() {\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n    vUv = uv;\n}\n"),u(s(e),"fragmentEditorValue","\nvarying vec3 vPos;\nvarying vec3 vNormal;\nvarying vec2 vUv;\n\nuniform sampler2D map;\n\nvoid main() {\n    gl_FragColor = texture(map, vUv);\n}\n"),e}return i}(t.default)
e.default=c})),define("fundamentals/pods/components/figures/getting-started/texture/template",["exports"],(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.HTMLBars.template({id:"2SX6el6K",block:'{"symbols":[],"statements":[[8,"demo-viewer",[],[["@cameraPosition","@cameraLookAt","@sceneEditorValue","@vertexEditorValue","@fragmentEditorValue"],[[30,[36,0],null,[["x","y","z"],[0,0,5]]],[30,[36,0],null,[["x","y","z"],[0,0,0]]],[32,0,["sceneEditorValue"]],[32,0,["vertexEditorValue"]],[32,0,["fragmentEditorValue"]]]],null]],"hasEval":false,"upvars":["hash"]}',moduleName:"fundamentals/pods/components/figures/getting-started/texture/template.hbs"})
e.default=t})),define("fundamentals/pods/components/figures/getting-started/uniform-color/component",["exports","@glimmer/component"],(function(e,t){function n(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function r(e,t){return(r=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function o(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1
if(Reflect.construct.sham)return!1
if("function"==typeof Proxy)return!0
try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}()
return function(){var n,r=s(e)
if(t){var o=s(this).constructor
n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments)
return a(this,n)}}function a(e,t){return!t||"object"!==_typeof(t)&&"function"!=typeof t?i(e):t}function i(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
return e}function s(e){return(s=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var u=function(e){(function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function")
e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&r(e,t)})(a,e)
var t=o(a)
function a(){var e
n(this,a)
for(var r=arguments.length,o=new Array(r),s=0;s<r;s++)o[s]=arguments[s]
return l(i(e=t.call.apply(t,[this].concat(o))),"sceneEditorValue","\nconst sphere = new THREE.Mesh(\n    new THREE.SphereBufferGeometry(1, 32, 32), // creates a sphere with radius 1 with 32 segments horizontally and vertically\n    new THREE.ShaderMaterial({\n        uniforms: {\n            color: {\n                value: new THREE.Color(0xffff00),\n            },\n        },\n        vertexShader: vertexShaderSource, // vertexShaderSource is the content of the vertex shader editor\n        fragmentShader: fragmentShaderSource, // fragmentShaderSource is the content of the fragment shader editor\n    })\n);\n\nscene.add(sphere);\n"),l(i(e),"vertexEditorValue","\nvoid main()\n{\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n}\n"),l(i(e),"fragmentEditorValue","\nuniform vec3 color;\n\nvoid main() {\n    gl_FragColor = vec4(color, 1.0);\n}\n"),e}return a}(t.default)
e.default=u})),define("fundamentals/pods/components/figures/getting-started/uniform-color/template",["exports"],(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.HTMLBars.template({id:"xNvhOi2M",block:'{"symbols":[],"statements":[[8,"demo-viewer",[],[["@cameraPosition","@cameraLookAt","@sceneEditorValue","@vertexEditorValue","@fragmentEditorValue"],[[30,[36,0],null,[["x","y","z"],[0,0,5]]],[30,[36,0],null,[["x","y","z"],[0,0,0]]],[32,0,["sceneEditorValue"]],[32,0,["vertexEditorValue"]],[32,0,["fragmentEditorValue"]]]],null]],"hasEval":false,"upvars":["hash"]}',moduleName:"fundamentals/pods/components/figures/getting-started/uniform-color/template.hbs"})
e.default=t})),define("fundamentals/pods/components/figures/getting-started/vertex-colors/component",["exports","@glimmer/component"],(function(e,t){function n(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function r(e,t){return(r=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function o(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1
if(Reflect.construct.sham)return!1
if("function"==typeof Proxy)return!0
try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}()
return function(){var n,r=s(e)
if(t){var o=s(this).constructor
n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments)
return a(this,n)}}function a(e,t){return!t||"object"!==_typeof(t)&&"function"!=typeof t?i(e):t}function i(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
return e}function s(e){return(s=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var u=function(e){(function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function")
e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&r(e,t)})(a,e)
var t=o(a)
function a(){var e
n(this,a)
for(var r=arguments.length,o=new Array(r),s=0;s<r;s++)o[s]=arguments[s]
return l(i(e=t.call.apply(t,[this].concat(o))),"sceneEditorValue","\nconst sphereGeometry = new THREE.SphereBufferGeometry(1, 32, 32);\nconst colors = [];\n\nfor (let i = 0; i < sphereGeometry.getAttribute('position').count; ++i) {\n    const color = [Math.random(255), Math.random(255), Math.random(255)];\n    colors.push(color[0], color[1], color[2]);\n}\n\nsphereGeometry.setAttribute('color', new THREE.Float32Attribute(colors, 3));\n\n\nconst sphere = new THREE.Mesh(\n    sphereGeometry,\n    new THREE.ShaderMaterial({\n        vertexColors: true, // enables vertex coloring so vColor is available to our shader\n        vertexShader: vertexShaderSource, // vertexShaderSource is the content of the vertex shader editor\n        fragmentShader: fragmentShaderSource, // fragmentShaderSource is the content of the fragment shader editor\n    })\n);\n\nscene.add(sphere);\n"),l(i(e),"vertexEditorValue","\nvarying vec3 outColor;\n\nvoid main()\n{\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n    outColor = color;\n}\n"),l(i(e),"fragmentEditorValue","\nvarying vec3 outColor;\n\nvoid main()\n{\n    gl_FragColor = vec4(outColor, 1.0);\n}\n"),e}return a}(t.default)
e.default=u})),define("fundamentals/pods/components/figures/getting-started/vertex-colors/template",["exports"],(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.HTMLBars.template({id:"9OBtfK1/",block:'{"symbols":[],"statements":[[8,"demo-viewer",[],[["@cameraPosition","@cameraLookAt","@sceneEditorValue","@vertexEditorValue","@fragmentEditorValue"],[[30,[36,0],null,[["x","y","z"],[0,0,5]]],[30,[36,0],null,[["x","y","z"],[0,0,0]]],[32,0,["sceneEditorValue"]],[32,0,["vertexEditorValue"]],[32,0,["fragmentEditorValue"]]]],null]],"hasEval":false,"upvars":["hash"]}',moduleName:"fundamentals/pods/components/figures/getting-started/vertex-colors/template.hbs"})
e.default=t})),define("fundamentals/pods/components/figures/getting-started/vertex-gen/component",["exports","@glimmer/component"],(function(e,t){function n(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function r(e,t){return(r=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function o(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1
if(Reflect.construct.sham)return!1
if("function"==typeof Proxy)return!0
try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}()
return function(){var n,r=s(e)
if(t){var o=s(this).constructor
n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments)
return a(this,n)}}function a(e,t){return!t||"object"!==_typeof(t)&&"function"!=typeof t?i(e):t}function i(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
return e}function s(e){return(s=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var u=function(e){(function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function")
e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&r(e,t)})(a,e)
var t=o(a)
function a(){var e
n(this,a)
for(var r=arguments.length,o=new Array(r),s=0;s<r;s++)o[s]=arguments[s]
return l(i(e=t.call.apply(t,[this].concat(o))),"sceneEditorValue","\nconst sphere = new THREE.Mesh(\n    new THREE.SphereBufferGeometry(1, 32, 32),\n    new THREE.ShaderMaterial({\n        vertexShader: vertexShaderSource,\n        fragmentShader: fragmentShaderSource,\n    })\n);\n\nscene.add(sphere);\n"),l(i(e),"vertexEditorValue","\nvarying vec3 outColor;\n\nvoid main()\n{\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n    outColor=vec3(uv.s, uv.t, 0.0); // uv is another vertex attribute which automatically gets declared by THREE.js and setup with SphereBufferGeometry\n}\n"),l(i(e),"fragmentEditorValue","\nvarying vec3 outColor;\n\nvoid main()\n{\n    gl_FragColor = vec4(outColor, 1.0);\n}\n"),e}return a}(t.default)
e.default=u})),define("fundamentals/pods/components/figures/getting-started/vertex-gen/template",["exports"],(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.HTMLBars.template({id:"q0zm1T4C",block:'{"symbols":[],"statements":[[8,"demo-viewer",[],[["@cameraPosition","@cameraLookAt","@sceneEditorValue","@vertexEditorValue","@fragmentEditorValue"],[[30,[36,0],null,[["x","y","z"],[0,0,5]]],[30,[36,0],null,[["x","y","z"],[0,0,0]]],[32,0,["sceneEditorValue"]],[32,0,["vertexEditorValue"]],[32,0,["fragmentEditorValue"]]]],null]],"hasEval":false,"upvars":["hash"]}',moduleName:"fundamentals/pods/components/figures/getting-started/vertex-gen/template.hbs"})
e.default=t})),define("fundamentals/pods/components/figures/gltf-loader/template",["exports"],(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.HTMLBars.template({id:"DUFNufJ9",block:'{"symbols":["parent","@props"],"statements":[[8,"demo-viewer",[],[["@cameraPosition","@cameraLookAt","@iframeIdentifier","@hdr"],[[30,[36,0],null,[["x","y","z"],[0,0,10]]],[30,[36,0],null,[["x","y","z"],[0,0,0]]],"gltf-loader",[32,2,["hdr"]]]],[["default"],[{"statements":[[2,"\\n    "],[8,"gltf-model",[],[["@parent","@modelSrc","@modelPosition","@modelRotation"],[[32,1],[32,2,["modelSrc"]],[32,2,["modelPosition"]],[32,2,["modelRotation"]]]],null],[2,"\\n"]],"parameters":[1]}]]]],"hasEval":false,"upvars":["hash"]}',moduleName:"fundamentals/pods/components/figures/gltf-loader/template.hbs"})
e.default=t})),define("fundamentals/pods/components/figures/hello-world/component",["exports","@glimmer/component","three"],(function(e,t,n){var r,o
function a(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){for(var n=0;n<t.length;n++){var r=t[n]
r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function s(e,t){return(s=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function l(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1
if(Reflect.construct.sham)return!1
if("function"==typeof Proxy)return!0
try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}()
return function(){var n,r=c(e)
if(t){var o=c(this).constructor
n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments)
return u(this,n)}}function u(e,t){return!t||"object"!==_typeof(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
return e}(e):t}function c(e){return(c=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var f,d,p,m,h,b,y=(r=Ember._action,o=function(e){(function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function")
e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&s(e,t)})(u,e)
var t,n,r,o=l(u)
function u(){return a(this,u),o.apply(this,arguments)}return t=u,(n=[{key:"onSceneInsert",value:function(e){}}])&&i(t.prototype,n),r&&i(t,r),u}(t.default),f=o.prototype,d="onSceneInsert",p=[r],m=Object.getOwnPropertyDescriptor(o.prototype,"onSceneInsert"),h=o.prototype,b={},Object.keys(m).forEach((function(e){b[e]=m[e]})),b.enumerable=!!b.enumerable,b.configurable=!!b.configurable,("value"in b||b.initializer)&&(b.writable=!0),b=p.slice().reverse().reduce((function(e,t){return t(f,d,e)||e}),b),h&&void 0!==b.initializer&&(b.value=b.initializer?b.initializer.call(h):void 0,b.initializer=void 0),void 0===b.initializer&&(Object.defineProperty(f,d,b),b=null),o)
e.default=y})),define("fundamentals/pods/components/figures/hello-world/template",["exports"],(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.HTMLBars.template({id:"0FQ0iFei",block:'{"symbols":[],"statements":[[8,"demo-viewer",[],[["@cameraPosition","@cameraLookAt","@sceneEditorValue","@vertexEditorValue","@fragmentEditorValue","@onSceneInsert"],[[30,[36,0],null,[["x","y","z"],[0,5,10]]],[30,[36,0],null,[["x","y","z"],[0,0,0]]],[32,0,["sceneEditorValue"]],[32,0,["vertexEditorValue"]],[32,0,["fragmentEditorValue"]],[32,0,["onSceneInsert"]]]],[["default"],[{"statements":[[2,"\\n"]],"parameters":[]}]]]],"hasEval":false,"upvars":["hash"]}',moduleName:"fundamentals/pods/components/figures/hello-world/template.hbs"})
e.default=t}))
function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}define("fundamentals/pods/components/figures/math/adding-vec/component",["exports","@glimmer/component","three"],(function(e,t,n){var r,o,a
function i(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function s(e,t){for(var n=0;n<t.length;n++){var r=t[n]
r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function l(e,t){return(l=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function u(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1
if(Reflect.construct.sham)return!1
if("function"==typeof Proxy)return!0
try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}()
return function(){var n,r=d(e)
if(t){var o=d(this).constructor
n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments)
return c(this,n)}}function c(e,t){return!t||"object"!==_typeof(t)&&"function"!=typeof t?f(e):t}function f(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
return e}function d(e){return(d=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function p(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function m(e,t,n,r,o){var a={}
return Object.keys(r).forEach((function(e){a[e]=r[e]})),a.enumerable=!!a.enumerable,a.configurable=!!a.configurable,("value"in a||a.initializer)&&(a.writable=!0),a=n.slice().reverse().reduce((function(n,r){return r(e,t,n)||n}),a),o&&void 0!==a.initializer&&(a.value=a.initializer?a.initializer.call(o):void 0,a.initializer=void 0),void 0===a.initializer&&(Object.defineProperty(e,t,a),a=null),a}Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var h=(r=Ember._action,o=Ember._action,m((a=function(e){(function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function")
e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&l(e,t)})(c,e)
var t,r,o,a=u(c)
function c(){var e
i(this,c)
for(var t=arguments.length,n=new Array(t),r=0;r<t;r++)n[r]=arguments[r]
return p(f(e=a.call.apply(a,[this].concat(n))),"controlDef",{"Vector A":{x:{min:-5,max:5,default:1},y:{min:-5,max:5,default:0},z:{min:-5,max:5,default:0}},"Vector B":{x:{min:-5,max:5,default:0},y:{min:-5,max:5,default:1},z:{min:-5,max:5,default:0}}}),e}return t=c,(r=[{key:"createObjects",value:function(e){this.aObject=new n.default.ArrowHelper(this.a.clone().normalize(),new n.default.Vector3(0,0,0),this.a.length(),16711680),this.bObject=new n.default.ArrowHelper(this.b.clone().normalize(),this.a,this.b.length(),65280)
var t=this.a.clone().add(this.b)
this.cObject=new n.default.ArrowHelper(t.clone().normalize(),new n.default.Vector3(0,0,0),t.length(),16776960),e.add(this.aObject),e.add(this.bObject),e.add(this.cObject)}},{key:"onSceneInsert",value:function(e){this.a=new n.default.Vector3(1,0,0),this.b=new n.default.Vector3(0,1,0),this.xyPlane=new n.default.GridHelper(100,20),this.xyPlane.rotation.x=Math.PI/2,this.xzPlane=new n.default.GridHelper(100,20),e.add(new n.default.AxesHelper(5)),e.add(this.xzPlane),e.add(this.xyPlane),this.group=new n.default.Group,this.createObjects(this.group),e.add(this.group)}},{key:"onControlChanged",value:function(e,t){switch(e){case"Vector A.x":this.a.x=t
break
case"Vector A.y":this.a.y=t
break
case"Vector A.z":this.a.z=t
break
case"Vector B.x":this.b.x=t
break
case"Vector B.y":this.b.y=t
break
case"Vector B.z":this.b.z=t}this.aObject.line.geometry.dispose(),this.aObject.cone.geometry.dispose(),this.bObject.line.geometry.dispose(),this.bObject.cone.geometry.dispose(),this.group.clear(),this.createObjects(this.group)}}])&&s(t.prototype,r),o&&s(t,o),c}(t.default)).prototype,"onSceneInsert",[r],Object.getOwnPropertyDescriptor(a.prototype,"onSceneInsert"),a.prototype),m(a.prototype,"onControlChanged",[o],Object.getOwnPropertyDescriptor(a.prototype,"onControlChanged"),a.prototype),a)
e.default=h})),define("fundamentals/pods/components/figures/math/adding-vec/template",["exports"],(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.HTMLBars.template({id:"vnLljeH9",block:'{"symbols":[],"statements":[[8,"demo-viewer",[],[["@cameraPosition","@cameraLookAt","@controlDef","@onSceneInsert","@onControlChanged"],[[30,[36,0],null,[["x","y","z"],[0,0,2]]],[30,[36,0],null,[["x","y","z"],[0,0,0]]],[32,0,["controlDef"]],[32,0,["onSceneInsert"]],[32,0,["onControlChanged"]]]],null]],"hasEval":false,"upvars":["hash"]}',moduleName:"fundamentals/pods/components/figures/math/adding-vec/template.hbs"})
e.default=t})),define("fundamentals/pods/components/figures/math/chaining/component",["exports","@glimmer/component","three"],(function(e,t,n){var r,o,a
function i(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function s(e,t){for(var n=0;n<t.length;n++){var r=t[n]
r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function l(e,t){return(l=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function u(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1
if(Reflect.construct.sham)return!1
if("function"==typeof Proxy)return!0
try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}()
return function(){var n,r=d(e)
if(t){var o=d(this).constructor
n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments)
return c(this,n)}}function c(e,t){return!t||"object"!==_typeof(t)&&"function"!=typeof t?f(e):t}function f(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
return e}function d(e){return(d=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function p(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function m(e,t,n,r,o){var a={}
return Object.keys(r).forEach((function(e){a[e]=r[e]})),a.enumerable=!!a.enumerable,a.configurable=!!a.configurable,("value"in a||a.initializer)&&(a.writable=!0),a=n.slice().reverse().reduce((function(n,r){return r(e,t,n)||n}),a),o&&void 0!==a.initializer&&(a.value=a.initializer?a.initializer.call(o):void 0,a.initializer=void 0),void 0===a.initializer&&(Object.defineProperty(e,t,a),a=null),a}Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var h=(r=Ember._action,o=Ember._action,m((a=function(e){(function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function")
e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&l(e,t)})(c,e)
var t,r,o,a=u(c)
function c(){var e
i(this,c)
for(var t=arguments.length,r=new Array(t),o=0;o<t;o++)r[o]=arguments[o]
return p(f(e=a.call.apply(a,[this].concat(r))),"translation",new n.default.Vector3),p(f(e),"rotation",new n.default.Euler),p(f(e),"scale",new n.default.Vector3(1,1,1)),p(f(e),"order","trs"),p(f(e),"controlDef",{translate:{x:{min:-5,max:5,default:0},y:{min:-5,max:5,default:0},z:{min:-5,max:5,default:0}},rotate:{x:{min:-180,max:180,default:0},y:{min:-180,max:180,default:0},z:{min:-180,max:180,default:0}},scale:{x:{min:-5,max:5,default:1},y:{min:-5,max:5,default:1},z:{min:-5,max:5,default:1}},chaining:{order:["trs","rst"]}}),e}return t=c,(r=[{key:"changeTransform",value:function(e,t,r,o){var a=new n.default.Matrix4,i=(new n.default.Matrix4).makeTranslation(t.x,t.y,t.z),s=(new n.default.Matrix4).makeRotationFromEuler(r),l=(new n.default.Matrix4).makeScale(o.x,o.y,o.z)
switch(e){case"trs":a.multiply(i).multiply(s).multiply(l)
break
case"rst":a.multiply(s).multiply(l).multiply(i)}this.box.rotation.set(0,0,0),this.box.position.set(0,0,0),this.box.scale.set(1,1,1),this.box.applyMatrix4(a)}},{key:"onSceneInsert",value:function(e){this.box=new n.default.Mesh(new n.default.BoxBufferGeometry(1,1,1),new n.MeshPhongMaterial({color:255})),e.add(this.box)}},{key:"onControlChanged",value:function(e,t){switch(e){case"translate.x":this.translation.x=t
break
case"translate.y":this.translation.y=t
break
case"translate.z":this.translation.z=t
break
case"rotate.x":this.rotation.x=t*n.default.MathUtils.DEG2RAD
break
case"rotate.y":this.rotation.y=t*n.default.MathUtils.DEG2RAD
break
case"rotate.z":this.rotation.z=t*n.default.MathUtils.DEG2RAD
break
case"scale.x":this.scale.x=t
break
case"scale.y":this.scale.y=t
break
case"scale.z":this.scale.z=t
break
case"chaining.order":this.order=t}this.changeTransform(this.order,this.translation,this.rotation,this.scale)}}])&&s(t.prototype,r),o&&s(t,o),c}(t.default)).prototype,"onSceneInsert",[r],Object.getOwnPropertyDescriptor(a.prototype,"onSceneInsert"),a.prototype),m(a.prototype,"onControlChanged",[o],Object.getOwnPropertyDescriptor(a.prototype,"onControlChanged"),a.prototype),a)
e.default=h})),define("fundamentals/pods/components/figures/math/chaining/template",["exports"],(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.HTMLBars.template({id:"CcJEz5k3",block:'{"symbols":[],"statements":[[8,"demo-viewer",[],[["@cameraPosition","@cameraLookAt","@controlDef","@onSceneInsert","@onControlChanged"],[[30,[36,0],null,[["x","y","z"],[0,0,5]]],[30,[36,0],null,[["x","y","z"],[0,0,0]]],[32,0,["controlDef"]],[32,0,["onSceneInsert"]],[32,0,["onControlChanged"]]]],null]],"hasEval":false,"upvars":["hash"]}',moduleName:"fundamentals/pods/components/figures/math/chaining/template.hbs"})
e.default=t})),define("fundamentals/pods/components/figures/math/cross-product/component",["exports","@glimmer/component","three"],(function(e,t,n){var r,o,a
function i(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function s(e,t){for(var n=0;n<t.length;n++){var r=t[n]
r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function l(e,t){return(l=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function u(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1
if(Reflect.construct.sham)return!1
if("function"==typeof Proxy)return!0
try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}()
return function(){var n,r=d(e)
if(t){var o=d(this).constructor
n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments)
return c(this,n)}}function c(e,t){return!t||"object"!==_typeof(t)&&"function"!=typeof t?f(e):t}function f(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
return e}function d(e){return(d=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function p(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function m(e,t,n,r,o){var a={}
return Object.keys(r).forEach((function(e){a[e]=r[e]})),a.enumerable=!!a.enumerable,a.configurable=!!a.configurable,("value"in a||a.initializer)&&(a.writable=!0),a=n.slice().reverse().reduce((function(n,r){return r(e,t,n)||n}),a),o&&void 0!==a.initializer&&(a.value=a.initializer?a.initializer.call(o):void 0,a.initializer=void 0),void 0===a.initializer&&(Object.defineProperty(e,t,a),a=null),a}Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var h=(r=Ember._action,o=Ember._action,m((a=function(e){(function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function")
e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&l(e,t)})(c,e)
var t,r,o,a=u(c)
function c(){var e
i(this,c)
for(var t=arguments.length,n=new Array(t),r=0;r<t;r++)n[r]=arguments[r]
return p(f(e=a.call.apply(a,[this].concat(n))),"controlDef",{cross:{angle:{min:-180,max:180,default:45}}}),e}return t=c,(r=[{key:"updateAngle",value:function(e){var t=new n.default.Vector3(1,0,0).applyMatrix4((new n.default.Matrix4).makeRotationY(e*n.default.MathUtils.DEG2RAD))
this.vecB.setDirection(t)
var r=new n.default.Vector3(1,0,0).cross(t)
this.vecC.setDirection(r.clone().normalize()),this.vecC.setLength(r.length()),this.arc&&this.arc.geometry.dispose()
var o=n.default.MathUtils.degToRad(e),a=e>=0?0:2*Math.PI+o,i=o,s=(Math.sin(o)+1)/2
this.arc.geometry=new n.default.CircleBufferGeometry(.5,35,a,Math.abs(i)),this.arc.material.color=new n.default.Color(s,s,s)}},{key:"onSceneInsert",value:function(e){this.vecA=new n.default.ArrowHelper(new n.default.Vector3(1,0,0)),this.vecB=new n.default.ArrowHelper(new n.default.Vector3(1,0,0)),this.vecC=new n.default.ArrowHelper(new n.default.Vector3(0,1,0))
var t=new n.default.AxesHelper(5)
this.arc=new n.default.Mesh,this.arc.material=new n.default.MeshBasicMaterial({side:n.default.DoubleSide,transparent:!0,opacity:.5}),this.arc.rotation.x=-Math.PI/2,this.updateAngle(45),e.add(t),e.add(this.vecA),e.add(this.vecB),e.add(this.vecC),e.add(this.arc)}},{key:"onControlChanged",value:function(e,t){this.updateAngle(t)}}])&&s(t.prototype,r),o&&s(t,o),c}(t.default)).prototype,"onSceneInsert",[r],Object.getOwnPropertyDescriptor(a.prototype,"onSceneInsert"),a.prototype),m(a.prototype,"onControlChanged",[o],Object.getOwnPropertyDescriptor(a.prototype,"onControlChanged"),a.prototype),a)
e.default=h})),define("fundamentals/pods/components/figures/math/cross-product/template",["exports"],(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.HTMLBars.template({id:"t9iA6ySB",block:'{"symbols":[],"statements":[[8,"demo-viewer",[],[["@cameraPosition","@cameraLookAt","@controlDef","@onSceneInsert","@onControlChanged"],[[30,[36,0],null,[["x","y","z"],[1,1,1]]],[30,[36,0],null,[["x","y","z"],[0,0,0]]],[32,0,["controlDef"]],[32,0,["onSceneInsert"]],[32,0,["onControlChanged"]]]],null]],"hasEval":false,"upvars":["hash"]}',moduleName:"fundamentals/pods/components/figures/math/cross-product/template.hbs"})
e.default=t})),define("fundamentals/pods/components/figures/math/directional-vectors/component",["exports","@glimmer/component","three"],(function(e,t,n){var r,o
function a(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){for(var n=0;n<t.length;n++){var r=t[n]
r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function s(e,t){return(s=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function l(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1
if(Reflect.construct.sham)return!1
if("function"==typeof Proxy)return!0
try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}()
return function(){var n,r=c(e)
if(t){var o=c(this).constructor
n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments)
return u(this,n)}}function u(e,t){return!t||"object"!==_typeof(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
return e}(e):t}function c(e){return(c=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var f,d,p,m,h,b,y=(r=Ember._action,o=function(e){(function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function")
e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&s(e,t)})(c,e)
var t,r,o,u=l(c)
function c(){return a(this,c),u.apply(this,arguments)}return t=c,(r=[{key:"onSceneInsert",value:function(e){var t=new n.default.GridHelper(10,10)
t.rotation.x=Math.PI/2
var r=new n.default.Mesh(new n.default.BoxBufferGeometry(1,1,1),new n.default.MeshBasicMaterial({color:16776960}))
r.position.set(1.5,1.5,0)
var o=new n.default.ArrowHelper(new n.default.Vector3(.707,.707,0),new n.default.Vector3(0,0,0),1.414)
e.add(t),e.add(r),e.add(o)}}])&&i(t.prototype,r),o&&i(t,o),c}(t.default),f=o.prototype,d="onSceneInsert",p=[r],m=Object.getOwnPropertyDescriptor(o.prototype,"onSceneInsert"),h=o.prototype,b={},Object.keys(m).forEach((function(e){b[e]=m[e]})),b.enumerable=!!b.enumerable,b.configurable=!!b.configurable,("value"in b||b.initializer)&&(b.writable=!0),b=p.slice().reverse().reduce((function(e,t){return t(f,d,e)||e}),b),h&&void 0!==b.initializer&&(b.value=b.initializer?b.initializer.call(h):void 0,b.initializer=void 0),void 0===b.initializer&&(Object.defineProperty(f,d,b),b=null),o)
e.default=y})),define("fundamentals/pods/components/figures/math/directional-vectors/template",["exports"],(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.HTMLBars.template({id:"3+rdpky8",block:'{"symbols":[],"statements":[[8,"demo-viewer",[],[["@cameraPosition","@cameraLookAt","@onSceneInsert"],[[30,[36,0],null,[["x","y","z"],[0,0,5]]],[30,[36,0],null,[["x","y","z"],[0,0,0]]],[32,0,["onSceneInsert"]]]],null]],"hasEval":false,"upvars":["hash"]}',moduleName:"fundamentals/pods/components/figures/math/directional-vectors/template.hbs"})
e.default=t})),define("fundamentals/pods/components/figures/math/dot-product/component",["exports","@glimmer/component","three"],(function(e,t,n){var r,o,a
function i(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function s(e,t){for(var n=0;n<t.length;n++){var r=t[n]
r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function l(e,t){return(l=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function u(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1
if(Reflect.construct.sham)return!1
if("function"==typeof Proxy)return!0
try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}()
return function(){var n,r=d(e)
if(t){var o=d(this).constructor
n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments)
return c(this,n)}}function c(e,t){return!t||"object"!==_typeof(t)&&"function"!=typeof t?f(e):t}function f(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
return e}function d(e){return(d=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function p(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function m(e,t,n,r,o){var a={}
return Object.keys(r).forEach((function(e){a[e]=r[e]})),a.enumerable=!!a.enumerable,a.configurable=!!a.configurable,("value"in a||a.initializer)&&(a.writable=!0),a=n.slice().reverse().reduce((function(n,r){return r(e,t,n)||n}),a),o&&void 0!==a.initializer&&(a.value=a.initializer?a.initializer.call(o):void 0,a.initializer=void 0),void 0===a.initializer&&(Object.defineProperty(e,t,a),a=null),a}Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var h=(r=Ember._action,o=Ember._action,m((a=function(e){(function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function")
e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&l(e,t)})(c,e)
var t,r,o,a=u(c)
function c(){var e
i(this,c)
for(var t=arguments.length,n=new Array(t),r=0;r<t;r++)n[r]=arguments[r]
return p(f(e=a.call.apply(a,[this].concat(n))),"controlDef",{dot:{angle:{min:-180,max:180,default:45}}}),e}return t=c,(r=[{key:"updateAngle",value:function(e){this.vecB.setDirection(new n.default.Vector3(1,0,0).applyMatrix4((new n.default.Matrix4).makeRotationZ(e*n.default.MathUtils.DEG2RAD))),this.arc&&this.arc.geometry.dispose()
var t=n.default.MathUtils.degToRad(e),r=e>=0?0:2*Math.PI+t,o=t,a=(Math.cos(t)+1)/2
this.arc.geometry=new n.default.CircleBufferGeometry(.5,35,r,Math.abs(o)),this.arc.material.color=new n.default.Color(a,a,a)}},{key:"onSceneInsert",value:function(e){var t=new n.default.GridHelper(100,20)
t.rotation.x=Math.PI/2,this.vecA=new n.default.ArrowHelper(new n.default.Vector3(1,0,0)),this.vecB=new n.default.ArrowHelper(new n.default.Vector3(1,0,0)),this.arc=new n.default.Mesh,this.arc.material=new n.default.MeshBasicMaterial({side:n.default.DoubleSide}),this.updateAngle(45),e.add(t),e.add(this.vecA),e.add(this.vecB),e.add(this.arc)}},{key:"onControlChanged",value:function(e,t){this.updateAngle(t)}}])&&s(t.prototype,r),o&&s(t,o),c}(t.default)).prototype,"onSceneInsert",[r],Object.getOwnPropertyDescriptor(a.prototype,"onSceneInsert"),a.prototype),m(a.prototype,"onControlChanged",[o],Object.getOwnPropertyDescriptor(a.prototype,"onControlChanged"),a.prototype),a)
e.default=h})),define("fundamentals/pods/components/figures/math/dot-product/template",["exports"],(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.HTMLBars.template({id:"KtQ6qZ2J",block:'{"symbols":[],"statements":[[8,"demo-viewer",[],[["@cameraPosition","@cameraLookAt","@controlDef","@onSceneInsert","@onControlChanged"],[[30,[36,0],null,[["x","y","z"],[0,0,2]]],[30,[36,0],null,[["x","y","z"],[0,0,0]]],[32,0,["controlDef"]],[32,0,["onSceneInsert"]],[32,0,["onControlChanged"]]]],null]],"hasEval":false,"upvars":["hash"]}',moduleName:"fundamentals/pods/components/figures/math/dot-product/template.hbs"})
e.default=t})),define("fundamentals/pods/components/figures/math/gimbal-lock/component",["exports","@glimmer/component","@tweenjs/tween.js"],(function(e,t,n){var r,o,a,i,s,l,u,c,f,d,p,m
function h(e,t){for(var n=0;n<t.length;n++){var r=t[n]
r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function b(e,t){return(b=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function y(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1
if(Reflect.construct.sham)return!1
if("function"==typeof Proxy)return!0
try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}()
return function(){var n,r=w(e)
if(t){var o=w(this).constructor
n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments)
return g(this,n)}}function g(e,t){return!t||"object"!==_typeof(t)&&"function"!=typeof t?v(e):t}function v(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
return e}function w(e){return(w=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function x(e,t,n,r){n&&Object.defineProperty(e,t,{enumerable:n.enumerable,configurable:n.configurable,writable:n.writable,value:n.initializer?n.initializer.call(r):void 0})}function _(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function k(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function j(e,t,n,r,o){var a={}
return Object.keys(r).forEach((function(e){a[e]=r[e]})),a.enumerable=!!a.enumerable,a.configurable=!!a.configurable,("value"in a||a.initializer)&&(a.writable=!0),a=n.slice().reverse().reduce((function(n,r){return r(e,t,n)||n}),a),o&&void 0!==a.initializer&&(a.value=a.initializer?a.initializer.call(o):void 0,a.initializer=void 0),void 0===a.initializer&&(Object.defineProperty(e,t,a),a=null),a}Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var O=(r=Ember._tracked,o=Ember._tracked,a=Ember._tracked,s=j((i=function e(){_(this,e),x(this,"rotateX",s,this),x(this,"rotateY",l,this),x(this,"rotateZ",u,this)}).prototype,"rotateX",[r],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),l=j(i.prototype,"rotateY",[o],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),u=j(i.prototype,"rotateZ",[a],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),i),E=(c=Ember._tracked,f=Ember._action,m=function(e){(function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function")
e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&b(e,t)})(a,e)
var t,n,r,o=y(a)
function a(){var e
_(this,a)
for(var t=arguments.length,n=new Array(t),r=0;r<t;r++)n[r]=arguments[r]
return k(v(e=o.call.apply(o,[this].concat(n))),"controlDef",{Gimbal:{rotateX:{min:0,max:360,default:0},rotateY:{min:0,max:360,default:0},rotateZ:{min:0,max:360,default:0}}}),x(v(e),"controlData",p,v(e)),e}return t=a,(n=[{key:"onControlChanged",value:function(e,t){var n=e.replace("Gimbal.","")
this.controlData[n]=t}}])&&h(t.prototype,n),r&&h(t,r),a}(t.default),p=j((d=m).prototype,"controlData",[c],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new O}}),j(d.prototype,"onControlChanged",[f],Object.getOwnPropertyDescriptor(d.prototype,"onControlChanged"),d.prototype),d)
e.default=E})),define("fundamentals/pods/components/figures/math/gimbal-lock/template",["exports"],(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.HTMLBars.template({id:"qMVBDFsc",block:'{"symbols":["parent"],"statements":[[8,"demo-viewer",[],[["@cameraPosition","@cameraLookAt","@controlDef","@onControlChanged","@iframeIdentifier"],[[30,[36,0],null,[["x","y","z"],[0,5,10]]],[30,[36,0],null,[["x","y","z"],[0,0,0]]],[32,0,["controlDef"]],[32,0,["onControlChanged"]],"gimbal-lock"]],[["default"],[{"statements":[[2,"\\n    "],[8,"scene-object",[],[["@parent","@type","@constructorProps"],[[32,1],"GridHelper",[30,[36,2],[100,20,[30,[36,1],["0x3486eb"],null],[30,[36,1],["0x666666"],null]],null]]],null],[2,"\\n    "],[8,"gimbal",[],[["@parent","@rotateX","@rotateY","@rotateZ"],[[32,1],[32,0,["controlData","rotateX"]],[32,0,["controlData","rotateY"]],[32,0,["controlData","rotateZ"]]]],null],[2,"\\n"]],"parameters":[1]}]]]],"hasEval":false,"upvars":["hash","to-number","array"]}',moduleName:"fundamentals/pods/components/figures/math/gimbal-lock/template.hbs"})
e.default=t})),define("fundamentals/pods/components/figures/math/quaternion/component",["exports","@glimmer/component","three"],(function(e,t,n){var r,o,a
function i(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function s(e,t){for(var n=0;n<t.length;n++){var r=t[n]
r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function l(e,t){return(l=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function u(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1
if(Reflect.construct.sham)return!1
if("function"==typeof Proxy)return!0
try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}()
return function(){var n,r=d(e)
if(t){var o=d(this).constructor
n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments)
return c(this,n)}}function c(e,t){return!t||"object"!==_typeof(t)&&"function"!=typeof t?f(e):t}function f(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
return e}function d(e){return(d=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function p(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function m(e,t,n,r,o){var a={}
return Object.keys(r).forEach((function(e){a[e]=r[e]})),a.enumerable=!!a.enumerable,a.configurable=!!a.configurable,("value"in a||a.initializer)&&(a.writable=!0),a=n.slice().reverse().reduce((function(n,r){return r(e,t,n)||n}),a),o&&void 0!==a.initializer&&(a.value=a.initializer?a.initializer.call(o):void 0,a.initializer=void 0),void 0===a.initializer&&(Object.defineProperty(e,t,a),a=null),a}Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var h=(r=Ember._action,o=Ember._action,m((a=function(e){(function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function")
e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&l(e,t)})(c,e)
var t,r,o,a=u(c)
function c(){var e
i(this,c)
for(var t=arguments.length,n=new Array(t),r=0;r<t;r++)n[r]=arguments[r]
return p(f(e=a.call.apply(a,[this].concat(n))),"controlDef",{interpolation:{amount:{min:0,max:1,default:0}}}),e}return t=c,(r=[{key:"createPointSamples",value:function(e){this.points1=[],this.points2=[],this.numSamples=e
for(var t=0;t<e;t++){var n=this.interpolate(t/e),r=n.dir1,o=n.dir2
this.points1.push(r),this.points2.push(o)}}},{key:"interpolate",value:function(e){var t=this.quaternions.from.clone().slerp(this.quaternions.to,e),r=e*(this.rotations.to.x-this.rotations.from.x)+this.rotations.from.x,o=e*(this.rotations.to.y-this.rotations.from.y)+this.rotations.from.y,a=e*(this.rotations.to.z-this.rotations.from.z)+this.rotations.from.z,i=new n.default.Euler(r,o,a)
return{dir1:new n.default.Vector3(1,0,0).applyQuaternion(t),dir2:new n.default.Vector3(1,0,0).applyEuler(i)}}},{key:"updateGeometry",value:function(e){var t=Math.floor(this.numSamples*e)
this.curve1.geometry.dispose(),this.curve1.geometry=(new n.default.BufferGeometry).setFromPoints(this.points1.slice(0,t)),this.curve2.geometry.dispose(),this.curve2.geometry=(new n.default.BufferGeometry).setFromPoints(this.points2.slice(0,t))}},{key:"onSceneInsert",value:function(e){this.sphere1=new n.default.Mesh(new n.default.SphereBufferGeometry(1,30,30),new n.default.MeshPhongMaterial({color:16711680,transparent:!0,opacity:.2})),this.sphere1.position.x=-2,this.sphere2=new n.default.Mesh(new n.default.SphereBufferGeometry(1,30,30),new n.default.MeshPhongMaterial({color:255,transparent:!0,opacity:.2})),this.sphere2.position.x=2,this.rotations={from:new n.default.Euler(0,0,0),to:new n.default.Euler(-Math.PI/4,3*Math.PI,Math.PI/6)},this.quaternions={from:(new n.default.Quaternion).setFromEuler(this.rotations.from),to:(new n.default.Quaternion).setFromEuler(this.rotations.to)}
var t=new n.default.Vector3(1,0,0).applyEuler(this.rotations.from),r=new n.default.Vector3(1,0,0).applyEuler(this.rotations.from)
this.arrow1=new n.default.ArrowHelper(t,this.sphere1.position),this.arrow2=new n.default.ArrowHelper(r,this.sphere2.position),this.curve1=new n.default.Line,this.curve2=new n.default.Line,this.sphere1.add(this.curve1),this.sphere2.add(this.curve2),e.add(this.sphere1),e.add(this.sphere2),e.add(this.arrow1),e.add(this.arrow2),e.add(new n.default.GridHelper(10,10,16711680)),this.createPointSamples(50)}},{key:"onControlChanged",value:function(e,t){var n=this.interpolate(t),r=n.dir1,o=n.dir2
this.arrow1.setDirection(r),this.arrow2.setDirection(o),this.updateGeometry(t)}}])&&s(t.prototype,r),o&&s(t,o),c}(t.default)).prototype,"onSceneInsert",[r],Object.getOwnPropertyDescriptor(a.prototype,"onSceneInsert"),a.prototype),m(a.prototype,"onControlChanged",[o],Object.getOwnPropertyDescriptor(a.prototype,"onControlChanged"),a.prototype),a)
e.default=h})),define("fundamentals/pods/components/figures/math/quaternion/template",["exports"],(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.HTMLBars.template({id:"ItCVbLJ9",block:'{"symbols":[],"statements":[[8,"demo-viewer",[],[["@cameraPosition","@cameraLookAt","@controlDef","@onSceneInsert","@onControlChanged"],[[30,[36,0],null,[["x","y","z"],[0,0,5]]],[30,[36,0],null,[["x","y","z"],[0,0,0]]],[32,0,["controlDef"]],[32,0,["onSceneInsert"]],[32,0,["onControlChanged"]]]],null]],"hasEval":false,"upvars":["hash"]}',moduleName:"fundamentals/pods/components/figures/math/quaternion/template.hbs"})
e.default=t})),define("fundamentals/pods/components/figures/math/rotation-2d/component",["exports","@glimmer/component","three"],(function(e,t,n){var r,o,a,i,s,l
function u(e,t,n,r){n&&Object.defineProperty(e,t,{enumerable:n.enumerable,configurable:n.configurable,writable:n.writable,value:n.initializer?n.initializer.call(r):void 0})}function c(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function f(e,t){for(var n=0;n<t.length;n++){var r=t[n]
r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function d(e,t){return(d=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function p(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1
if(Reflect.construct.sham)return!1
if("function"==typeof Proxy)return!0
try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}()
return function(){var n,r=b(e)
if(t){var o=b(this).constructor
n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments)
return m(this,n)}}function m(e,t){return!t||"object"!==_typeof(t)&&"function"!=typeof t?h(e):t}function h(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
return e}function b(e){return(b=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function y(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function g(e,t,n,r,o){var a={}
return Object.keys(r).forEach((function(e){a[e]=r[e]})),a.enumerable=!!a.enumerable,a.configurable=!!a.configurable,("value"in a||a.initializer)&&(a.writable=!0),a=n.slice().reverse().reduce((function(n,r){return r(e,t,n)||n}),a),o&&void 0!==a.initializer&&(a.value=a.initializer?a.initializer.call(o):void 0,a.initializer=void 0),void 0===a.initializer&&(Object.defineProperty(e,t,a),a=null),a}Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var v=(r=Ember._tracked,o=Ember._action,a=Ember._action,l=function(e){(function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function")
e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&d(e,t)})(i,e)
var t,r,o,a=p(i)
function i(){var e
c(this,i)
for(var t=arguments.length,n=new Array(t),r=0;r<t;r++)n[r]=arguments[r]
return u(h(e=a.call.apply(a,[this].concat(n))),"rectangular",s,h(e)),y(h(e),"controlDef",{rotation:{angle:{min:-180,max:180,default:0}}}),e}return t=i,(r=[{key:"onSceneInsert",value:function(e){var t=new n.default.GridHelper(2,10)
t.rotation.x=Math.PI/2,this.vector=new n.default.ArrowHelper(new n.default.Vector3(1,0,0)),e.add(t),e.add(this.vector)}},{key:"onControlChanged",value:function(e,t){var r=t*n.default.MathUtils.DEG2RAD,o=new n.default.Vector3(Math.cos(r),Math.sin(r),0)
this.vector.setDirection(o),this.rectangular="(1 + 0\\boldsymbol{i}) \\times \\boldsymbol{e}^{\\boldsymbol{i}(".concat(t.toFixed(2)," \\degree)} = (").concat(o.x.toFixed(2)," + ").concat(o.y.toFixed(2),"\\boldsymbol{i})")}}])&&f(t.prototype,r),o&&f(t,o),i}(t.default),s=g((i=l).prototype,"rectangular",[r],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return"(1 + 0\\boldsymbol{i}) \\times \\boldsymbol{e}^{\\boldsymbol{i}(0 \\degree)} = (1 + 0\\boldsymbol{i})"}}),g(i.prototype,"onSceneInsert",[o],Object.getOwnPropertyDescriptor(i.prototype,"onSceneInsert"),i.prototype),g(i.prototype,"onControlChanged",[a],Object.getOwnPropertyDescriptor(i.prototype,"onControlChanged"),i.prototype),i)
e.default=v})),define("fundamentals/pods/components/figures/math/rotation-2d/template",["exports"],(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.HTMLBars.template({id:"rat7+op9",block:'{"symbols":[],"statements":[[8,"demo-viewer",[],[["@cameraPosition","@cameraLookAt","@controlDef","@onSceneInsert","@onControlChanged"],[[30,[36,0],null,[["x","y","z"],[0,0,2]]],[30,[36,0],null,[["x","y","z"],[0,0,0]]],[32,0,["controlDef"]],[32,0,["onSceneInsert"]],[32,0,["onControlChanged"]]]],null],[2,"\\n"],[10,"div"],[14,0,"absolute w-full h-full pointer-events-none"],[12],[2,"\\n    "],[10,"div"],[14,0,"absolute bottom-1 left-1 text-4l"],[12],[8,"katex-span",[],[["@content"],[[32,0,["rectangular"]]]],[["default"],[{"statements":[[1,[32,0,["rectangular"]]]],"parameters":[]}]]],[13],[2,"\\n"],[13]],"hasEval":false,"upvars":["hash"]}',moduleName:"fundamentals/pods/components/figures/math/rotation-2d/template.hbs"})
e.default=t})),define("fundamentals/pods/components/figures/math/scalar-mul/component",["exports","@glimmer/component","three"],(function(e,t,n){var r,o,a
function i(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function s(e,t){for(var n=0;n<t.length;n++){var r=t[n]
r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function l(e,t){return(l=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function u(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1
if(Reflect.construct.sham)return!1
if("function"==typeof Proxy)return!0
try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}()
return function(){var n,r=d(e)
if(t){var o=d(this).constructor
n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments)
return c(this,n)}}function c(e,t){return!t||"object"!==_typeof(t)&&"function"!=typeof t?f(e):t}function f(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
return e}function d(e){return(d=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function p(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function m(e,t,n,r,o){var a={}
return Object.keys(r).forEach((function(e){a[e]=r[e]})),a.enumerable=!!a.enumerable,a.configurable=!!a.configurable,("value"in a||a.initializer)&&(a.writable=!0),a=n.slice().reverse().reduce((function(n,r){return r(e,t,n)||n}),a),o&&void 0!==a.initializer&&(a.value=a.initializer?a.initializer.call(o):void 0,a.initializer=void 0),void 0===a.initializer&&(Object.defineProperty(e,t,a),a=null),a}Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var h=(r=Ember._action,o=Ember._action,m((a=function(e){(function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function")
e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&l(e,t)})(c,e)
var t,r,o,a=u(c)
function c(){var e
i(this,c)
for(var t=arguments.length,n=new Array(t),r=0;r<t;r++)n[r]=arguments[r]
return p(f(e=a.call.apply(a,[this].concat(n))),"controlDef",{Transform:{"scalar factor":{min:-5,max:5,default:1}}}),e}return t=c,(r=[{key:"createObjects",value:function(e){this.object=new n.default.ArrowHelper(this.vector.clone().normalize(),new n.default.Vector3(0,0,0),this.vector.length(),16711680),e.add(this.object)}},{key:"onSceneInsert",value:function(e){this.vector=new n.default.Vector3(.707,.707,0),this.scale=1,this.xyPlane=new n.default.GridHelper(100,20),this.xyPlane.rotation.x=Math.PI/2,this.xzPlane=new n.default.GridHelper(100,20),e.add(new n.default.AxesHelper(5)),e.add(this.xzPlane),e.add(this.xyPlane),this.group=new n.default.Group,this.createObjects(this.group),e.add(this.group)}},{key:"onControlChanged",value:function(e,t){switch(e){case"Transform.scalar factor":this.scale=t}this.vector=new n.default.Vector3(.707,.707,0).multiplyScalar(this.scale),this.object.line.geometry.dispose(),this.object.cone.geometry.dispose(),this.group.clear(),this.createObjects(this.group)}}])&&s(t.prototype,r),o&&s(t,o),c}(t.default)).prototype,"onSceneInsert",[r],Object.getOwnPropertyDescriptor(a.prototype,"onSceneInsert"),a.prototype),m(a.prototype,"onControlChanged",[o],Object.getOwnPropertyDescriptor(a.prototype,"onControlChanged"),a.prototype),a)
e.default=h})),define("fundamentals/pods/components/figures/math/scalar-mul/template",["exports"],(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.HTMLBars.template({id:"IDeQsc4Q",block:'{"symbols":[],"statements":[[8,"demo-viewer",[],[["@cameraPosition","@cameraLookAt","@controlDef","@onSceneInsert","@onControlChanged"],[[30,[36,0],null,[["x","y","z"],[0,0,2]]],[30,[36,0],null,[["x","y","z"],[0,0,0]]],[32,0,["controlDef"]],[32,0,["onSceneInsert"]],[32,0,["onControlChanged"]]]],null]],"hasEval":false,"upvars":["hash"]}',moduleName:"fundamentals/pods/components/figures/math/scalar-mul/template.hbs"})
e.default=t})),define("fundamentals/pods/components/figures/math/simple-triangle/component",["exports","@glimmer/component"],(function(e,t){function n(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function r(e,t){return(r=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function o(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1
if(Reflect.construct.sham)return!1
if("function"==typeof Proxy)return!0
try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}()
return function(){var n,r=s(e)
if(t){var o=s(this).constructor
n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments)
return a(this,n)}}function a(e,t){return!t||"object"!==_typeof(t)&&"function"!=typeof t?i(e):t}function i(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
return e}function s(e){return(s=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var u=function(e){(function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function")
e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&r(e,t)})(a,e)
var t=o(a)
function a(){var e
n(this,a)
for(var r=arguments.length,o=new Array(r),s=0;s<r;s++)o[s]=arguments[s]
return l(i(e=t.call.apply(t,[this].concat(o))),"sceneEditorValue","\nclass Triangle extends THREE.BufferGeometry {\n    constructor() {\n        super();\n\n        // defines the vertices for the triangle as 3 3D points\n        const vertices = [\n            -0.5, 0.0, 0.5, // point A\n            0.5, 0.0, 0.5, // point B\n            0.0, 0.0, -0.5 // point C\n        ];\n        const indices = [0, 1, 2]; // used to tell WebGL how to draw this triangle by teling it which vertex to use and in what order\n\n        // this will setup a buffer to pass onto the GPU which will be used as inputs into a program that draws the triangle on the GPU\n        this.setAttribute('position', new THREE.Float32BufferAttribute(vertices, 3));\n        // each vertex gets a normal\n        // for this triangle, all the normals point in the same direction\n        this.setAttribute('normal', new THREE.Float32BufferAttribute([0, 1, 0, 0, 1, 0, 0, 1, 0], 3));\n        this.setIndex(indices);\n    }\n}\n\nconst group = new THREE.Group();\ngroup.position.y = 0.5; // this moves our triangle and it's normal vector representation up by 0.5 units\n\nconst triangle = new THREE.Mesh(\n    new Triangle(),\n    new THREE.MeshPhongMaterial({\n        color: 0x156289,\n        side: THREE.DoubleSide,\n    })\n);\n\n// this is only a helper class, normals were defined in the Triangle BufferGeometry\nconst normal = new THREE.ArrowHelper(new THREE.Vector3(0, 1, 0));\n\ngroup.add(triangle);\ngroup.add(normal);\n\n// finally adds this to the scene\nscene.add(group);\n\n// the default directional light points up\nscene.add(new THREE.DirectionalLight());\n"),e}return a}(t.default)
e.default=u})),define("fundamentals/pods/components/figures/math/simple-triangle/template",["exports"],(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.HTMLBars.template({id:"7MJrl130",block:'{"symbols":["parent"],"statements":[[8,"demo-viewer",[],[["@cameraPosition","@cameraLookAt","@sceneEditorValue","@overrideLights"],[[30,[36,0],null,[["x","y","z"],[0,2,2]]],[30,[36,0],null,[["x","y","z"],[0,0,0]]],[34,1],true]],[["default"],[{"statements":[[2,"\\n    "],[8,"scene-object",[],[["@parent","@type","@constructorProps"],[[32,1],"GridHelper",[30,[36,3],[100,20,[30,[36,2],["0x3486eb"],null],[30,[36,2],["0x666666"],null]],null]]],null],[2,"\\n"]],"parameters":[1]}]]]],"hasEval":false,"upvars":["hash","sceneEditorValue","to-number","array"]}',moduleName:"fundamentals/pods/components/figures/math/simple-triangle/template.hbs"})
e.default=t})),define("fundamentals/pods/components/figures/math/surface/component",["exports","@glimmer/component","three"],(function(e,t,n){var r,o
function a(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){for(var n=0;n<t.length;n++){var r=t[n]
r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function s(e,t){return(s=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function l(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1
if(Reflect.construct.sham)return!1
if("function"==typeof Proxy)return!0
try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}()
return function(){var n,r=c(e)
if(t){var o=c(this).constructor
n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments)
return u(this,n)}}function u(e,t){return!t||"object"!==_typeof(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
return e}(e):t}function c(e){return(c=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var f,d,p,m,h,b,y=(r=Ember._action,o=function(e){(function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function")
e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&s(e,t)})(c,e)
var t,r,o,u=l(c)
function c(){return a(this,c),u.apply(this,arguments)}return t=c,(r=[{key:"onSceneInsert",value:function(e){var t=new n.default.Group,r=new n.default.Mesh(new n.default.PlaneBufferGeometry(2,2,1,1),new n.default.MeshPhongMaterial({color:1401481,side:n.default.DoubleSide}))
if(r.rotation.x=-Math.PI/2,t.add(r),this.args.props.enableWireframe){var o=new n.default.LineSegments(new n.default.WireframeGeometry(r.geometry),new n.default.LineBasicMaterial)
o.rotation.x=-Math.PI/2,t.add(o)}if(this.args.props.enableNormal){var a=new n.default.ArrowHelper(new n.default.Vector3(0,1,0))
t.add(a)}e.add(t)}}])&&i(t.prototype,r),o&&i(t,o),c}(t.default),f=o.prototype,d="onSceneInsert",p=[r],m=Object.getOwnPropertyDescriptor(o.prototype,"onSceneInsert"),h=o.prototype,b={},Object.keys(m).forEach((function(e){b[e]=m[e]})),b.enumerable=!!b.enumerable,b.configurable=!!b.configurable,("value"in b||b.initializer)&&(b.writable=!0),b=p.slice().reverse().reduce((function(e,t){return t(f,d,e)||e}),b),h&&void 0!==b.initializer&&(b.value=b.initializer?b.initializer.call(h):void 0,b.initializer=void 0),void 0===b.initializer&&(Object.defineProperty(f,d,b),b=null),o)
e.default=y})),define("fundamentals/pods/components/figures/math/surface/template",["exports"],(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.HTMLBars.template({id:"qxoI/9rm",block:'{"symbols":[],"statements":[[8,"demo-viewer",[],[["@cameraPosition","@cameraLookAt","@onSceneInsert"],[[30,[36,0],null,[["x","y","z"],[0,2,2]]],[30,[36,0],null,[["x","y","z"],[0,0,0]]],[32,0,["onSceneInsert"]]]],null]],"hasEval":false,"upvars":["hash"]}',moduleName:"fundamentals/pods/components/figures/math/surface/template.hbs"})
e.default=t})),define("fundamentals/pods/components/figures/math/transform-intuition/component",["exports","@glimmer/component","three","@tweenjs/tween.js"],(function(e,t,n,r){var o,a,i
function s(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function l(e,t){for(var n=0;n<t.length;n++){var r=t[n]
r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function u(e,t){return(u=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function c(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1
if(Reflect.construct.sham)return!1
if("function"==typeof Proxy)return!0
try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}()
return function(){var n,r=p(e)
if(t){var o=p(this).constructor
n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments)
return f(this,n)}}function f(e,t){return!t||"object"!==_typeof(t)&&"function"!=typeof t?d(e):t}function d(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
return e}function p(e){return(p=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function m(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var h,b,y,g,v,w,x=(o=Ember._action,i=function(e){(function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function")
e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&u(e,t)})(f,e)
var t,o,a,i=c(f)
function f(){var e
s(this,f)
for(var t=arguments.length,n=new Array(t),r=0;r<t;r++)n[r]=arguments[r]
return m(d(e=i.call.apply(i,[this].concat(n))),"originalPos",{x:1,y:0,z:0}),m(d(e),"translate",{from:{},to:{x:3,y:0,z:0}}),m(d(e),"rotate",{from:{},to:{x:0,y:0,z:Math.PI/2}}),e}return t=f,(o=[{key:"initializeKeyframes",value:function(){this.translate.from.x=0,this.translate.from.y=0,this.translate.from.z=0,this.rotate.from.x=0,this.rotate.from.y=0,this.rotate.from.z=0}},{key:"leftToRight",value:function(e){var t=this,o=new n.default.GridHelper(100,100,16711680),a=new n.default.Mesh(new n.default.BoxBufferGeometry(1,1,1))
o.matrixAutoUpdate=!1,a.matrixAutoUpdate=!1,o.geometry.rotateX(Math.PI/2),this.initializeKeyframes()
var i=new r.default.Tween(this.translate.from).to(this.translate.to,2e3),s=new r.default.Tween(this.rotate.from).to(this.rotate.to,2e3)
i.chain(s),e.add(o),s.onUpdate((function(){t.updateWorld(o)})),i.onUpdate((function(){t.updateWorld(o)})),s.onComplete((function(){t.updateBox(a),e.add(a),Ember.run.later((function(){e.remove(a),t.initializeKeyframes(),i.start()}),2e3)})),i.start()}},{key:"rightToLeft",value:function(e){var t=this,o=new n.default.GridHelper(100,100,16711680),a=new n.default.Mesh(new n.default.BoxBufferGeometry(1,1,1))
a.matrixAutoUpdate=!1,o.geometry.rotateX(Math.PI/2),this.initializeKeyframes()
var i=new r.default.Tween(this.translate.from).to(this.translate.to,2e3),s=new r.default.Tween(this.rotate.from).to(this.rotate.to,2e3)
s.chain(i),e.add(o),e.add(a),s.onUpdate((function(){t.updateBox(a)})),i.onUpdate((function(){t.updateBox(a)})),i.onComplete((function(){Ember.run.later((function(){t.initializeKeyframes(),s.start()}),2e3)})),s.start()}},{key:"updateBox",value:function(e){var t=(new n.default.Matrix4).makeRotationFromEuler(new n.default.Euler(this.rotate.from.x,this.rotate.from.y,this.rotate.from.z)),r=(new n.default.Matrix4).makeTranslation(this.translate.from.x,this.translate.from.y,this.translate.from.z),o=(new n.default.Matrix4).makeTranslation(this.originalPos.x,this.originalPos.y,this.originalPos.z)
e.matrix.identity(),e.matrix.multiply(r).multiply(t).multiply(o)}},{key:"updateWorld",value:function(e){var t=(new n.default.Matrix4).makeRotationFromEuler(new n.default.Euler(this.rotate.from.x,this.rotate.from.y,this.rotate.from.z)),r=(new n.default.Matrix4).makeTranslation(this.translate.from.x,this.translate.from.y,this.translate.from.z)
e.matrix.identity(),e.matrix.copy(r).multiply(t)}},{key:"onSceneInsert",value:function(e){"left-to-right"===this.args.props.mode?this.leftToRight(e):this.rightToLeft(e)}}])&&l(t.prototype,o),a&&l(t,a),f}(t.default),h=(a=i).prototype,b="onSceneInsert",y=[o],g=Object.getOwnPropertyDescriptor(a.prototype,"onSceneInsert"),v=a.prototype,w={},Object.keys(g).forEach((function(e){w[e]=g[e]})),w.enumerable=!!w.enumerable,w.configurable=!!w.configurable,("value"in w||w.initializer)&&(w.writable=!0),w=y.slice().reverse().reduce((function(e,t){return t(h,b,e)||e}),w),v&&void 0!==w.initializer&&(w.value=w.initializer?w.initializer.call(v):void 0,w.initializer=void 0),void 0===w.initializer&&(Object.defineProperty(h,b,w),w=null),a)
e.default=x})),define("fundamentals/pods/components/figures/math/transform-intuition/template",["exports"],(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.HTMLBars.template({id:"Hva4XP9U",block:'{"symbols":[],"statements":[[8,"demo-viewer",[],[["@cameraPosition","@cameraLookAt","@controlDef","@onSceneInsert","@onControlChanged"],[[30,[36,0],null,[["x","y","z"],[0,0,7]]],[30,[36,0],null,[["x","y","z"],[0,0,0]]],[32,0,["controlDef"]],[32,0,["onSceneInsert"]],[32,0,["onControlChanged"]]]],null]],"hasEval":false,"upvars":["hash"]}',moduleName:"fundamentals/pods/components/figures/math/transform-intuition/template.hbs"})
e.default=t})),define("fundamentals/pods/components/figures/math/unit-vectors/component",["exports","@glimmer/component","three"],(function(e,t,n){var r,o
function a(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){for(var n=0;n<t.length;n++){var r=t[n]
r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function s(e,t){return(s=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function l(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1
if(Reflect.construct.sham)return!1
if("function"==typeof Proxy)return!0
try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}()
return function(){var n,r=c(e)
if(t){var o=c(this).constructor
n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments)
return u(this,n)}}function u(e,t){return!t||"object"!==_typeof(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
return e}(e):t}function c(e){return(c=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var f,d,p,m,h,b,y=(r=Ember._action,o=function(e){(function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function")
e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&s(e,t)})(c,e)
var t,r,o,u=l(c)
function c(){return a(this,c),u.apply(this,arguments)}return t=c,(r=[{key:"onSceneInsert",value:function(e){var t=new n.default.GridHelper(10,10),r=new n.default.AxisHelper
e.add(r),e.add(t)}}])&&i(t.prototype,r),o&&i(t,o),c}(t.default),f=o.prototype,d="onSceneInsert",p=[r],m=Object.getOwnPropertyDescriptor(o.prototype,"onSceneInsert"),h=o.prototype,b={},Object.keys(m).forEach((function(e){b[e]=m[e]})),b.enumerable=!!b.enumerable,b.configurable=!!b.configurable,("value"in b||b.initializer)&&(b.writable=!0),b=p.slice().reverse().reduce((function(e,t){return t(f,d,e)||e}),b),h&&void 0!==b.initializer&&(b.value=b.initializer?b.initializer.call(h):void 0,b.initializer=void 0),void 0===b.initializer&&(Object.defineProperty(f,d,b),b=null),o)
e.default=y})),define("fundamentals/pods/components/figures/math/unit-vectors/template",["exports"],(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.HTMLBars.template({id:"U3xFcyXS",block:'{"symbols":[],"statements":[[8,"demo-viewer",[],[["@cameraPosition","@cameraLookAt","@onSceneInsert"],[[30,[36,0],null,[["x","y","z"],[0,5,5]]],[30,[36,0],null,[["x","y","z"],[0,0,0]]],[32,0,["onSceneInsert"]]]],null]],"hasEval":false,"upvars":["hash"]}',moduleName:"fundamentals/pods/components/figures/math/unit-vectors/template.hbs"})
e.default=t})),define("fundamentals/pods/components/figures/object-modeling/component",["exports","@glimmer/component","three","fundamentals/config/environment"],(function(e,t,n,r){var o,a
function i(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function s(e,t){for(var n=0;n<t.length;n++){var r=t[n]
r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function l(e,t){return(l=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function u(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1
if(Reflect.construct.sham)return!1
if("function"==typeof Proxy)return!0
try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}()
return function(){var n,r=f(e)
if(t){var o=f(this).constructor
n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments)
return c(this,n)}}function c(e,t){return!t||"object"!==_typeof(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
return e}(e):t}function f(e){return(f=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var d,p,m,h,b,y,g=(o=Ember._action,a=function(e){(function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function")
e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&l(e,t)})(f,e)
var t,o,a,c=u(f)
function f(){return i(this,f),c.apply(this,arguments)}return t=f,(o=[{key:"onSceneInsert",value:function(e,t){var o=this,a=new n.default.Group
a.position.y=-5,a.rotation.y=-Math.PI/2,t.loaders.gltf.load(r.default.rootURL+"models/basictrex/basictrex.glb",(function(t){var r=t.scene
r.position.y=-5,r.traverse((function(e){if(e instanceof n.default.Mesh)switch(o.args.props.mode){case"wireframe":var t=new n.default.LineSegments
t.material=new n.default.LineBasicMaterial,t.geometry=new n.default.WireframeGeometry(e.geometry),a.add(t)
break
case"vertex-colors":e.material=new n.default.MeshBasicMaterial({vertexColors:!0})
break
case"normals":e.material=new n.default.MeshLambertMaterial({vertexColors:!0})}})),e.add(a),"wireframe"!==o.args.props.mode&&(r.scale.set(.01,.01,.01),r.rotation.y=-Math.PI/2,e.add(r))}))}}])&&s(t.prototype,o),a&&s(t,a),f}(t.default),d=a.prototype,p="onSceneInsert",m=[o],h=Object.getOwnPropertyDescriptor(a.prototype,"onSceneInsert"),b=a.prototype,y={},Object.keys(h).forEach((function(e){y[e]=h[e]})),y.enumerable=!!y.enumerable,y.configurable=!!y.configurable,("value"in y||y.initializer)&&(y.writable=!0),y=m.slice().reverse().reduce((function(e,t){return t(d,p,e)||e}),y),b&&void 0!==y.initializer&&(y.value=y.initializer?y.initializer.call(b):void 0,y.initializer=void 0),void 0===y.initializer&&(Object.defineProperty(d,p,y),y=null),a)
e.default=g})),define("fundamentals/pods/components/figures/object-modeling/template",["exports"],(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.HTMLBars.template({id:"LxJjqtTU",block:'{"symbols":[],"statements":[[8,"demo-viewer",[],[["@cameraPosition","@cameraLookAt","@onSceneInsert"],[[30,[36,0],null,[["x","y","z"],[0,0,10]]],[30,[36,0],null,[["x","y","z"],[0,0,0]]],[32,0,["onSceneInsert"]]]],[["default"],[{"statements":[[2,"\\n"]],"parameters":[]}]]]],"hasEval":false,"upvars":["hash"]}',moduleName:"fundamentals/pods/components/figures/object-modeling/template.hbs"})
e.default=t})),define("fundamentals/pods/components/figures/pinhole-camera/component",["exports","@glimmer/component","three"],(function(e,t,n){var r,o,a,i,s,l
function u(e,t){for(var n=0;n<t.length;n++){var r=t[n]
r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function c(e,t){return(c=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function f(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1
if(Reflect.construct.sham)return!1
if("function"==typeof Proxy)return!0
try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}()
return function(){var n,r=m(e)
if(t){var o=m(this).constructor
n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments)
return d(this,n)}}function d(e,t){return!t||"object"!==_typeof(t)&&"function"!=typeof t?p(e):t}function p(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
return e}function m(e){return(m=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function h(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function b(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function y(e,t,n,r,o){var a={}
return Object.keys(r).forEach((function(e){a[e]=r[e]})),a.enumerable=!!a.enumerable,a.configurable=!!a.configurable,("value"in a||a.initializer)&&(a.writable=!0),a=n.slice().reverse().reduce((function(n,r){return r(e,t,n)||n}),a),o&&void 0!==a.initializer&&(a.value=a.initializer?a.initializer.call(o):void 0,a.initializer=void 0),void 0===a.initializer&&(Object.defineProperty(e,t,a),a=null),a}Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var g=(r=Ember._tracked,a=y((o=function e(){var t,n,r,o
h(this,e),t=this,n="imagePlaneDistance",o=this,(r=a)&&Object.defineProperty(t,n,{enumerable:r.enumerable,configurable:r.configurable,writable:r.writable,value:r.initializer?r.initializer.call(o):void 0})}).prototype,"imagePlaneDistance",[r],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),o),v=(i=Ember._action,s=Ember._action,y((l=function(e){(function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function")
e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&c(e,t)})(i,e)
var t,r,o,a=f(i)
function i(){var e
h(this,i)
for(var t=arguments.length,r=new Array(t),o=0;o<t;o++)r[o]=arguments[o]
return b(p(e=a.call.apply(a,[this].concat(r))),"object",new n.default.Group),b(p(e),"imagePlane",null),b(p(e),"fov",null),b(p(e),"invertedFov",null),b(p(e),"controlDef",{Obscura:{imagePlaneDistance:{min:0,max:4,default:0}}}),b(p(e),"controlData",new g),e}return t=i,(r=[{key:"onSceneInsert",value:function(e){var t=new n.default.BoxGeometry(5,5,5),r=new n.default.MeshPhongMaterial({color:65535,transparent:!0,opacity:.5,side:n.default.DoubleSide,depthTest:!0,depthWrite:!1}),o=new n.default.Mesh(t,r)
this.imagePlane=new n.default.Mesh(new n.default.BoxGeometry(5,5,.1),new n.default.MeshBasicMaterial({color:255,side:n.default.DoubleSide})),this.imagePlane.position.z=-2.5,this.updateFov(0),this.object.add(o),this.object.add(this.imagePlane),this.object.add(this.fov),this.object.add(this.invertedFov),this.fov.renderOrder=1,this.imagePlane.renderOrder=2,o.renderOrder=3,e.add(this.object)}},{key:"updateFov",value:function(e){var t=5-e
if(this.fov)this.fov.geometry.dispose(),this.invertedFov.geometry.dispose()
else{var r=new n.default.MeshBasicMaterial({color:16711680})
this.fov=new n.default.Mesh,this.fov.material=r,this.invertedFov=this.fov.clone()}var o=new n.default.ConeGeometry(2.5,t,32)
this.fov.geometry=o,this.invertedFov.geometry=o,this.fov.rotation.x=Math.PI/2,this.fov.position.z=e/2,this.invertedFov.rotation.x=-Math.PI/2,this.invertedFov.position.z=e/2+t}},{key:"onControlChanged",value:function(e,t){this.imagePlane.position.set(0,0,-2.5+t),this.updateFov(t)}}])&&u(t.prototype,r),o&&u(t,o),i}(t.default)).prototype,"onSceneInsert",[i],Object.getOwnPropertyDescriptor(l.prototype,"onSceneInsert"),l.prototype),y(l.prototype,"onControlChanged",[s],Object.getOwnPropertyDescriptor(l.prototype,"onControlChanged"),l.prototype),l)
e.default=v})),define("fundamentals/pods/components/figures/pinhole-camera/template",["exports"],(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.HTMLBars.template({id:"v25+whwm",block:'{"symbols":["parent"],"statements":[[8,"demo-viewer",[],[["@cameraPosition","@cameraLookAt","@onSceneInsert","@controlDef","@onControlChanged"],[[30,[36,0],null,[["x","y","z"],[0,5,10]]],[30,[36,0],null,[["x","y","z"],[0,0,0]]],[32,0,["onSceneInsert"]],[32,0,["controlDef"]],[32,0,["onControlChanged"]]]],[["default"],[{"statements":[[2,"\\n    "],[8,"scene-object",[],[["@parent","@type","@constructorProps"],[[32,1],"GridHelper",[30,[36,2],[100,20,[30,[36,1],["0x3486eb"],null],[30,[36,1],["0x666666"],null]],null]]],null],[2,"\\n"]],"parameters":[1]}]]]],"hasEval":false,"upvars":["hash","to-number","array"]}',moduleName:"fundamentals/pods/components/figures/pinhole-camera/template.hbs"})
e.default=t}))
define("fundamentals/pods/components/figures/template",["exports"],(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.HTMLBars.template({id:"Oz3wQqHj",block:'{"symbols":[],"statements":[[1,[30,[36,1],[[30,[36,0],null,null]],null]]],"hasEval":false,"upvars":["-outlet","component"]}',moduleName:"fundamentals/pods/components/figures/template.hbs"})
e.default=t})),define("fundamentals/pods/components/gimbal/component",["exports","fundamentals/pods/components/scene-object/component","three"],(function(e,t,n){var r,o,a
function i(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function s(e,t){for(var n=0;n<t.length;n++){var r=t[n]
r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function l(e,t){return(l=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function u(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1
if(Reflect.construct.sham)return!1
if("function"==typeof Proxy)return!0
try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}()
return function(){var n,r=d(e)
if(t){var o=d(this).constructor
n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments)
return c(this,n)}}function c(e,t){return!t||"object"!==_typeof(t)&&"function"!=typeof t?f(e):t}function f(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
return e}function d(e){return(d=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function p(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var m,h,b,y,g,v,w=(r=Ember._action,a=function(e){(function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function")
e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&l(e,t)})(c,e)
var t,r,o,a=u(c)
function c(){var e
i(this,c)
for(var t=arguments.length,n=new Array(t),r=0;r<t;r++)n[r]=arguments[r]
return p(f(e=a.call.apply(a,[this].concat(n))),"properties",["rotateX","rotateY","rotateZ"]),e}return t=c,(r=[{key:"buildObject",value:function(){return this.object=new n.default.Group,this.ring1=new n.default.Mesh(new n.default.TorusBufferGeometry(5,.1,16,100),new n.default.MeshPhongMaterial({color:16711680,flatShading:!0,emissive:16711680})),this.ring2=new n.default.Mesh(new n.default.TorusBufferGeometry(5,.1,16,100),new n.default.MeshPhongMaterial({color:65280,flatShading:!0,emissive:65280})),this.ring3=new n.default.Mesh(new n.default.TorusBufferGeometry(5,.1,16,100),new n.default.MeshPhongMaterial({color:255,flatShading:!0,emissive:255})),this.ring1.geometry.rotateX(Math.PI/2),this.ring2.geometry.rotateY(Math.PI/2),this.ring1.add(this.ring2),this.ring2.add(this.ring3),this.object.add(this.ring1),this.object}},{key:"updateArg",value:function(e,t){switch(e){case"rotateX":this.ring1.rotation.set(n.MathUtils.degToRad(t),0,0)
break
case"rotateY":this.ring3.rotation.set(0,n.MathUtils.degToRad(t),0)
break
case"rotateZ":this.ring2.rotation.set(0,0,n.MathUtils.degToRad(t))}}}])&&s(t.prototype,r),o&&s(t,o),c}(t.default),m=(o=a).prototype,h="updateArg",b=[r],y=Object.getOwnPropertyDescriptor(o.prototype,"updateArg"),g=o.prototype,v={},Object.keys(y).forEach((function(e){v[e]=y[e]})),v.enumerable=!!v.enumerable,v.configurable=!!v.configurable,("value"in v||v.initializer)&&(v.writable=!0),v=b.slice().reverse().reduce((function(e,t){return t(m,h,e)||e}),v),g&&void 0!==v.initializer&&(v.value=v.initializer?v.initializer.call(g):void 0,v.initializer=void 0),void 0===v.initializer&&(Object.defineProperty(m,h,v),v=null),o)
e.default=w})),define("fundamentals/pods/components/gimbal/template",["exports"],(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.HTMLBars.template({id:"BJkrZ3fA",block:'{"symbols":["prop"],"statements":[[6,[37,4],[[30,[36,3],[[30,[36,3],[[32,0,["properties"]]],null]],null]],null,[["default"],[{"statements":[[2,"  "],[1,[30,[36,2],[[30,[36,1],[[32,0,["updateArg"]],[32,1]],null],[30,[36,0],[[32,0,["args"]],[32,1]],null]],null]],[2,"\\n"]],"parameters":[1]}]]]],"hasEval":false,"upvars":["get","fn","did-update","-track-array","each"]}',moduleName:"fundamentals/pods/components/gimbal/template.hbs"})
e.default=t})),define("fundamentals/pods/components/gltf-model/component",["exports","fundamentals/pods/components/scene-object/component","three"],(function(e,t,n){function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function o(e,t){for(var n=0;n<t.length;n++){var r=t[n]
r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function a(e,t){return(a=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function i(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1
if(Reflect.construct.sham)return!1
if("function"==typeof Proxy)return!0
try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}()
return function(){var n,r=l(e)
if(t){var o=l(this).constructor
n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments)
return s(this,n)}}function s(e,t){return!t||"object"!==_typeof(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
return e}(e):t}function l(e){return(l=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var u=function(e){(function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function")
e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&a(e,t)})(c,e)
var t,s,l,u=i(c)
function c(){return r(this,c),u.apply(this,arguments)}return t=c,(s=[{key:"buildObject",value:function(e){var t=this
if(this.object=new n.default.Object3D,e.gltf.load(this.args.modelSrc,(function(e){t.object.add(e.scene)})),this.args.modelPosition&&this.object.position.fromArray(this.args.modelPosition),this.args.modelRotation){var r=this.args.modelRotation.map((function(e){return e*n.default.MathUtils.DEG2RAD}))
this.object.rotation.fromArray(r)}return this.object}}])&&o(t.prototype,s),l&&o(t,l),c}(t.default)
e.default=u})),define("fundamentals/pods/components/heading/template",["exports"],(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.HTMLBars.template({id:"fWeXW3MV",block:'{"symbols":["@title","@subtitle","&default"],"statements":[[10,"div"],[14,0,"text-lg max-w-prose mx-auto"],[12],[2,"\\n    "],[10,"h1"],[12],[2,"\\n        "],[10,"span"],[14,0,"mt-2 block text-3xl text-center leading-8 font-extrabold tracking-tight text-white sm:text-4xl"],[12],[1,[32,1]],[13],[2,"\\n        "],[10,"span"],[14,0,"block text-base text-center text-indigo-300 font-semibold tracking-wide uppercase"],[12],[1,[32,2]],[13],[2,"\\n    "],[13],[2,"\\n    "],[10,"p"],[14,0,"mt-8 text-xl text-gray-100 leading-8"],[12],[2,"\\n        "],[18,3,null],[2,"\\n    "],[13],[2,"\\n"],[13]],"hasEval":false,"upvars":[]}',moduleName:"fundamentals/pods/components/heading/template.hbs"})
e.default=t})),define("fundamentals/pods/components/katex-block/template",["exports"],(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.HTMLBars.template({id:"tQXZlvg3",block:'{"symbols":["&default"],"statements":[[10,"pre"],[12],[2,""],[11,"span"],[24,0,"text-white"],[4,[38,0],null,null],[12],[2,"\\n\\\\(\\n    "],[18,1,null],[2,"\\n\\\\)\\n"],[13],[2,"\\n"],[13]],"hasEval":false,"upvars":["katex"]}',moduleName:"fundamentals/pods/components/katex-block/template.hbs"})
e.default=t})),define("fundamentals/pods/components/katex-span/template",["exports"],(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.HTMLBars.template({id:"6LV8Fs5c",block:'{"symbols":["@content","&default"],"statements":[[11,"span"],[24,0,"text-white"],[4,[38,0],[[32,1]],null],[12],[2,"\\\\("],[18,2,null],[2,"\\\\)"],[13]],"hasEval":false,"upvars":["katex"]}',moduleName:"fundamentals/pods/components/katex-span/template.hbs"})
e.default=t})),define("fundamentals/pods/components/prose-figure/template",["exports"],(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.HTMLBars.template({id:"jLK4N9xx",block:'{"symbols":["@imageUrl","@imageBgColor","&default","@props","@componentName","&attrs","@vertical","@figureId","@figureCaption"],"statements":[[11,"div"],[24,0,"max-w-prose mx-auto mt-8 text-lg flex-col space-y-4"],[17,6],[12],[2,"\\n"],[6,[37,1],[[32,5]],null,[["default","else"],[{"statements":[[2,"        "],[10,"div"],[14,0,"relative h-80"],[12],[2,"\\n            "],[1,[30,[36,0],[[32,5]],[["props"],[[32,4]]]]],[2,"\\n        "],[13],[2,"\\n"]],"parameters":[]},{"statements":[[2,"        "],[18,3,null],[2,"\\n"]],"parameters":[]}]]],[2,"    "],[10,"figure"],[15,0,[31,[[30,[36,1],[[32,1],"flex"],null]," ",[30,[36,1],[[32,7],"flex-col"],null]," space-x-4 space-y-4"]]],[12],[2,"\\n"],[6,[37,1],[[32,1]],null,[["default"],[{"statements":[[2,"        "],[10,"img"],[15,"src",[32,1]],[15,0,[31,["rounded-lg ",[32,2]]]],[12],[13],[2,"\\n"]],"parameters":[]}]]],[2,"        "],[10,"figcaption"],[15,5,[30,[36,1],[[30,[36,3],[[30,[36,2],[[32,7]],null],[32,1]],null],"margin-top: 0;"],null]],[12],[2,"\\n            "],[10,"span"],[14,0,"text-white font-semibold mr-1"],[12],[2,"Figure "],[1,[32,8]],[13],[2,"\\n            "],[10,"span"],[14,0,"text-gray-400 italic"],[12],[1,[32,9]],[13],[2,"\\n        "],[13],[2,"\\n    "],[13],[2,"\\n"],[13]],"hasEval":false,"upvars":["component","if","not","and"]}',moduleName:"fundamentals/pods/components/prose-figure/template.hbs"})
e.default=t})),define("fundamentals/pods/components/prose-markdown/template",["exports"],(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.HTMLBars.template({id:"rT2Gyxtb",block:'{"symbols":["&default"],"statements":[[11,"div"],[24,0,"mt-6 prose prose-lg text-gray-400 mx-auto"],[4,[38,0],null,null],[12],[2,"\\n"],[18,1,null],[2,"\\n"],[13]],"hasEval":false,"upvars":["markdown"]}',moduleName:"fundamentals/pods/components/prose-markdown/template.hbs"})
e.default=t})),define("fundamentals/pods/components/scene-object/component",["exports","@glimmer/component","three"],(function(e,t,n){var r,o,a
function i(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(e)))return
var n=[],r=!0,o=!1,a=void 0
try{for(var i,s=e[Symbol.iterator]();!(r=(i=s.next()).done)&&(n.push(i.value),!t||n.length!==t);r=!0);}catch(l){o=!0,a=l}finally{try{r||null==s.return||s.return()}finally{if(o)throw a}}return n}(e,t)||u(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function s(e,t,n){return(s=g()?Reflect.construct:function(e,t,n){var r=[null]
r.push.apply(r,t)
var o=new(Function.bind.apply(e,r))
return n&&h(o,n.prototype),o}).apply(null,arguments)}function l(e){return function(e){if(Array.isArray(e))return c(e)}(e)||function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(e)||u(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function u(e,t){if(e){if("string"==typeof e)return c(e,t)
var n=Object.prototype.toString.call(e).slice(8,-1)
return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?c(e,t):void 0}}function c(e,t){(null==t||t>e.length)&&(t=e.length)
for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n]
return r}function f(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function d(e,t,n){return(d="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=v(e)););return e}(e,t)
if(r){var o=Object.getOwnPropertyDescriptor(r,t)
return o.get?o.get.call(n):o.value}})(e,t,n||e)}function p(e,t){for(var n=0;n<t.length;n++){var r=t[n]
r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function m(e,t,n){return t&&p(e.prototype,t),n&&p(e,n),e}function h(e,t){return(h=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function b(e,t){return!t||"object"!==_typeof(t)&&"function"!=typeof t?y(e):t}function y(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
return e}function g(){if("undefined"==typeof Reflect||!Reflect.construct)return!1
if(Reflect.construct.sham)return!1
if("function"==typeof Proxy)return!0
try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}function v(e){return(v=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function w(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var x,_,k,j,O,E,P=(r=Ember._action,a=function(e){(function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function")
e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&h(e,t)})(a,e)
var t,r,o=(t=a,r=g(),function(){var e,n=v(t)
if(r){var o=v(this).constructor
e=Reflect.construct(n,arguments,o)}else e=n.apply(this,arguments)
return b(this,e)})
function a(){var e
return f(this,a),w(y(e=o.apply(this,arguments)),"defaults",{type:"Object3D"}),w(y(e),"properties",[]),e.children=new Set,e.args.parent&&e.args.parent.registerChild(y(e)),e}return m(a,[{key:"type",get:function(){var e=this.args.type||this.defaults.type
return n.default[e]}},{key:"props",get:function(){return this.args.props}}]),m(a,[{key:"willDestroy",value:function(){d(v(a.prototype),"willDestroy",this).apply(this,arguments),this.args.parent&&this.args.parent.unregisterChild(this)}},{key:"registerChild",value:function(e){this.children.add(e)}},{key:"unregisterChild",value:function(e){this.children.delete(e)}},{key:"traverse",value:function(e){this.children.forEach((function(t){e(t),t.traverse(e)}))}},{key:"buildScene",value:function(e){var t=this
this.object=this.buildObject(e),this.children.forEach((function(n){n.buildScene(e),t.object.add(n.object)}))}},{key:"destroyScene",value:function(){var e=this
this.children.forEach((function(t){t.destroyScene(),e.object.remove(t.object)}))}},{key:"buildObject",value:function(){var e
return e=this.args.constructorProps?s(this.type,l(this.args.constructorProps)):new this.type,this.props&&this.updateObject(e,this.props),e}},{key:"updateObject",value:function(e){var t=this,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{}
Object.entries(n).forEach((function(n){var r=i(n,2),o=r[0],a=r[1]
t.updateObjectSingle(e,o,a)}))}},{key:"updateObjectSingle",value:function(e,t,n){switch(t){case"position":case"rotation":e[t].set(n.x,n.y,n.z)}}},{key:"updateArg",value:function(e,t){this.object&&this.updateObjectSingle(this.object,e,t)}}]),a}(t.default),x=(o=a).prototype,_="updateArg",k=[r],j=Object.getOwnPropertyDescriptor(o.prototype,"updateArg"),O=o.prototype,E={},Object.keys(j).forEach((function(e){E[e]=j[e]})),E.enumerable=!!E.enumerable,E.configurable=!!E.configurable,("value"in E||E.initializer)&&(E.writable=!0),E=k.slice().reverse().reduce((function(e,t){return t(x,_,e)||e}),E),O&&void 0!==E.initializer&&(E.value=E.initializer?E.initializer.call(O):void 0,E.initializer=void 0),void 0===E.initializer&&(Object.defineProperty(x,_,E),E=null),o)
e.default=P})),define("fundamentals/pods/components/scene-object/template",["exports"],(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.HTMLBars.template({id:"98rwxzCT",block:'{"symbols":["prop"],"statements":[[6,[37,4],[[30,[36,3],[[30,[36,3],[[32,0,["properties"]]],null]],null]],null,[["default"],[{"statements":[[2,"  "],[1,[30,[36,2],[[30,[36,1],[[32,0,["updateArg"]],[32,1]],null],[30,[36,0],[[32,0,["args"]],[32,1]],null]],null]],[2,"\\n"]],"parameters":[1]}]]]],"hasEval":false,"upvars":["get","fn","did-update","-track-array","each"]}',moduleName:"fundamentals/pods/components/scene-object/template.hbs"})
e.default=t})),define("fundamentals/pods/components/scene/component",["exports","fundamentals/pods/components/scene-object/component","three","three/examples/jsm/controls/OrbitControls","three/examples/jsm/loaders/RGBELoader","three/examples/jsm/loaders/GLTFLoader","three/examples/jsm/loaders/OBJLoader"],(function(e,t,n,r,o,a,i){var s,l,u,c,f,d,p,m,h,b,y,g,v,w,x
function _(e,t,n,r){n&&Object.defineProperty(e,t,{enumerable:n.enumerable,configurable:n.configurable,writable:n.writable,value:n.initializer?n.initializer.call(r):void 0})}function k(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function j(e,t){for(var n=0;n<t.length;n++){var r=t[n]
r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function O(e,t,n){return(O="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=M(e)););return e}(e,t)
if(r){var o=Object.getOwnPropertyDescriptor(r,t)
return o.get?o.get.call(n):o.value}})(e,t,n||e)}function E(e,t){return(E=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function P(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1
if(Reflect.construct.sham)return!1
if("function"==typeof Proxy)return!0
try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}()
return function(){var n,r=M(e)
if(t){var o=M(this).constructor
n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments)
return S(this,n)}}function S(e,t){return!t||"object"!==_typeof(t)&&"function"!=typeof t?T(e):t}function T(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
return e}function M(e){return(M=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function R(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function z(e,t,n,r,o){var a={}
return Object.keys(r).forEach((function(e){a[e]=r[e]})),a.enumerable=!!a.enumerable,a.configurable=!!a.configurable,("value"in a||a.initializer)&&(a.writable=!0),a=n.slice().reverse().reduce((function(n,r){return r(e,t,n)||n}),a),o&&void 0!==a.initializer&&(a.value=a.initializer?a.initializer.call(o):void 0,a.initializer=void 0),void 0===a.initializer&&(Object.defineProperty(e,t,a),a=null),a}Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var C=(s=Ember._tracked,l=Ember._tracked,u=Ember._action,c=Ember._action,f=Ember._action,d=Ember._action,p=Ember._action,m=Ember._action,h=Ember._action,b=Ember._action,y=Ember._action,x=function(e){(function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function")
e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&E(e,t)})(c,e)
var t,s,l,u=P(c)
function c(){var e
return k(this,c),R(T(e=u.apply(this,arguments)),"camera",null),R(T(e),"glRenderer",null),R(T(e),"element",null),R(T(e),"raf",null),R(T(e),"loadingManager",new n.default.LoadingManager),R(T(e),"loaders",{gltf:new a.GLTFLoader(e.loadingManager),rgbe:new o.RGBELoader(e.loadingManager),obj:new i.OBJLoader(e.loadingManager)}),R(T(e),"defaults",{type:"Scene"}),_(T(e),"isLoading",v,T(e)),_(T(e),"loadingProgress",w,T(e)),e.loadingManager.onStart=e.onLoadingStarted,e.loadingManager.onLoad=e.onLoadingFinished,e.loadingManager.onProgress=e.onLoadingProgressed,e.loadingManager.onError=e.onLoadingErrored,e}return t=c,(s=[{key:"willDestroy",value:function(){O(M(c.prototype),"willDestroy",this).call(this)}},{key:"startThree",value:function(){this.glRenderer||(this.setupThree(this.element),this.setupScene(),this.args.onSceneInsert&&this.args.onSceneInsert(this.object,this)),this.animate()}},{key:"pauseThree",value:function(){cancelAnimationFrame(this.raf)}},{key:"setupThree",value:function(e){var t=e.clientWidth,o=e.clientHeight
this.camera=new n.default.PerspectiveCamera(60,t/o,.1,1e3),this.glRenderer=new n.default.WebGLRenderer({antialias:!0}),this.glRenderer.setPixelRatio(window.devicePixelRatio),this.glRenderer.setClearColor(3355443),this.glRenderer.setSize(t,o),this.args.hdr&&(this.glRenderer.toneMapping=n.default.ACESFilmicToneMapping,this.glRenderer.toneMappingExposure=1,this.glRenderer.outputEncoding=n.default.sRGBEncoding,this.glRenderer.physicalCorrectLights=!0),e.appendChild(this.glRenderer.domElement),this.orbit=new r.OrbitControls(this.camera,this.glRenderer.domElement),this.orbit.enableZoom=!0}},{key:"setupScene",value:function(){if(this.args.cameraPosition){var e=this.args.cameraPosition,t=e.x,n=e.y,r=e.z
this.camera.position.set(t,n,r)}if(this.args.cameraLookAt){var o=this.args.cameraLookAt,a=o.x,i=o.y,s=o.z
this.camera.lookAt(a,i,s)}this.args.hdr&&this.setupEnvMap(this.args.hdr),this.buildScene(this.loaders)}},{key:"setupEnvMap",value:function(e){var t=this,r=e.map,o=e.background,a=void 0===o||o,i=new n.default.PMREMGenerator(this.glRenderer)
i.compileEquirectangularShader(),this.loaders.rgbe.setDataType(n.default.UnsignedByteType).load(r,(function(e){var n=i.fromEquirectangular(e).texture
a&&(t.object.background=n),t.object.environment=n,e.dispose(),i.dispose()}))}},{key:"animate",value:function(){this.raf=requestAnimationFrame(this.animate),this.glRenderer.render(this.object,this.camera)}},{key:"resize",value:function(e){var t=e.clientWidth,n=e.clientHeight
this.camera.aspect=t/n,this.camera.updateProjectionMatrix(),this.glRenderer.setSize(t,n)}},{key:"didInsert",value:function(e){this.element=e}},{key:"onEnter",value:function(e){this.element=e,this.startThree()}},{key:"onLeave",value:function(){this.pauseThree()}},{key:"onLoadingStarted",value:function(){this.isLoading=!0}},{key:"onLoadingFinished",value:function(){this.isLoading=!1}},{key:"onLoadingProgressed",value:function(e,t,n){this.loadingProgress=t/n*100}},{key:"onLoadingErrored",value:function(){}}])&&j(t.prototype,s),l&&j(t,l),c}(t.default),v=z((g=x).prototype,"isLoading",[s],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),w=z(g.prototype,"loadingProgress",[l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),z(g.prototype,"animate",[u],Object.getOwnPropertyDescriptor(g.prototype,"animate"),g.prototype),z(g.prototype,"resize",[c],Object.getOwnPropertyDescriptor(g.prototype,"resize"),g.prototype),z(g.prototype,"didInsert",[f],Object.getOwnPropertyDescriptor(g.prototype,"didInsert"),g.prototype),z(g.prototype,"onEnter",[d],Object.getOwnPropertyDescriptor(g.prototype,"onEnter"),g.prototype),z(g.prototype,"onLeave",[p],Object.getOwnPropertyDescriptor(g.prototype,"onLeave"),g.prototype),z(g.prototype,"onLoadingStarted",[m],Object.getOwnPropertyDescriptor(g.prototype,"onLoadingStarted"),g.prototype),z(g.prototype,"onLoadingFinished",[h],Object.getOwnPropertyDescriptor(g.prototype,"onLoadingFinished"),g.prototype),z(g.prototype,"onLoadingProgressed",[b],Object.getOwnPropertyDescriptor(g.prototype,"onLoadingProgressed"),g.prototype),z(g.prototype,"onLoadingErrored",[y],Object.getOwnPropertyDescriptor(g.prototype,"onLoadingErrored"),g.prototype),g)
e.default=C})),define("fundamentals/pods/components/scene/template",["exports"],(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.HTMLBars.template({id:"GPU4uM8s",block:'{"symbols":["&attrs","@container","&default"],"statements":[[11,"div"],[24,0,"scene w-full h-full"],[17,1],[4,[38,0],[[32,0,["didInsert"]]],null],[4,[38,1],[[32,0,["resize"]]],null],[4,[38,2],null,[["container","onEnter","onLeave"],[[32,2],[32,0,["onEnter"]],[32,0,["onLeave"]]]]],[12],[2,"\\n    "],[18,3,[[32,0]]],[2,"\\n"],[13],[2,"\\n"],[6,[37,3],[[32,0,["isLoading"]]],null,[["default"],[{"statements":[[10,"div"],[14,0,"absolute top-0 left-0 w-full h-full bg-black bg-opacity-80 flex items-center rounded-lg"],[12],[2,"\\n    "],[10,"div"],[14,0,"mx-40 flex-1 h-2 rounded-lg bg-blue-300 shadow-lg"],[12],[2,"\\n        "],[10,"div"],[14,0,"h-full rounded-lg bg-blue-500"],[15,5,[31,["width: ",[32,0,["loadingProgress"]],"%;"]]],[12],[13],[2,"\\n    "],[13],[2,"\\n"],[13],[2,"\\n"]],"parameters":[]}]]]],"hasEval":false,"upvars":["did-insert","on-window-resize","visibility-detector","if"]}',moduleName:"fundamentals/pods/components/scene/template.hbs"})
e.default=t})),define("fundamentals/pods/components/svg-icon/template",["exports"],(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.HTMLBars.template({id:"bh0HnCgA",block:'{"symbols":["&attrs","@name"],"statements":[[11,"svg"],[24,"xmlns","http://www.w3.org/2000/svg","http://www.w3.org/2000/xmlns/"],[24,"xmlns:xlink","http://www.w3.org/1999/xlink","http://www.w3.org/2000/xmlns/"],[17,1],[12],[2,"\\n    "],[10,"use"],[15,"xlink:href",[30,[36,1],[[30,[36,0],["icons.svg#",[32,2]],null]],null],"http://www.w3.org/1999/xlink"],[12],[13],[2,"\\n"],[13],[2,"\\n"]],"hasEval":false,"upvars":["concat","root-url"]}',moduleName:"fundamentals/pods/components/svg-icon/template.hbs"})
e.default=t})),define("fundamentals/pods/docs/controller",["exports"],(function(e){var t,n,r,o,a,i,s,l
function u(e,t,n,r){n&&Object.defineProperty(e,t,{enumerable:n.enumerable,configurable:n.configurable,writable:n.writable,value:n.initializer?n.initializer.call(r):void 0})}function c(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function f(e,t){for(var n=0;n<t.length;n++){var r=t[n]
r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function d(e,t){return(d=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function p(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1
if(Reflect.construct.sham)return!1
if("function"==typeof Proxy)return!0
try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}()
return function(){var n,r=b(e)
if(t){var o=b(this).constructor
n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments)
return m(this,n)}}function m(e,t){return!t||"object"!==_typeof(t)&&"function"!=typeof t?h(e):t}function h(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
return e}function b(e){return(b=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function y(e,t,n,r,o){var a={}
return Object.keys(r).forEach((function(e){a[e]=r[e]})),a.enumerable=!!a.enumerable,a.configurable=!!a.configurable,("value"in a||a.initializer)&&(a.writable=!0),a=n.slice().reverse().reduce((function(n,r){return r(e,t,n)||n}),a),o&&void 0!==a.initializer&&(a.value=a.initializer?a.initializer.call(o):void 0,a.initializer=void 0),void 0===a.initializer&&(Object.defineProperty(e,t,a),a=null),a}Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var g=(t=Ember.inject.service,n=Ember._tracked,r=Ember._tracked,o=Ember._action,i=y((a=function(e){(function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function")
e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&d(e,t)})(a,Ember.Controller)
var t,n,r,o=p(a)
function a(){var e
c(this,a)
for(var t=arguments.length,n=new Array(t),r=0;r<t;r++)n[r]=arguments[r]
return u(h(e=o.call.apply(o,[this].concat(n))),"router",i,h(e)),u(h(e),"expanded",s,h(e)),u(h(e),"navigation",l,h(e)),e}return t=a,(n=[{key:"onNavClicked",value:function(e){this.navigation.find((function(t){return t.label===e})).toggleProperty("expanded")}},{key:"currentRoute",get:function(){return this.router.currentRoute.name}}])&&f(t.prototype,n),r&&f(t,r),a}()).prototype,"router",[t],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),s=y(a.prototype,"expanded",[n],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),l=y(a.prototype,"navigation",[r],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[Ember.Object.create({label:"Introduction",route:"docs.introduction",icon:"home"}),Ember.Object.create({label:"Playground",route:"playground",icon:"puzzle"}),Ember.Object.create({label:"Preliminary Theory",expanded:!1,links:[{label:"Photography",route:"docs.photography"},{label:"Physics of Light",route:"docs.physics-of-light"},{label:"Language of 3D",route:"docs.language-of-3d"},{label:"Object Modeling",route:"docs.object-modeling"},{label:"Transformations",route:"docs.transformations"},{label:"Scene Graphs",route:"docs.scene-graphs"}]}),Ember.Object.create({label:"Intro to Shaders",links:[{label:"Graphics Pipeline",route:"docs.graphics-pipeline"},{label:"The Theory",route:"docs.shader-theory"},{label:"Getting Started",route:"docs.shader-getting-started"},{label:"Beyond the Basics",route:"docs.shader-beyond-the-basics"}]}),Ember.Object.create({label:"Resources",links:[{label:"Realtime Rendering",href:"http://realtimerendering.com",external:!0},{label:"Learn OpenGL",href:"http://learnopengl.com",external:!0},{label:"WebGL Fundamentals",href:"http://webglfundamentals.org/",external:!0},{label:"Three.js Fundamentals",href:"http://threejsfundamentals.org/",external:!0},{label:"Three.js",href:"http://threejs.org",external:!0},{label:"Book of Shaders",href:"http://thebookofshaders.com",external:!0}]})]}}),y(a.prototype,"onNavClicked",[o],Object.getOwnPropertyDescriptor(a.prototype,"onNavClicked"),a.prototype),a)
e.default=g})),define("fundamentals/pods/docs/graphics-pipeline/template",["exports"],(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.HTMLBars.template({id:"qBnji07M",block:'{"symbols":[],"statements":[[10,"div"],[14,0,"relative px-4 sm:px-6 lg:px-8"],[12],[2,"\\n    "],[8,"heading",[],[["@title","@subtitle"],["The Graphics Pipeline","An extraordinary tale of the life of a pixel"]],[["default"],[{"statements":[[2,"\\n            Knowing how and what happens at each stage of the graphics pipeline helps to ground our understanding of really high-level\\n            concepts to the real world. This chapter will shed some light on how each individual pixel gets calculated and displayed\\n            on your computer monitor. We\'ll also delve into some history of GPUs and discuss their architecture in hopes it gives\\n            you more clarity on how things really work.\\n    "]],"parameters":[]}]]],[2,"\\n    "],[8,"prose-markdown",[],[[],[]],[["default"],[{"statements":[[2,"\\n        ## Pipeline Stages\\n\\n        Realtime rendering systems take **3D** mesh data and outputs pixels on the screen or a texture. The mesh data is usually brought\\n        in from other tools like **Blender** or **Maya**.\\n        The graphics pipeline is the list of stages that data goes through to be transformed into pixels for a single frame. Each\\n        stage runs in order one by one like an assembly line but each stage is usually a pipeline in itself.\\n\\n    "]],"parameters":[]}]]],[2,"\\n    "],[8,"prose-figure",[],[["@figureId","@figureCaption","@imageUrl","@vertical"],["1","The graphics pipeline can be broken down into 5 high-level stages",[30,[36,0],["figures/graphics-pipeline-d3c436a9aecdac4ddb413396b116f8fe.png"],null],true]],null],[2,"\\n    "],[8,"prose-markdown",[],[[],[]],[["default"],[{"statements":[[2,"\\n        ## Application Stage\\n\\n        The application stage consists of task related to preparing geometry to be drawn. This stage is usually done on the CPU\\n        and the output is fed to the geometry stage as a list of triangles. Interative graphical applications, like games, need to\\n        respond to player input to change what is being rendered. The goal isn\'t just to render a static scene but to be able to\\n        render fast enough for players to comfortabley interact with the scene. Here are some examples of things done in this stage:\\n\\n        * user input\\n        * collision detection\\n        * scene culling\\n        * animation\\n\\n        ## Geometry Processing Stage\\n\\n        The purpose of the geometry stage is to take vertex input and output geometry primitives. Through this stage, the primitive must\\n        be transformed so that the primitive\'s points and edges can be drawn on the screen.\\n        This stage is fully programmable allowing programmers to build programs on the **GPU**, called **shaders**.\\n        These shaders output per-vertex information like points, normals, and colors to be fed into the next stage. This stage usually performs these set of tasks:\\n\\n        * **Model-View-Projection**\\n        * **Clipping**\\n        * **Screen Mapping**\\n\\n        ### Model-View-Projection\\n\\n        **Projection** is the process of flattening out **3D** information onto a **2D** surface. This is usually handled with a simple\\n        **projection matrix**. The vertex shader is responsible for outputing the\\n        projected coordinates as **homogenous coordinates** "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"[p_x, p_y, p_z, p_w]"]],"parameters":[]}]]],[2,", before performing perspective division.\\n        This means that the shader program multiplies out the projection matrix, and view transforms and outputs the results before dividing by\\n        the "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"p_w"]],"parameters":[]}]]],[2,".\\n\\n        Let\'s discuss more in detail what goes on in this calculation.\\n\\n        #### Local Space\\n\\n        When a model is created, all it\'s vertices are defined in local space. Usually, you\'ll find that all vertices are\\n        relative to the center position of the object. To render this object, we need to express the vertices in world\\n        coordinates.\\n\\n        #### World Space\\n\\n        The model\'s transform decribes an object\'s position and orientation relative to world space. Let\'s assume we\'re rendering\\n        a box and we want it placed at "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"[3, 0, 0]"]],"parameters":[]}]]],[2,". Since vertex shaders are per-vertex operations, let\'s focus only on one corner\\n        "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"[0.5, 0.5, 0]"]],"parameters":[]}]]],[2,". That is the box\'s front top corner vertex defined in local space. In order to output the box\'s corner\\n        in its new position with the box\'s center position at "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"[3, 0, 0]"]],"parameters":[]}]]],[2,", we just multiply by the translation and it becomes "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"[3.5, 0.5, 0]"]],"parameters":[]}]]],[2,".\\n\\n        "],[8,"katex-block",[],[[],[]],[["default"],[{"statements":[[2,"\\n        \\\\boldsymbol{p}_{world} = \\\\bold{Model} \\\\cdot \\\\boldsymbol{p}_{local}\\n        "]],"parameters":[]}]]],[2,"\\n\\n        #### View Space\\n\\n        Drawing the corner vertex of box will probably not render anything. We haven\'t specified where we want our camera. Cameras\\n        aren\'t really a thing in any graphics APIs. The APIs assume you know exactly where to position your objects and the default\\n        coordinate space usually range from -1 to 1 on all dimensions with **-Z** pointing into the screen for right handed systems. We\\n        typically describe our scene using world coordinates, but without cameras, this would require we transform these points ourselves.\\n\\n        In order to draw this point and make it visible, we need to draw it further down the z axis. Let\'s choose -5, so we\'d need\\n        to either update the model\'s mesh by putting a z-offet of -5 or we could store this in the **model matrix**. However,\\n        for multiple reasons, it\'s not a good idea to use the model matrix for this, or even worse, mutate our mesh data everytime\\n        the camera changes. If we had several boxes to draw, we\'d need to store this offset in all of the boxes\' model matrices.\\n\\n        A better idea to store this z-offset in one place. This z-offset is basically our camera. The camera can be used to transform\\n        the point into view space, meaning we can render the object relative to where the camera is. For example, a\\n        camera position of +5 on Z would do the trick. Notice the inverse relationship here. To view the box 5 units away,\\n        you can position the camera +5 on Z or position the box -5 on Z. Similarly, moving the camera to the right can also be represented\\n        as the object moving left. The view space can be calculated as the inverse of the camera\'s transform.\\n\\n        "],[8,"katex-block",[],[[],[]],[["default"],[{"statements":[[2,"\\n        \\\\boldsymbol{p}_{view} = \\\\bold{CameraWorld}^{-1} \\\\cdot \\\\bold{Model} \\\\cdot \\\\boldsymbol{p}_{world}\\n        "]],"parameters":[]}]]],[2,"\\n\\n\\n        #### Clip Space\\n\\n        With the point now in **view space**, only one other transformation needs to be applied. The output of the **vertex shader**\\n        must be in **clip space**. **Clip space** is a coordinate system where anything lying outside of the range **-w** to **w** will be clipped.\\n        Anything outside those ranges, are not in view of the camera\'s frustum.\\n\\n        An intuitive way of visualizing this is by taking the shape of the camera\'s frustum and shrinking all the sides to form a cube.\\n        The projection matrix maps a coordinate system, into a unit cube. The extents of this cube is **-w** and **w**. Anything\\n        outside this range is not within the frustum\'s visible volume.\\n\\n        "],[8,"katex-block",[],[[],[]],[["default"],[{"statements":[[2,"\\n        \\\\boldsymbol{p}_{clip} = \\\\bold{Projection} \\\\cdot \\\\bold{CameraWorld}^{-1} \\\\cdot \\\\bold{Model} \\\\cdot \\\\boldsymbol{p}_{world}\\n        "]],"parameters":[]}]]],[2,"\\n\\n    "]],"parameters":[]}]]],[2,"\\n    "],[8,"prose-figure",[],[["@figureId","@figureCaption","@imageUrl"],["2","The clipping volume is a cube with width, height, depth of w",[30,[36,0],["figures/clipspace-e4d06cc6287c3a86f421ab8c0624e0cb.png"],null]]],null],[2,"\\n    "],[8,"prose-markdown",[],[[],[]],[["default"],[{"statements":[[2,"\\n        ### Clipping\\n\\n        Clipping is a process the **GPU** does to get rid of geometry that is not visible. Triangles are clipped against 6 clipping planes,\\n        **left**, **right**, **bottom**, **top**, **near**, and **far**. These clipping planes are the sides of a frustum and are usually specified in camera properties\\n        for **aspect ratio**, **field of view**, and **near** and **far** clipping distances.\\n\\n        Primitives that lie outside these planes are clipped. Ones that intersect the planes require reconstruction so that\\n        part of it can be visible without being culled entirely.\\n\\n        It\'s also during this phase that **perspective division** is performed. The 4D homogenous coordinate passed in from the shader\\n        is divided by "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"p_w"]],"parameters":[]}]]],[2,". "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"p_w"]],"parameters":[]}]]],[2," is computed with the help of the perspective transform and is\\n        usually just the value of "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"p_z"]],"parameters":[]}]]],[2,". After perspective division, "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"p_w"]],"parameters":[]}]]],[2," is again 1 and can\\n        be ignored. It exits this stage as a **3D** vector in **normalized device coordinates**.\\n\\n        ### Screen Mapping\\n\\n        **Normalized device coordinates (NDC)**, is a **3D** space with **X**, **Y** pointing right and up respectively. **Z** points away from you, opposite\\n        the right-handed system. The values range from -1 to 1 on all axes. During this stage, the space is translated and scaled to match\\n        the aspect ratio of the viewport where "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"[p_x, p_y]"]],"parameters":[]}]]],[2," will range from 0 to 1. The **Y** axis points down in this\\n        coordinate system. This coordiate system is commonly referred to as screen space.\\n\\n        ## Rasterization Stage\\n\\n        Rasterization is the process of determining which pixels are inside a triangle. This stage outputs fragments to be shaded by the next\\n        stage. I will often refer to pixels as fragments. To be technically accurate, they are not the same. You can have multiple fragments per\\n        pixels. Fragments are sample points along a primitive that coincide with a pixel. With MSAA, multiple samples are taken to\\n        help reduce jagged edges. In that scenario, you\'d have multiple fragments per pixel.\\n\\n        ## Pixel Processing Stage\\n\\n        This stage is responsible for determining the color values for each pixel or fragment. This stage consist of the\\n        fragment shader and the output merger stage.\\n\\n        ### Fragment Shader\\n\\n        A fragment shader can be as simple as a single instruction which outputs a a sigle color for every fragment, or be more complex\\n        and blend multiple textures. This stage is fully programmable just like the vertex shaders. A fragment\\n        shader is run for every fragment fed by the rasterizer, which could mean one or more runs per pixel. Not only is it run for each fragment but for each primitive as well. Overlapping primitives\\n        will have similar pixel coverage so a shader will be executed for each pixel in that primitive more than once.\\n\\n        ### Output Merger\\n\\n        After a color is generated for a pixel, the final color value is calculated and sent to the frame buffer or render target. If a pixel\\n        overlaps a pixel already in the buffer, the one with a lower z-value is kept and the other is discarded. This is what happens when the\\n        depth buffer write is enabled and depth testing is turned on. The depth buffer stores the previous z-value of that pixel.\\n\\n        For non-opaque objects, blending can be used to blend the source color with the destination color. Normally, depth testing is turned off\\n        for transparent objects so it won\'t be immediately discarded. Blending is not programmable but highly configurable. You can set different\\n        blending equations. The normal blending equation looks like this:\\n\\n        ```javascript\\n        finalColor = source.rgb * source.apha + destination.rgb * (1 - source.alpha)\\n        ```\\n\\n        A fews notes about performance. While it appears that executing shaders for pixels already visited seem like a waste, it\'s actually required\\n        for any blending to occur. Blending itself also adds a performance hit as it needs to read and write to the frame buffer.\\n\\n        For opaque objects, it\'s possible to completely eliminate the pixel from being rendered if it didn\'t pass the depth test. This is called\\n        early z depth testing and it requires that the pixel shader not override the z value for the pixel.\\n\\n        Primitives can be sorted so that when they are rendered, closer objects are drawn first. This helps with performance by rejecting pixels for objects behind.\\n\\n        This is such a common problem because it isn\'t easily overcome. Avoiding the issue usually requires adding more constraints to your\\n        artistic designs. These classes of problems are commonly called overdrawing.\\n\\n        ## Post Processing Stage\\n\\n        It\'s difficult to achieve some photographic effects like **depth of field**, **motion blur**, and **bloom** to name a few. This is just the nature of\\n        rasterizers. Each fragment shader is run in the scope of a single pixel from a single primitive. It\'s not possible to blend across pixels\\n        during a fragment shader\'s execution.\\n\\n        To achieve these effects, a commonly used technique is to render to a texture in the first pass. In the second pass, the fragment shader\\n        can access the colors of the texture and sample any part of that texture to achieve cool effects.\\n\\n        ## GPUs\\n\\n        Let\'s take a brief moment to talk about the workhorse that is making all this possible, the **GPGPU (General Purpose Graphics Processing Unit)**.\\n        Before we had **GPGPUs**, and even before **GPUs**, and even before **3D accelerator cards**, everything was done on the **CPU**. Special fixed hardware\\n        existed in the commercial space but were expensive and they were optimized for **2D** rendering.\\n\\n        In 1996, **3dfx** came out with the **Voodoo** card and was the first **3D** accelerator cards in the market. In the year 2000, **nVidia** came out with the\\n        first **GPU**, which contained built in **fixed-function pipeline** for doing **transform and lighting** (the precursor to vertex and pixel shaders). It wasn\'t\\n        until **nVidia** released the first general purpose **GPU**, the **GeForce 3**, that a fully-programmable pipeline was available. **GeForce** released **CUDA**\\n        alongside these **GPGPUs** to allow developers to use these cards for other tasks normally run on the **CPU**, like **physics** and **AI**.\\n\\n        ### Massive Parallelism\\n\\n        **GPUs** are incredibly fast, but unlike a **CPU** which mostly executes things in a serial fashion, **GPUs** run everything in parallel on custom silicon\\n        dedicated for **3D** rendering. Much of the processor space on a **GPU** is made up of several thousand smaller processor cores called **shader cores**.\\n        Each shader invocation is independent and share no info with neighboring pixel shaders. This allows thousands of shaders to be running in parallel.\\n        **GPUs** use a **SIMD** architecture, which means a single instruction is run across multiple shaders and they execute in lock-step.\\n    "]],"parameters":[]}]]],[2,"\\n"],[13]],"hasEval":false,"upvars":["root-url"]}',moduleName:"fundamentals/pods/docs/graphics-pipeline/template.hbs"})
e.default=t})),define("fundamentals/pods/docs/introduction/template",["exports"],(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.HTMLBars.template({id:"dDQQHuYL",block:'{"symbols":[],"statements":[[10,"div"],[14,0,"relative px-4 sm:px-6 lg:px-8"],[12],[2,"\\n    "],[8,"heading",[],[["@title","@subtitle"],["Fundamentals of Realtime Rendering","A guide for beginners"]],[["default"],[{"statements":[[2,"\\n        This site aims to be a treasure trove of 3D graphics programming knowledge. It is geared towards beginners with an emphasis\\n        on providing interactive tutorials to build intuition. These tutorials were developed to help you learn by seeing and doing.\\n    "]],"parameters":[]}]]],[2,"\\n    "],[8,"prose-markdown",[],[[],[]],[["default"],[{"statements":[[2,"\\n        My journey into 3D graphics programming was a long and hard one. I can comfortably say I\'m proficient at it now but it required 20+ years to get to where I am now. Don\'t mistake\\n        those 20+ years as actual experience. My time on this subject was rot with challenges and frustration. When I started, knowledge on the subject wasn\'t widely available.\\n        For sure the information was out there, but it was fractured and nothing was immediately available online as it is today. Books and academic papers were really the only source on the matter.\\n        To make matters worse, those books were often written in an alien language.\\n\\n        Today, it\'s hard not to find a massive catalogue of information on graphics programming. With resources like the [Realtime Rendering Book](http://www.realtimerendering.com) and\\n        [Learning OpenGL](http://learnopengl.com), this is the perfect time to learn. 3D applications are ubiquitous. We can find them in everything from games, simulations, drafting,\\n        and even the web. Gamers are constantly fed with new emerging tech each year, while marketplaces are inundated with indie titles from developers like us.\\n\\n        However, even with all these resources, I can\'t help shake the feeling that we\'re missing something. **Learning new things is a pain in the butt!** The topics discussed in graphics normally require\\n        we visualize it to understand it. On top of that, coding is better learned by actually writing code.\\n\\n        I developed this site with the goal of giving the past me the learning experience I would have wanted. I am someone that can\'t instantly learn something by staring at an equation.\\n        Someone who reads the same book 10 times over to gain any insights. Someone traditional graphics textbooks weren\'t meant for. In other words, I\'m normal just like many of you entering this field.\\n\\n        ## How to Use this Site\\n\\n        This site is geared towards beginners. It\'s not another **\\"Getting Started in** *(__insert framework__)*\\" series. I strongly believe that to become good at anything, mastering the fundamentals\\n        is key. While this site focuses on using **THREE.js** examples, the knowledge you learn here can be applied to any framework and any language.\\n\\n        For the more advance user, I hope you\'re able to find a home here. I think that in due time, this site will have enough info to be used as a bible of sorts. If not, then stay for the cool\\n        interactive examples, or bookmark it to use it as a teaching aid for your juniors.\\n\\n        Many figures on this site will be interactive. If the figure has controls enabled, you\'ll be able to manipulate the objects on the fly. If it has accompanying code, expanding to\\n        fullscreen will open up the editor where you can make changes live and watch the scene reload with your changes. All examples are written in **Javascript** with **THREE.js** to run **WebGL**. What better\\n        way to learn then to go straight to coding instantly while you\'re simultaneously reading up on the theory.\\n\\n        The examples were meant to illustrate concepts that are hard to say into words. You don\'t need to know Javascript to play with the examples but I leave it there for you to experiment.\\n        Some of my tutorials will cover **GLSL** for writing shaders. I assume most of my readers are programmers and the amount of **Javascript** you\'ll encounter shouldn\'t\\n        leave you blindsided. **THREE.js** was chosen because it abstracts some low-level details of WebGL away while being lightweight and without being too overly opinionated.\\n\\n        As of this writing, the site is in its infancy. Stay tuned for more updates.\\n    "]],"parameters":[]}]]],[2,"\\n"],[13]],"hasEval":false,"upvars":[]}',moduleName:"fundamentals/pods/docs/introduction/template.hbs"})
e.default=t})),define("fundamentals/pods/docs/language-of-3d/template",["exports"],(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.HTMLBars.template({id:"NYzT3Q9X",block:'{"symbols":[],"statements":[[10,"div"],[14,0,"relative px-4 sm:px-6 lg:px-8"],[12],[2,"\\n    "],[8,"heading",[],[["@title","@subtitle"],["The Language of 3D","How to talk to aliens"]],[["default"],[{"statements":[[2,"\\n        Understanding the language of 3D is crucial in the field of rendering. While it may not be necessary to\\n        have a deep understanding of the math involved, not having a solid grasp of the fundamental math could\\n        hinder your learning. Its essential to build a solid intuition of the operations commonly involved in this\\n        space.\\n    "]],"parameters":[]}]]],[2,"\\n    "],[8,"prose-markdown",[],[[],[]],[["default"],[{"statements":[[2,"\\n        In the previous chapter on "],[6,[37,0],null,[["route"],["docs.physics-of-light"]],[["default"],[{"statements":[[2,"Physics of Light"]],"parameters":[]}]]],[2,", I mentioned\\n        light rays, surfaces, normals, and other mathematical concepts that might be foreign to you.\\n\\n        Surfaces, or planes, represent the absolute smallest renderable component of any object. A plane can be created\\n        with a minimum of **3** points. A **4th** point is not necessary and not often used as the **4th** point can become non-coplanar\\n        with the other points. A plane, however, is commonly represented as **2** separate triangles attached at the base.\\n    "]],"parameters":[]}]]],[2,"\\n    "],[8,"prose-figure",[],[["@componentName","@figureId","@figureCaption","@props"],["figures/math/surface","1","Quad rendered as 2 triangles",[30,[36,1],null,[["enableWireframe"],[true]]]]],null],[2,"\\n    "],[8,"prose-markdown",[],[[],[]],[["default"],[{"statements":[[2,"\\n        Most things are modeled with triangles from something as simple as a sheet of paper to even more complex shapes\\n        like a human being. These polygons (many sides), are individually rendered and in order to do that, we\'d need to\\n        know things about it.\\n\\n        "],[10,"ul"],[12],[2,"\\n            "],[10,"li"],[12],[2,"Is it being viewed by the camera?"],[13],[2,"\\n            "],[10,"li"],[12],[2,"Is it being lit by a light source?"],[13],[2,"\\n            "],[10,"li"],[12],[2,"What color is it?"],[13],[2,"\\n        "],[13],[2,"\\n\\n        In addition we\'d need to know some things about the lights in the scene as well as the camera.\\n\\n        "],[10,"ul"],[12],[2,"\\n            "],[10,"li"],[12],[2,"Where is the camera positioned?"],[13],[2,"\\n            "],[10,"li"],[12],[2,"What is the camera\'s field of view?"],[13],[2,"\\n            "],[10,"li"],[12],[2,"Where is the light positioned?"],[13],[2,"\\n            "],[10,"li"],[12],[2,"What kind of light is it? Directional, point, spot, area light?"],[13],[2,"\\n        "],[13],[2,"\\n\\n        In all these questions, I need to know specific properties related to their position and orientation\\n        in **3D** space.\\n\\n        ## Measure\\n\\n        Building things in real life require taking measurements. There\'s no way around it, we need math. We often\\n        measure dimensions of shapes with width, height, depth and positions with **x**, **y**, and **z**. Although our choice of\\n        **x**, **y**, **z** are often arbitrary and relative to the situation. When I designed my new kitchen, I used the corner\\n        as my center and measured relative to that. Doing that in a virtual simulation requires we represent those\\n        **3**-dimensional quanties in a virtual space and a conventional frame of reference needs to be established.\\n\\n        The **3** values associated with **x**, **y**, and **z** can be group together as a single vector, where a vector represents\\n        a point in space or a direction. Mathematically, a vector is really just a structure that contains multiple values.\\n\\n        It\'s easy to see how a vector can represent points in space. "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\boldsymbol{P} = (1,3,5)"]],"parameters":[]}]]],[2,"\\n        can be read as 1 unit away from the origin in the **X** direction, **3** units in **Y**, **5** units in **Z**.\\n\\n        Geometrically, you can picture a vector as an arrow with the tail pinned at the origin and the head pinned\\n        at the vector\'s "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"[v_y, v_y, v_z]"]],"parameters":[]}]]],[2," coordinate. These vectors have a length and direction.\\n\\n        ## Directions\\n\\n        Vectors can also be used to describe motion. Velocity is described as a some distance traveled over a unit distance "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\boldsymbol{v} = d/t"]],"parameters":[]}]]],[2,".\\n        Velocity also measures direction. For instance, falling objects are described with negative velocity.\\n        Since directionality can be represented with vectors, vectors are a good notation for modeling velocity.\\n\\n        Directional vectors can be used to position objects, i.e. they describe a translation in **3D** space. They can also\\n        describe the direction of light, acceleration, the force of gravity, and dimensional axes.\\n    "]],"parameters":[]}]]],[2,"\\n    "],[8,"prose-figure",[],[["@componentName","@figureId","@figureCaption"],["figures/math/directional-vectors","2","A point in space can also be viewed as a directional vector with the tail pinned at the origin"]],null],[2,"\\n    "],[8,"prose-markdown",[],[[],[]],[["default"],[{"statements":[[2,"\\n        ## Unit vectors\\n\\n        Directional vectors are used soley to represent direction where length doesn\'t matter. These vectors can\\n        be normalized so it\'s length is always **1**. I previously mentioned that directional vectors can represent an axis in **3D** space.\\n        What does that mean exactly? Can\'t we just assume that up is up, down is down, and right is right? Well, when I say it like\\n        that it\'s obvious that up should be up but up is relative. Up on Earth is commonly perpendicular to the ground. In order\\n        to model this in math, we\'ll have to throw those assumptions away in order to generalize.\\n\\n        Knowing how to interpet "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"(v_x,v_y,v_z)"]],"parameters":[]}]]],[2," coordinates requires we setup a coordinate\\n        frame. That is, a coordinate system established with a set of axes that identifies the direction each coordinate\\n        will take. The **x** axis is not necessarily horizontal, nor is **y** necessarily vertical. Some **3D** modeling tools\\n        use **z** for the vertical dimension. The **2D** coordinate system for css has the **y** axis vertical but inverted.\\n\\n        The directions these axes face tell us how to align the coordinate points. Directional vectors only need a length\\n        of *1* to specify a direction. Scaling this vector does not change the direction and so these vectors are mostly\\n        specified as unit vectors. The axes in a frame commonly established in **3D** are all perpendicular to each other.\\n        Unit vectors in a coordinate frame are called basis vectors.\\n\\n        An order pair of numbers like "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"(1, 2, 3)"]],"parameters":[]}]]],[2," can be rewritten as a linear combination of the basis vectors. "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\boldsymbol{p} = 1\\\\hat{x} + 2\\\\hat{y} + 3\\\\hat{z}"]],"parameters":[]}]]],[2,"\\n        Each coordinate is a number that is multiplied by their basis vectors. Writing vectors out with "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"(v_x, v_y, v_z)"]],"parameters":[]}]]],[2," is just\\n        shorthand.\\n\\n        ## Which Way Is Up?\\n\\n        The coordinate system we use in **3D** is either right-handed or left-handed depending on what API you use. In Math,\\n        and in OpenGL, right-handed is used. In DirectX, left-handed is used. We\'ll stick with right-handed systems.\\n\\n        In right-handed systems, **x** points right, **y** points up, and **z** points towards you.\\n    "]],"parameters":[]}]]],[2,"\\n    "],[8,"prose-figure",[],[["@componentName","@figureId","@figureCaption"],["figures/math/unit-vectors","3","Right-handed coordinate system"]],null],[2,"\\n    "],[8,"prose-markdown",[],[[],[]],[["default"],[{"statements":[[2,"\\n        ## Vector Notation\\n\\n        The math world is pretty strict. Vectors can either be expressed in row-major format\\n        "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"[1,2,3]"]],"parameters":[]}]]],[2,"\\n        or column-major "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\begin{bmatrix}1 \\\\\\\\ 2 \\\\\\\\ 3 \\\\end{bmatrix}"]],"parameters":[]}]]],[2,".\\n\\n        You might see column vectors shown as rows but transposed, meaning flipped so that rows become the columns.\\n        "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"[1,2,3]^T"]],"parameters":[]}]]],[2,".\\n\\n        This column-major vector format will become more clear in the chapter on transformation.\\n\\n        ## Surface normals\\n\\n        Planes are often described with a normal "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\boldsymbol{n}"]],"parameters":[]}]]],[2," and a distance "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"d"]],"parameters":[]}]]],[2,".\\n        The plane normal is a directional vector that descibes the orientation of the plane\\n        The distance property "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"d"]],"parameters":[]}]]],[2," describes how far away this surface is from the origin, along the plane normal.\\n        In math, a plane is a flat surface that extends to infinity. This surface is the set of all points on the plane a distance "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"d"]],"parameters":[]}]]],[2,"\\n        away from the origin and oriented in the normal direction.\\n\\n        Surface normals are plane normals. They are always perpendicular to the surface. Their origin is always\\n        assumed to be relative to the surface\'s origin. They are critical in shading algorithms, collision detection,\\n        and other angle/distance measurements.\\n    "]],"parameters":[]}]]],[2,"\\n    "],[8,"prose-figure",[],[["@componentName","@figureId","@figureCaption","@props"],["figures/math/surface","3","Normals are unit vectors pointing straight out from the surface",[30,[36,1],null,[["enableNormal"],[true]]]]],null],[2,"\\n    "],[8,"prose-markdown",[],[[],[]],[["default"],[{"statements":[[2,"\\n        ## Describe Our Scene With Vectors\\n\\n        Let\'s use vectors to represent some quantities we\'d find in a simple scene. A scene comprised of a single triangular\\n        surface and one light source. Here\'s what we need.\\n\\n        A triangle is made up of *3* points "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2," \\\\triangle{ABC}"]],"parameters":[]}]]],[2,". Let\'s call those points "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\boldsymbol{A}"]],"parameters":[]}]]],[2,", "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\boldsymbol{B}"]],"parameters":[]}]]],[2,", and "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\boldsymbol{C}"]],"parameters":[]}]]],[2,".\\n\\n        "],[8,"katex-block",[],[[],[]],[["default"],[{"statements":[[2,"\\n            \\\\boldsymbol{A} = ( -0.5,-0.5,0 )^T\\\\\\\\\\n            \\\\boldsymbol{B} = ( 0.5,0,0 )^T\\\\\\\\\\n            \\\\boldsymbol{C} = ( 0,0.5,0 )^T\\n        "]],"parameters":[]}]]],[2,"\\n\\n        Let\'s assume the triangles is modeled in a separate space where the origin is the center of the triangle. Positioning this triangle in the world\\n        would require another position. Let\'s call this "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\boldsymbol{T}"]],"parameters":[]}]]],[2,";\\n\\n        "],[8,"katex-block",[],[[],[]],[["default"],[{"statements":[[2,"\\n            \\\\triangle{ABC\'} = \\\\triangle{ABC} + \\\\boldsymbol{T}\\\\\\\\\\n\\n            \\\\boldsymbol{A\'} = \\\\boldsymbol{A} + \\\\boldsymbol{T}\\\\\\\\\\n            \\\\boldsymbol{B\'} = \\\\boldsymbol{B} + \\\\boldsymbol{T}\\\\\\\\\\n            \\\\boldsymbol{C\'} = \\\\boldsymbol{C} + \\\\boldsymbol{T}\\n        "]],"parameters":[]}]]],[2,"\\n        This triangle needs one more vector. The surface normal. Let\'s call this "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\boldsymbol{n}"]],"parameters":[]}]]],[2,". Let\'s make "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\boldsymbol{n}"]],"parameters":[]}]]],[2," point directly up.\\n\\n        "],[8,"katex-block",[],[[],[]],[["default"],[{"statements":[[2,"\\n            \\\\boldsymbol{n} = [ 0,1,0 ]^T\\n        "]],"parameters":[]}]]],[2,"\\n\\n        The light is a directional light source. This light only emits light in one direction. The sun can be modeled as a\\n        directional light source. It\'s far enough away, the rays are close to parallel when reaching Earth. Since the\\n        rays are parallel, a light position isn\'t necessary, only direction is. Let\'s call this direction "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\boldsymbol{l}"]],"parameters":[]}]]],[2," that points directly towards the noon-day sun.\\n\\n        "],[8,"katex-block",[],[[],[]],[["default"],[{"statements":[[2,"\\n            \\\\boldsymbol{l} = [ 0,1,0 ]^T\\n        "]],"parameters":[]}]]],[2,"\\n\\n        It should be clear, without much math skills, where things are positioned. Here\'s a visual example of the scene\\n        described above.\\n    "]],"parameters":[]}]]],[2,"\\n    "],[8,"prose-figure",[],[["@componentName","@figureId","@figureCaption","@props"],["figures/math/simple-triangle","4","Triangle modeled at (0,0,0) then translated by (0, 1, 0) with a normal pointing up. Source code accompanies this so check it out if you are interested on how this scene was setup.",[30,[36,1],null,[["enableNormal"],[true]]]]],null],[2,"\\n"],[13]],"hasEval":false,"upvars":["link-to","hash"]}',moduleName:"fundamentals/pods/docs/language-of-3d/template.hbs"})
e.default=t})),define("fundamentals/pods/docs/object-modeling/template",["exports"],(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.HTMLBars.template({id:"jOPQAEry",block:'{"symbols":[],"statements":[[10,"div"],[14,0,"relative px-4 sm:px-6 lg:px-8"],[12],[2,"\\n    "],[8,"heading",[],[["@title","@subtitle"],["Object Modeling","The building blocks"]],[["default"],[{"statements":[[2,"\\n        The subject of object modeling is more art then science. While I won\'t be able to cover how best to model\\n        a dinosaur in this series, I\'ll focus my attention on the workflow. A mesh can be as simple as a single\\n        triangular face, or be as complex as a T-rex, rigged, skinned, and textured. In this article, I\'ll talk\\n        about what it takes to bring a T-rex to life.\\n    "]],"parameters":[]}]]],[2,"\\n    "],[8,"prose-markdown",[],[[],[]],[["default"],[{"statements":[[2,"\\n        We\'ve covered quite a bit already, from camera projections, to lighting and the beginnings of 3D math. Earlier,\\n        I said you can assume that objects are represented as a point cloud. That\'s not entirely accurate. Objects\\n        modeled as point clouds do exist and are commonly used in voxel renderers, but the majority of renderers work on\\n        polygonal meshes. This article is meant to be fun and give you a look into what it really takes to represent\\n        a virtual 3D object.\\n\\n        Let\'s bring in a T-rex with nothing but vertex information. The most we can do is display the wireframe, or fill it\\n        with a single color. We don\'t have normals so it can\'t be lit with a light source. It doesn\'t carry with it\\n        any color information so we can\'t display it with multiple colors.\\n    "]],"parameters":[]}]]],[2,"\\n    "],[8,"prose-figure",[],[["@componentName","@figureId","@figureCaption","@props"],["figures/object-modeling","1","Basic wireframe mesh",[30,[36,0],null,[["mode"],["wireframe"]]]]],null],[2,"\\n    "],[8,"prose-markdown",[],[[],[]],[["default"],[{"statements":[[2,"\\n        ## Indexed Vertex Data\\n\\n        Artists would use programs like Maya or Blender to create this data. That data is essentially a list of faces with\\n        each face containing 3 vertices. A renderer can simply iterate through the list of faces and invoke basic APIs for\\n        drawing a triangle primitive.\\n\\n        It\'s common to not duplicate vertex data considering that faces could share vertices. For example, a box has 12 faces\\n        (6 sides times 2 triangles per side). Every face contains 3 vertices, a total of 24 vertices. That\'s a lot of vertices\\n        when a box could be represented efficiently with 8 vertices.\\n\\n        Instead of storing 3 vertices per face, it would be better to keep vertex data separate from faces. Faces\\n        can reference each vertex using it\'s position in the vertex data buffer, it\'s index. Most graphics APIs will\\n        have a way to draw primitives by specifying the indices to the vertices.\\n    "]],"parameters":[]}]]],[2,"\\n    "],[8,"prose-figure",[],[["@figureId","@figureCaption","@imageUrl","@vertical"],["2","Vertex data is stored separate from the primitive data (tris). Index data defines the vertices to be used when rendering triangles.",[30,[36,1],["figures/vertex-index-buffer-96de048c11fe638e165f7e644fea9acb.png"],null],true]],null],[2,"\\n    "],[8,"prose-markdown",[],[[],[]],[["default"],[{"statements":[[2,"\\n        It\'s not always best to use the same vertex for multiple faces. Normals are commonly grouped together with vertices so\\n        in the box example with 8 vertices, that can only have 8 normals. There are 12 faces so which normals go to which face?\\n        It might not be obvious why but all 3 normals associated with a face need to point in the same direction. Otherwise, you\\n        would get weird shading that might make the triangle look less like a triangle and more like a curved surface. Vertices\\n        sometimes need to be duplicated to keep the normals separate. Vertices are normally shared when you want to create a smooth\\n        looking surface. You might see or hear this referred to smoothing groups.\\n\\n        ## Wireframes Are Boring\\n\\n        Let\'s add some life to this model and introduce some color. I\'ve taken the liberty to supplement the vertex\\n        data with color information. That means every vertex would get a color value.\\n    "]],"parameters":[]}]]],[2,"\\n    "],[8,"prose-figure",[],[["@componentName","@figureId","@figureCaption","@props"],["figures/object-modeling","3","Smooth shading with vertex colors. You will notice that the pixels between the verts are being colored, not just the verts. In smooth shading, colors in between verts are blended.",[30,[36,0],null,[["mode"],["vertex-colors"]]]]],null],[2,"\\n    "],[8,"prose-markdown",[],[[],[]],[["default"],[{"statements":[[2,"\\n        ## Lights Make a Big Difference\\n\\n        Now let\'s add normals. As I said before, normals is essential for lighting calculations.\\n    "]],"parameters":[]}]]],[2,"\\n    "],[8,"prose-figure",[],[["@componentName","@figureId","@figureCaption","@props"],["figures/object-modeling","4","Use per-vertex normals so we can give this dinosaur some depth",[30,[36,0],null,[["mode"],["normals"]]]]],null],[2,"\\n    "],[8,"prose-markdown",[],[[],[]],[["default"],[{"statements":[[2,"\\n        It\'s looking much better but something seems off right? If you noticed it doesn\'t have any self-casted shadows, then\\n        you\'re right. It\'s not practical to using ray-tracing algorithms in realtime just yet. For realtime\\n        renderers, shadows are added afterwards.\\n\\n        Outside in real life, even though there is a single directional light source, there are infinitely many\\n        light sources coming from all directions. Achieving this effect in realtime renderers is not easily done.\\n        You can add an ambient light source that is supposed to mimic a global light intensity but it\'s not the same\\n        and it doesn\'t produce the soft shadows you see in real life.\\n\\n        There\'s still more we can do to this dinosaur to make it look more appealing. Before, we just assigned color\\n        values to each vertex but we can actually assign a color to each individual pixel.\\n\\n        ## Textures\\n\\n        Textures provide a low cost way to provide per-pixel information to a mesh. Without textures, you\'d have to\\n        have a vertex per pixel which could result in eating up your polygon budget. In order to apply a texture to a mesh,\\n        artists need to tell the renderer how this texture will wrap around the mesh and the process is called UV mapping.\\n\\n        UV mapping is a process which takes a **3**-dimensional object and unfold it so all it\'s faces can be spread out\\n        in **2**-dimensional space. UV stands for the coordinate axes in texture space. Since most textures are **2**-dimensional,\\n        it has **2** axes "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\boldsymbol{u}"]],"parameters":[]}]]],[2," and "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\boldsymbol{v}"]],"parameters":[]}]]],[2,". Think of UV mapping as\\n        tearing up your clothes at the seams and laying them out on a flat table.\\n\\n    "]],"parameters":[]}]]],[2,"\\n    "],[8,"prose-figure",[],[["@figureId","@figureCaption","@imageUrl","@vertical"],["5","UV mapping is a process of unfolding 3D geometry into a flat plane",[30,[36,1],["figures/uv_mapping-1a93a7ba7476daea66225130cd4b97aa.png"],null],true]],null],[2,"\\n    "],[8,"prose-markdown",[],[[],[]],[["default"],[{"statements":[[2,"\\n        Once the UVs are mapped, a texture can be applied.\\n    "]],"parameters":[]}]]],[2,"\\n    "],[8,"prose-figure",[],[["@componentName","@props","@figureId","@figureCaption"],["figures/gltf-loader",[30,[36,0],null,[["modelSrc","modelPosition","modelRotation","hdr"],[[30,[36,1],["models/texturedtrex/trex.glb"],null],[30,[36,2],[0,-5,0],null],[30,[36,2],[0,-90,0],null],[30,[36,0],null,[["map","background"],[[30,[36,1],["textures/equirectangular/crystal_falls_2k.hdr"],null],false]]]]]],"6","Textures add quite a bit of life into this dinosaur"]],null],[2,"\\n    "],[8,"prose-markdown",[],[[],[]],[["default"],[{"statements":[[2,"\\n        ## Textures Can Improve Lighting\\n\\n        Textures can be used to improve the horrible lighting quality due to not being able to render with global\\n        illumination (a technique for rendering soft shadows).\\n\\n        Not only can we bake per-pixel color info. We can bake **normals** and **AO**. Texture baking is a process of transferring\\n        high resolution information and storing it in an image where it is applied on a lower resolution object. Texture\\n        baking saves the renderer from having to precompute things on the fly but it is also used to add additional input\\n        from the artist that can\'t be calculated from vertex data alone.\\n\\n        Having normals backed allows us to provide curvature data at much higher resolution then a low-poly model can provide.\\n        Normals can help add cracks and crevices without needing to model in that info. Adding normals don\'t add any extra\\n        geometry but is merely an illusion. This is not unlike a painting shaded to give the illusion of depth. A normal map\\n        is a **24-bit** texture carrying unit directional normals but encoded as **RGB** color.\\n\\n        **AO**, which stands for *ambient occlusion*, is another trick up our sleves. Just as normals can give you a sense of\\n        greater depth, adding **AO** can add to the effect by darkening in areas that are occluded. This gives us\\n        the illusion of shelf-shadows. An *AO* map is a grayscale image where black means that area is occluded.\\n\\n        All these texture maps, except maybe for color, aren\'t normally generated by hand. Instead, special programs\\n        like **zBrush** and **Substance Designer/Painter** are used to either procedurally generate them or allow the artist\\n        to sculpt directly on the model.\\n\\n        There are other commonly used maps like metalness and roughness which is used in physically-based shaders to achieve\\n        realistic renders in realtime.\\n\\n        Let\'s see how this dinosaur looks like with these additional textures.\\n\\n    "]],"parameters":[]}]]],[2,"\\n    "],[8,"prose-figure",[],[["@componentName","@props","@figureId","@figureCaption"],["figures/gltf-loader",[30,[36,0],null,[["modelSrc","modelPosition","modelRotation","hdr"],[[30,[36,1],["models/trex/trex.glb"],null],[30,[36,2],[0,-5,0],null],[30,[36,2],[0,-90,0],null],[30,[36,0],null,[["map","background"],[[30,[36,1],["textures/equirectangular/crystal_falls_2k.hdr"],null],true]]]]]],"7","Rendering using PBR Metalness-Roughness Workflow"]],null],[2,"\\n"],[13]],"hasEval":false,"upvars":["hash","root-url","array"]}',moduleName:"fundamentals/pods/docs/object-modeling/template.hbs"})
e.default=t})),define("fundamentals/pods/docs/photography/template",["exports"],(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.HTMLBars.template({id:"ljpxuBal",block:'{"symbols":[],"statements":[[10,"div"],[14,0,"relative px-4 sm:px-6 lg:px-8"],[12],[2,"\\n    "],[8,"heading",[],[["@title","@subtitle"],["Photography","Where it all begins"]],[["default"],[{"statements":[[2,"\\n        Learning the art and science of photography may go a long way into building an intuition for 3D graphics programming.\\n        Understanding topics like perspective, lighting, and lenses are crucial to the understanding of 3D rendering.\\n    "]],"parameters":[]}]]],[2,"\\n    "],[8,"prose-markdown",[],[[],[]],[["default"],[{"statements":[[2,"\\n        Rendering is an art and before cameras, artists would use techniques to capture images from life, just by observing with their eyes.\\n        Using grayscale only values (commonly referred to as just \\"value\\"), it\'s possible to project what we see onto a surface and make it appear to have depth.\\n\\n        Shapes can be constructed not just with lines depicting the edges, but shaded to give the illusion of form. Sharp edges tend to\\n        have drastic changes in value while soft edges transition more slowly.\\n    "]],"parameters":[]}]]],[2,"\\n    "],[8,"prose-figure",[],[["@figureId","@figureCaption","@imageUrl"],["1","An illustration of a ball. The soft shading is critical to show that this is a sphere.",[30,[36,0],["figures/artist_illustration_ball-9a8e6061cdcf4297941d5d4636d0e504.png"],null]]],null],[2,"\\n    "],[8,"prose-markdown",[],[[],[]],[["default"],[{"statements":[[2,"\\n        Color alone isn\'t enough right? No, proportions also matter. The ball could be shaped more rigidly like a box and the edges smoothed\\n        out but you\'ll have a tough time convincing me that\'s a sphere.\\n    "]],"parameters":[]}]]],[2,"\\n    "],[8,"prose-figure",[],[["@figureId","@figureCaption","@imageUrl"],["2","An illustration of a box but shaded like a sphere. Even with soft shadows, it\'s not very convincing.",[30,[36,0],["figures/artist_illustration_sphere_shaded_box-23990a6e44b0b2acddcea389826aebf8.png"],null]]],null],[2,"\\n    "],[8,"prose-markdown",[],[[],[]],[["default"],[{"statements":[[2,"\\n        We perceive proportions in the real world though a lens, our eyes. The shape of this lens and the field of view changes the apparent\\n        relative sizes of the objects we see. We know they\'re actually not changing size, that would be silly. Objects further away simply\\n        get smaller and eventually vanish into the horizon. They vanish because our field of view covers more area the further out it is.\\n    "]],"parameters":[]}]]],[2,"\\n    "],[8,"prose-figure",[],[["@figureId","@figureCaption","@imageUrl"],["3","An artist\'s illustration of a 3D scene using perspective guidelines",[30,[36,0],["figures/artist_illustration_perspective-6eff43b79d9775e188957e982a737897.png"],null]]],null],[2,"\\n    "],[8,"prose-markdown",[],[[],[]],[["default"],[{"statements":[[2,"\\n        ## Pinhole Camera\\n\\n        In the early days, a camera was simply a box with a tiny hole to let light through. The diameter of the hole had to be small to help focus\\n        the light without a lens. An inverted image is produced at the back of the camera box, opposite the hole. Adjusting the image plane distance\\n        will adjust the **focal length** and **viewing angle**.\\n\\n        **Focal length** and **field of view** are directly related. Changing one will change the other. Play with this example to get a feel\\n        for how adjusting these parameters effect the overall image.\\n    "]],"parameters":[]}]]],[2,"\\n    "],[8,"prose-figure",[],[["@figureId","@figureCaption","@componentName"],["4","Interactive visualization of adjusting focal length","figures/pinhole-camera"]],null],[2,"\\n    "],[8,"prose-markdown",[],[[],[]],[["default"],[{"statements":[[2,"\\n        Hopefully you\'ve played enough with the figure above to get the sense that adjusting the image plane forwards closer to the aperture, the field\\n        of view gets larger, thereby covering more area. It\'s zooming out. When moving the image plane backwards, you get the opposite effect.\\n        It\'s zooming in.\\n\\n        ## An Imperfect Camera\\n\\n        You might be wondering if changing the diameter of the pinhole has any effect. It does, however, in a not so obvious way. The smaller the hole,\\n        the better the quality of the image, or rather, the sharper the image. The bigger the hole, the bigger the grouping of rays captured and the\\n        blurrier the image. This grouping of light rays is commonly referred to as the circle of confusion or bokeh. While the diameter effects maximum focal\\n        length, pinhole sizes are often kept constant and an optimal size is chosen based on the optimum distance to the image plane to keep things in focus.\\n\\n        Ideally, the perfect diameter would be small enough to limit all but a single ray from each direction. The resulting image would be really\\n        sharp and each point on the image would correspond to exactly one ray instead of a grouping of rays arriving at random angles. However, this\\n        would be physically impossible. Such a small pinhole would result in diffraction artifacts as the size approaches the wavelength of the light.\\n\\n        ## A Better Camera\\n\\n        Pinhole cameras are nice but they bring with them a slew of issues. Modern day cameras are equipped with a lens to help focus the light unto a\\n        single point. Unlike a pinhole camera, lenses introduce other artifacts like **depth of field**. **Depth of field** is a property of\\n        a len\'s ability to focus outside the focal length or lack of focus to be more accurate. Within the focal range, objects appear sharp but blurry outside of it. This is mostly not an\\n        issue as people perceive this artifact as astethically pleasing and often buy better lenses to achieve more depth of field easier.\\n    "]],"parameters":[]}]]],[2,"\\n    "],[8,"prose-figure",[],[["@componentName","@props","@figureId","@figureCaption"],["figures/gltf-loader",[30,[36,1],null,[["modelSrc"],[[30,[36,0],["models/camera/cam.gltf"],null]]]],"5","A DSLR camera is a beast of modern technology. They feature variable zoom, variable aperture, auto focus, stabilization, and much more."]],null],[2,"\\n    "],[8,"prose-markdown",[],[[],[]],[["default"],[{"statements":[[2,"\\n\\n        ## Virtual Cameras\\n\\n        If photorealism is the goal for a work of art, then you can do no better than with a photocamera. However, this is not easy to achieve when the subject\\n        being photographed is a work of fiction. Two of the biggest driving force behind recent advancement in computer generated imaging is films and obviously\\n        games. The two being categorized as offline vs realtime rendering, the latter of which we\'ll focus on more.\\n\\n        Generating an image in a computer requires a camera, just like their real-world counterparts. Virtual cameras used in realtime renders, are modeled\\n        after an ideal pinhole camera. No diffraction effects, and no blur. Computer generated images are ultra sharp as there is infinite depth of field since\\n        there is no physical lens.\\n\\n        The viewing volume of this virtual camera is modeled as a **frustum**, as opposed to a cone from the pinhole camera. The cone is not necessary considering\\n        the light gets captured onto a rectangular screen.\\n\\n    "]],"parameters":[]}]]],[2,"\\n    "],[8,"prose-figure",[],[["@figureId","@figureCaption","@componentName","@props"],["6","A frustum is a pyramid with it\'s peak cut off. The imaging plane is before the crossing point (nodal point). The image produced is the same whether behind or in front of this nodal point, except that it will not be inverted.","figures/camera-projection",[30,[36,1],null,[["enableCameraControls"],[true]]]]],null],[2,"\\n    "],[8,"prose-markdown",[],[[],[]],[["default"],[{"statements":[[2,"\\n        ## Projection\\n\\n        A virtual camera needs to be able to take in a virtual world and render it out onto a 2-dimensional surface. Of course this also means that we need to be\\n        able to simulate the subjects in this virtual world. I\'ll discuss object modeling in a separate chapter but assume for now that every object in the real\\n        world can be modeled with an array of points in 3D space, a point cloud if you will.\\n\\n        The mathematics of pinhole projection is relatively simple. Visualize for every point in the scene, a line connecting that point to the\\n        nodal point. The projected point is exactly where the line intersects the image plane. Geometrically this can be solved with similar triangles.\\n        Instead of imagining it, just play with it down below.\\n    "]],"parameters":[]}]]],[2,"\\n    "],[8,"prose-figure",[],[["@figureId","@figureCaption","@componentName","@props"],["7","Play with the object\'s position and notice where it gets projected on the image plane","figures/camera-projection",[30,[36,1],null,[["enableObjectControls"],[true]]]]],null],[2,"\\n    "],[8,"prose-markdown",[],[[],[]],[["default"],[{"statements":[[2,"\\n        ## What About Color?\\n\\n        We\'re one stop closer to being able to render a photorealistic scene. We know how points get projected but we must acertain what values each point gets.\\n        We\'ll discuss that in the next chapter.\\n    "]],"parameters":[]}]]],[2,"\\n"],[13]],"hasEval":false,"upvars":["root-url","hash"]}',moduleName:"fundamentals/pods/docs/photography/template.hbs"})
e.default=t})),define("fundamentals/pods/docs/physics-of-light/template",["exports"],(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.HTMLBars.template({id:"KNHcGtfq",block:'{"symbols":[],"statements":[[10,"div"],[14,0,"relative px-4 sm:px-6 lg:px-8"],[12],[2,"\\n    "],[8,"heading",[],[["@title","@subtitle"],["The Physics of Light","The render equation explained"]],[["default"],[{"statements":[[2,"\\n        Lighting can drastically impact the quality of a render. Photorealistic lighting is complex and computationally intensive.\\n        While the general lighting equation is simple and elegant, solving those equations can\'t be done analytically. Realtime\\n        renderers uses solutions that approximate the result. The closer the approximation, the better the lighting quality but\\n        usually more is computationally expensive. We\'ll discuss how light behaves in the real world in this chapter.\\n    "]],"parameters":[]}]]],[2,"\\n    "],[8,"prose-markdown",[],[[],[]],[["default"],[{"statements":[[2,"\\n        ## Rendering Equation\\n        "],[8,"katex-block",[],[[],[]],[["default"],[{"statements":[[2,"\\n            L_o(\\\\bold{p}, \\\\omega_o)  = L_e(\\\\bold{p},\\\\omega_o) + \\\\int f_r(\\\\bold{p},\\\\omega_o,\\\\omega_i) L_i(\\\\bold{p},\\\\omega_i) \\\\cos\\\\omega_i \\\\space d\\\\omega_i\\n        "]],"parameters":[]}]]],[2,"\\n\\n        Not much can be gleamed from that expression with no background in physics. This is often how I\'m introduced to the subject\\n        of rendering. Hopefully, a visual explanation is more helpful. To illustrate this, let\'s setup a grid that will act as our\\n        computer monitor, a surface, and a light source.\\n    "]],"parameters":[]}]]],[2,"\\n    "],[8,"prose-figure",[],[["@figureId","@figureCaption","@imageUrl"],["1","The render equation is often like this. The viewer represented as a the view vector. The surface is a plane and a half-sphere represents all incoming light rays from all possible directions.",[30,[36,0],["figures/light_equation-1da88607bb2c54810a204f78c71c57c2.png"],null]]],null],[2,"\\n    "],[8,"prose-markdown",[],[[],[]],[["default"],[{"statements":[[2,"\\n        We\'re only concerned with the intensity of the light reaching the grid, which is commonly represented as an RGB value.\\n        Each cell on this grid is a pixel. Each pixel receives light either directly from a light source, or indirectly from\\n        other surfaces. When it\'s direct, the direction is a stright shot to the source which can can be emitted from the surface\\n        or the light source itself. This is described by the\\n        "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"L_e"]],"parameters":[]}]]],[2," part of the formula.\\n        "],[8,"katex-block",[],[[],[]],[["default"],[{"statements":[[2,"\\n            L_e(\\\\bold{p},\\\\omega_o)\\n        "]],"parameters":[]}]]],[2,"\\n\\n        The other half of the equation, "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\int f_r(\\\\bold{p},\\\\omega_o,\\\\omega_i) (L_i(\\\\bold{p},\\\\omega_i) \\\\cos\\\\omega_i \\\\space d\\\\omega_i \\\\)"]],"parameters":[]}]]],[2,"\\n        is commonly referred to as the reflectance and is described as the light intensity reflected or scattered from a surface. The value of the light exiting a surface, is the acculmination of light\\n        from all directions reaching the surface. If there was no light in the scene, or a light source was being occluded,\\n        then this value would be zero for that particular point on the surface.\\n\\n        In a simple scene with only 1 light source and 1 surface, this is easy to solve for. As there would be no other surfaces\\n        that could reflect the same light source, the only direction to consider would be directly from the light source. Light\\n        that hits a surface at an angle reflects off the surface at the same angle about the normal. A normal is the direction\\n        exactly 90 degrees, or perpendicular to the surface.\\n\\n    "]],"parameters":[]}]]],[2,"\\n    "],[8,"prose-figure",[],[["@figureId","@figureCaption","@imageUrl","@imageBgColor"],["2","You can model each photon as a billiard ball. When it hits the surface, it bounces off at the same angle it entered.",[30,[36,0],["figures/reflectance-d3a93814b28bf9a65b58d49c63d8beaf.png"],null],"bg-white"]],null],[2,"\\n    "],[8,"prose-markdown",[],[[],[]],[["default"],[{"statements":[[2,"\\n        ## Light Scatters\\n\\n        Light that is reflected from a surface, might not reach the viewer. In our case, the camera would need to be placed\\n        parallel to this reflected ray. Not all surfaces are truly reflective like a mirror but we can still see them. Light that\\n        is not reflected is refracted. When light hits a surface, it gets split into a reflection part and a refraction part.\\n        The refracted part enters the surface where it is absorbed and scattered internally. Some of this light exits the surface\\n        and at random angles which gives materials their characteristic colors. The function "],[11,"span"],[24,0,"text-white"],[4,[38,1],null,null],[12],[2,"\\\\( f_r \\\\)"],[13],[2,"\\n        describes this reflection/refaction behavior and it is dependent on the angle of the light as well as the angle to the viewer.\\n        Metal has a behavior that absorbs all light that is not reflected. Plastics can be a bit more complicated but each material\\n        can be assigned different behaviors based on this function, which is the **BRDF** (bidirectional reflective distribution function).\\n\\n        The output of this function is a fractional value which is multiplied by the intensity of the incident (incoming) light.\\n        This intensitity is further reduced depending on the angle of the light to the surface. If the light was directly above\\n        the surface, it would get the maximum intensity. If instead it was parallel to the surface it would get no intensity.\\n        This relationship can be modeled with the cosine trigonometric function where the value is 0 when the light is 90 degrees\\n        from the surface normal and 1 when it is parallel.\\n\\n        Together this forms this part of the equation:\\n        "],[8,"katex-block",[],[[],[]],[["default"],[{"statements":[[2,"\\n            f_r(\\\\bold{p},\\\\omega_o,\\\\omega_i) L_i(\\\\bold{p},\\\\omega_i) \\\\cos\\\\theta\\n        "]],"parameters":[]}]]],[2,"\\n\\n        ## It\'s Not Really That Easy\\n\\n        In reality, light gets reflected more than once. A single ray of light would need to be absorbed completely before\\n        its contribution can be eliminated in the equation. It can also come in any direction, except for the bottom half\\n        of the surface that is opposite the direction of light. There is no analytical solution so we\'d need to either sample\\n        randomly or integrate over this hemisphere in descrete steps. Because of the recursive nature of reflectance, we\'d\\n        need to do this multiple times for every surface that is within this half-sphere of influence.\\n\\n        ## What About Shadows?\\n\\n        Shadows occur intrinsicly due to absense of light. The light would need to be absorbed completely before reaching the\\n        surface.  It\'s too costly for a realtime system. Systems\\n        that use this equation fully are offline rendering ones. **Ray tracing** is a rendering technique that uses that approach.\\n        You can produce soft shadows, simulate the effects of light through glass and other transparent substances like water. Rendering\\n        a single frame can take hours, or even days, depending on the complexity.\\n\\n        ## Conclusion\\n\\n        That\'s where we\'ll leave it for now. Realtime techniques are the focus here but I felt this introduction was necessary to\\n        show you what higher quality renderers do to achieve really realistic results. While the realtime techniques are cheaper,\\n        modern tech like nVidia RTX cards offer built-in hardware with AI-assisted algorithms that offer realtime ray-tracing.\\n        In addition, physically-based shading models, which offer realtime realistic shading of materials, are in heavy use in\\n        the industry today.\\n    "]],"parameters":[]}]]],[2,"\\n"],[13]],"hasEval":false,"upvars":["root-url","katex"]}',moduleName:"fundamentals/pods/docs/physics-of-light/template.hbs"})
e.default=t})),define("fundamentals/pods/docs/scene-graphs/template",["exports"],(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.HTMLBars.template({id:"90lVvsV9",block:'{"symbols":[],"statements":[[10,"div"],[14,0,"relative px-4 sm:px-6 lg:px-8"],[12],[2,"\\n    "],[8,"heading",[],[["@title","@subtitle"],["Scene Graphs","Modeling everything with trees"]],[["default"],[{"statements":[[2,"\\n        Scene complexity can be managed with a simple tree structure. Relationships between objects and their positions\\n        are hierarchical in nature. Scene Graphs represent this structure but the exact form might differ in their use.\\n        The concept is simple but implementations vary. In this chapter, I\'ll dive into a bare-bones scene\\n        graph implementation and maybe clear some confusion along the way.\\n    "]],"parameters":[]}]]],[2,"\\n    "],[8,"prose-markdown",[],[[],[]],[["default"],[{"statements":[[2,"\\n        ## Chaining Transforms With Parenting\\n\\n        Objects in the real world can be expressed with absolute positions or relative positions. Most often though, we\'re\\n        measuring things relatively. Renovating a kitchen, for instance, require that we choose a reference point within\\n        the home. It would be silly to express a refrigerator location in longitude/latitude coordinates. At least the\\n        contractor would think you\'re silly.\\n\\n        It\'s also easier to group objects that belong together. A car is comprised of an engine and wheels so grouping the\\n        car with the internal components is only natural. This relationship can be expressed with a tree.\\n\\n    "]],"parameters":[]}]]],[2,"\\n    "],[8,"prose-figure",[],[["@figureId","@figureCaption","@imageUrl"],["1","Simple scene hierarchy",[30,[36,0],["figures/basic-scene-graph-608ba15a5f20128868a3142e53c48c15.png"],null]]],null],[2,"\\n    "],[8,"prose-markdown",[],[[],[]],[["default"],[{"statements":[[2,"\\n        When a car moves, the internal components go with it, otherwise it would be weird for a car to move and leave it\'s engine\\n        behind. So it shouldn\'t surprise you that transforms can grouped in this way as well. When a car moves 5 units forward,\\n        its engine should be moving the same amount. This is what happens when you chain multiple transforms together.\\n\\n        Let "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\bold{C}"]],"parameters":[]}]]],[2," be the car\'s transform (location and origin in world space), and "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\bold{E}"]],"parameters":[]}]]],[2," be the engine\'s transform (relative the cars\\n        local space), and "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\boldsymbol{p}"]],"parameters":[]}]]],[2," equal a point on the engine (in engine local space). This can be expressed with\\n        "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\boldsymbol{p}\' = \\\\bold{C} \\\\cdot \\\\bold{E} \\\\cdot \\\\boldsymbol{p}"]],"parameters":[]}]]],[2,".\\n\\n        "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\boldsymbol{p}\'"]],"parameters":[]}]]],[2," is the transformed point after being multiplied by\\n        "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\bold{C} \\\\cdot \\\\bold{E}"]],"parameters":[]}]]],[2,".\\n\\n        This chaining can also be expressed as a tree. In fact, it\'s often the same tree used to logically group them together.\\n\\n    "]],"parameters":[]}]]],[2,"\\n    "],[8,"prose-figure",[],[["@figureId","@figureCaption","@imageUrl"],["2","Transform hierarchy",[30,[36,0],["figures/transform-hierarchy-901fcd8a3b8cbce7a999d12e805a3301.png"],null]]],null],[2,"\\n    "],[8,"prose-markdown",[],[[],[]],[["default"],[{"statements":[[2,"\\n        In order to get the world position of the engine, we traverse the tree backwards from **engine** to **car**. Multiplying by the **world\'s** transform\\n        isn\'t entirely necessary as **world** is the root and we were looking to find the engine\'s **position** and **orientation**\\n        relative to the **world space**. **World** can usually carry an identity matrix so you can multiply away without affecting the result.\\n\\n        Going from **local** to **world** is a common operation but going from **world** to **local** can also be useful. Given "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\boldsymbol{p}\'"]],"parameters":[]}]]],[2,", it\'s\\n        possible to get "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\boldsymbol{p}"]],"parameters":[]}]]],[2," with "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\bold{E}^{-1} \\\\cdot \\\\bold{C}^{-1} \\\\cdot \\\\boldsymbol{p}\'"]],"parameters":[]}]]],[2,". Math libraries usually allow you to compute the inverse matrix.\\n        In **ThreeJS**, each object also has a world matrix that is already computed so you don\'t have to traverse this tree.\\n    "]],"parameters":[]}]]],[2,"\\n    "],[8,"prose-figure",[],[["@figureId","@figureCaption","@imageUrl"],["3","Scene graph embedding transforms",[30,[36,0],["figures/scene-graph-w-transforms-f5cf163f30da30b99385c88d529eadc7.png"],null]]],null],[2,"\\n    "],[8,"prose-markdown",[],[[],[]],[["default"],[{"statements":[[2,"\\n        Finding "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\boldsymbol{p}\'"]],"parameters":[]}]]],[2," from "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\boldsymbol{p}"]],"parameters":[]}]]],[2," is as easy as\\n        "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"engine.worldMatrix \\\\cdot \\\\boldsymbol{p}"]],"parameters":[]}]]],[2," and finding "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\boldsymbol{p}"]],"parameters":[]}]]],[2," from "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\boldsymbol{p}\'"]],"parameters":[]}]]],[2,"\\n        is "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"engine.worldMatrixInverse \\\\cdot \\\\boldsymbol{p}\'"]],"parameters":[]}]]],[2,".\\n    "]],"parameters":[]}]]],[2,"\\n    "],[8,"prose-figure",[],[["@figureId","@figureCaption","@imageUrl","@vertical"],["4","Scene graph from complex car model",[30,[36,0],["figures/car-scene-graph-f1ae83eaf361807e02d104679bb75509.png"],null],true]],null],[2,"\\n    "],[8,"prose-markdown",[],[[],[]],[["default"],[{"statements":[[2,"\\n        ## Non-Renderable Objects\\n\\n        This logical chaining of object relationships and transforms is what makes up a scene graph. A scene graph consist of\\n        nodes which represent renderable and non-renderable objects in the scene. Non-renderable nodes represent abstract objects.\\n        Lights and cameras, for example, aren\'t modeled as a renderable object but their transforms are useful for rendering the\\n        entire scene. Empty objects can also be valid nodes. These nodes can serve as parents to renderable objects to help\\n        in grouping them. There can be plenty of other non-renderable nodes that will be ignored by the renderer. Game engine\\n        scene graphs might contain these:\\n\\n        * **Volumes** - used in games to design areas that have specific requirements in game play like triggering events, capturing reflections, designating areas for special rendering instructions\\n        * **Navigation Mesh** - used in AI pathfinding for determining walkable surfaces\\n        * **Locators**, **Emitters** - points in space used for specific game play purposes like particles, sound, waypoints, points of interests, .etc\\n\\n        ## Scene Graphs vs Octrees vs BVH\\n\\n        An **octree** is a common data structure used to recursively divide space equally into 8 smaller spaces. A **BVH**,\\n        or **bounding volume heirarchy** is a similar space dividing structure but uses bounding volumes to group clusters of objects\\n        closer together. A **scene graph** is most commonly used to repesent all objects in a scene and their transform relationships. It\'s usually\\n        separate from accelerated data structures used in spatial partitioning to help with visibility determination.\\n\\n        In the literal sense, both **octrees** and **BVHs** are scene graphs. They are graphs of objects in your scene. This could have\\n        contributed to the confusion that **scene graphs** increases rendering performance by culling large groups of objects. However,\\n        when developers refer to **scene graphs**, they usually mean the simpler kind. Culling is not a requirement for **scene graphs**.\\n        Culling parts of a scene that aren\'t visible is called **frustum culling**. Depending on the size of the scene, checking\\n        visibility for each object can be slow, and that\'s where **octrees** and **BVHs** help. They don\'t replace **scene graphs**. They\\n        are used as separate data structures since they are optimized mainly for visibility determination, not logical\\n        organizations.\\n    "]],"parameters":[]}]]],[2,"\\n    "],[8,"prose-figure",[],[["@figureId","@figureCaption","@imageUrl"],["5","Visualization of an octree. The scene is divided into 8 equal parts and is done recursively.",[30,[36,0],["figures/octree.jpeg"],null]]],null],[2,"\\n    "],[8,"prose-figure",[],[["@figureId","@figureCaption","@imageUrl","@vertical"],["6","Visualization of a BVH tree. The scene is divided bounding volumes of variable size.",[30,[36,0],["figures/bvhtree-ae3a74c674127d390e7f668887c49734.png"],null],true]],null],[2,"\\n"],[13],[2,"\\n"]],"hasEval":false,"upvars":["root-url"]}',moduleName:"fundamentals/pods/docs/scene-graphs/template.hbs"})
e.default=t})),define("fundamentals/pods/docs/shader-beyond-the-basics/template",["exports"],(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.HTMLBars.template({id:"LugxsS9b",block:'{"symbols":[],"statements":[[10,"div"],[14,0,"relative px-4 sm:px-6 lg:px-8"],[12],[2,"\\n    "],[8,"heading",[],[["@title","@subtitle"],["Going Beyond the Basics","Creating Art with Mathematics"]],[["default"],[{"statements":[[2,"\\n        Learning to create art with math is a difficult skill to learn. It\'s not an additive process like\\n        paiting on a canvas. It\'s a much more analytical process where the focus is on the life of a single\\n        pixel and all possible values it might take.\\n    "]],"parameters":[]}]]],[2,"\\n    "],[8,"prose-markdown",[],[[],[]],[["default"],[{"statements":[[2,"\\n        ## Color\\n\\n        Colors in computers are represented as **RGB** triplets, 3 independent color channels who\'s values range from 0 to 1. This\\n        is how our eyes see. We have cones in our eyes that are sensitive to red, green, and blue and it\'s their combination\\n        that gives us all the different colors.\\n\\n        Working with colors as numbers can be unintuitive to how we visualize color, especially if your only experience\\n        with color is through color pigment. With practice, it\'ll become easier but here are some tips that can help you develop\\n        some intuition.\\n\\n        Remember these letters and in this particular order. They represents colors found on a rainbow: **R Y G B V**\\n\\n        Each shade of color can be represented with these **RGB** values, more or less.\\n\\n        **Red**: (1, 0, 0)"],[10,"br"],[12],[13],[2,"\\n        **Yellow**: (1, 1, 0)"],[10,"br"],[12],[13],[2,"\\n        **Green**: (0, 1, 0)"],[10,"br"],[12],[13],[2,"\\n        **Blue**: (0, 0, 1)"],[10,"br"],[12],[13],[2,"\\n        **Violet**: (1, 0, 1)"],[10,"br"],[12],[13],[2,"\\n\\n        The gamut of colors produced by the **RGB** color space can range from red to blue. Most people would choose to visualize\\n        this with the visible color spectrum.\\n    "]],"parameters":[]}]]],[2,"\\n    "],[8,"prose-figure",[],[["@figureId","@figureCaption","@componentName"],["1","Visible light spectrum","figures/beyond-basics/color-spectrum"]],null],[2,"\\n    "],[8,"prose-markdown",[],[[],[]],[["default"],[{"statements":[[2,"\\n        Starting with red, lets say you wanted to shift the color tint to the right of the spectrum. Start adding some green.\\n\\n        **orange = (1.0, 0.5, 0)**\\n\\n        Even further, you\'d get yellow. Lose the red and add blue and you\'d get cyan.\\n\\n        **cyan = (0, 1.0, 1.0)**\\n\\n        These colors are super bright. You can tone down the brightness by scaling it down. For example, if you want red but half\\n        as bright, you\'d multiply the color by 0.5.\\n\\n        **less red = (0.5, 0, 0)**\\n\\n        Let\'s try another color, orange.\\n\\n        **less orange = (0.5, 0.25, 0)**\\n\\n        Notice that scaling the components keep the component\\n        proportions the same. You can increase brightness by multiplying by a number larger than 1 or dividing by a percentage.\\n\\n        NOTE: *You cannot increase the brightness anymore higher then 1. Multiplying (1.0, 0.5, 0) by 2 will result in (2.0, 1, 0) which is not a valid range. Clamping the value back to 1 doesn\'t clamp the brightness. It\'ll give you a different color (1, 1, 0), which is yellow. We\'ll see later how to increase brightness without this shortcoming*.\\n    "]],"parameters":[]}]]],[2,"\\n    "],[8,"prose-figure",[],[["@figureId","@figureCaption","@componentName"],["2","Play around with the brightness parameter","figures/beyond-basics/color-brightness"]],null],[2,"\\n    "],[8,"prose-markdown",[],[[],[]],[["default"],[{"statements":[[2,"\\n        We can change the color tint and the brightness, the next thing we can adjust is the saturation, how vibrant or muddy the\\n        color is. Painters often add white to desaturate a color. The color becomes lighter, not brighter. It can make it look\\n        more grey or muddier.\\n\\n        Achieving this is not straightforward. The goal is to adjust the other components to achieve white, all channels being 1.\\n        For example, for the color red **(1, 0, 0)**, you\'d adjust the g and b channels in equal amounts. For yellow **(1, 1, 0)**, we\'d\\n        adjust the blue.\\n\\n        Let\'s formally introduce the **GLSL** vector types. **vec2**, **vec3**, **vec4**. We\'ve seen how to create a **vec** before, and there\'s\\n        not much to it. You can access the components with **x,y,z,w** or **rgba** or **stpq**. **vec.x** returns a single float, **vec.xy**\\n        returns a **vec2**. You can also return it in a different order. **vec2 someVec = otherVec.yx**. This is called swizzling.\\n    "]],"parameters":[]}]]],[2,"\\n    "],[8,"prose-figure",[],[["@figureId","@figureCaption","@componentName"],["3","Saturation displayed gradually. Try a different tint like yellow. Which channel would you need to change to affect saturation.","figures/beyond-basics/color-saturation"]],null],[2,"\\n    "],[8,"prose-markdown",[],[[],[]],[["default"],[{"statements":[[2,"\\n        ### HSB\\n\\n        We\'ve casually introduced the concept of hue, saturation, and brightness. This color space is just more intuitive\\n        and sometimes it\'s more helpful to work in **HSB**. It\'s definitely an option to work in **HSB** then convert to **RGB**. The formula\\n        is not intuitive to understand but you can see it working in the next example.\\n    "]],"parameters":[]}]]],[2,"\\n    "],[8,"prose-figure",[],[["@figureId","@figureCaption","@componentName"],["3","Mapping HSV color space onto a plane","figures/beyond-basics/color-hsb"]],null],[2,"\\n    "],[8,"prose-markdown",[],[[],[]],[["default"],[{"statements":[[2,"\\n        ### Blending\\n\\n        You can blend two colors given a factor. In **GLSL**, you can use the built-in function **mix** which interpolate between\\n        two values. The factor is a percentage value (0-1). If you\'ve ever used photoshop or other painting/composition\\n        software, blending is exactly like working with layers.\\n    "]],"parameters":[]}]]],[2,"\\n    "],[8,"prose-figure",[],[["@figureId","@figureCaption","@componentName"],["4","Mixing can be used to blend multiple colors together or stack them on top of each other like layers","figures/beyond-basics/mixing-colors"]],null],[2,"\\n    "],[8,"prose-markdown",[],[[],[]],[["default"],[{"statements":[[2,"\\n        ## Mathematical Modeling\\n\\n        Blending colors is one thing, creating art is another thing. You might not be surprised to find out that math has its\\n        place in art, just like any other field. The art of perspective drawing is deeply rooted in geometrical principles.\\n        Painting requires observational skills and intuition but good intuition is built from strong fundamentals. Creating\\n        art with code is no different. The language is different but art requires imagination and creativity.\\n\\n        Those graph functions you learned in high-school algebra will play an important part here. You know, the ones with\\n        "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"y = mx + b"]],"parameters":[]}]]],[2," or "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"y = log(x)"]],"parameters":[]}]]],[2,". We\'re going to see those being used here. If you have no idea what those are, then thats\\n        fine. This should be a gental introduction to this topic.\\n\\n        ### One-dimensional Functions\\n\\n        A math function is just an expression that can be reused. A function on one variable is 1-dimensional. You often\\n        hear this variable being called the independent variable and the output of the function being the dependent variable. That\\n        just means that the input variable can vary independently of any other variable while the output is dependent on\\n        the input variable.\\n\\n        Plotting the values these variables take is a common way to visualize the behavior of the function. Normally, **x**\\n        is used for the input, and **y** is used for the output. Running through the expression over multiple values of **x**\\n        will give you a plot on a **2D** plane.\\n\\n        Without graphing these values, it\'s hard to see how the **y** value changes over the change in **x**. If I gave you\\n        "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"f(x) = {5 \\\\over 3x} + 2"]],"parameters":[]}]]],[2," can you visualize how the shape of **y** is going to look. Does it get bigger? How fast does it ascend?\\n        When will this value approach 10? You can solve this analytically, or you can graph it. Graphing helps you see\\n        how the numbers move and how they relate. You can even make predictions from this.\\n    "]],"parameters":[]}]]],[2,"\\n    "],[8,"prose-figure",[],[["@figureId","@figureCaption","@imageUrl"],["5","Graphing allows us to see the problem space more clearly. From graphing this, you would know that this is a linear equation. It is a steep slope to the right and approach 10 around x~=5. Plugging in 10 for y and solving for x will give you 4.8 so we were around the ballpark.",[30,[36,0],["figures/graphing-functions-a831846e9f7b7ace3c82b2e289d5e442.png"],null]]],null],[2,"\\n    "],[8,"prose-markdown",[],[[],[]],[["default"],[{"statements":[[2,"\\n        Let\'s create another linear equation "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"y=x^2"]],"parameters":[]}]]],[2,". In all these examples, we\'re using the uv coordinates as inputs in\\n        our functions. We\'re using these coordinates because in most cases they are in a normalizd ranged between 0 and 1.\\n        In this example, I\'m mapping the **uv.x** to the **x** in the function "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"y=x^2"]],"parameters":[]}]]],[2,". The **y** value, the output, will be used as\\n        the color for all channels which will make it a grayscale image. The plot of that function creates a parabola. Can\\n        you guess what this image would look like. Uncomment the corresponding function in this example to see the answer.\\n    "]],"parameters":[]}]]],[2,"\\n    "],[8,"prose-figure",[],[["@figureId","@figureCaption","@imageUrl"],["6","A beautiful parabola",[30,[36,0],["figures/parabola-bada1b097576f59ad951c6491fa4c293.png"],null]]],null],[2,"\\n    "],[8,"prose-figure",[],[["@figureId","@figureCaption","@componentName"],["7","Basic math functions","figures/beyond-basics/basic-functions"]],null],[2,"\\n    "],[8,"prose-markdown",[],[[],[]],[["default"],[{"statements":[[2,"\\n        I hope your guess was correct. The mapping of values from those one-dimensional math functions should provide some\\n        insight into what they\'re doing. If it isn\'t obvious yet, just know that the **y** value gets mapped to brightness when\\n        used as a grayscale. Since the value of **y** wasn\'t held constant, the brightness wasn\'t held constant. For the "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"x^2"]],"parameters":[]}]]],[2,",\\n        transition was exponential.\\n\\n        ### Smoothstep/Step\\n\\n        Crafting polynomials isn\'t the only way to create gradients. You can use **smoothstep** to smoothly transition between\\n        two values. If you looked at the blending example using circles, **smoothstep** was used to create the edge. For a\\n        harder edge, you can use **step**.\\n    "]],"parameters":[]}]]],[2,"\\n    "],[8,"prose-figure",[],[["@figureId","@figureCaption","@componentName"],["8","Step functions","figures/beyond-basics/step-functions"]],null],[2,"\\n    "],[8,"prose-markdown",[],[[],[]],[["default"],[{"statements":[[2,"\\n        ### Trigonometric functions\\n\\n        Another useful function is **sin** and **cos**. They\'re cyclic functions that smoothly transitions between -1 and 1. Use\\n        them for things that require repetition, or are cicular in nature.\\n    "]],"parameters":[]}]]],[2,"\\n    "],[8,"prose-figure",[],[["@figureId","@figureCaption","@componentName"],["8","Trigonmetric functions","figures/beyond-basics/trig-functions"]],null],[2,"\\n    "],[8,"prose-markdown",[],[[],[]],[["default"],[{"statements":[[2,"\\n        We can even animate if we have a uniform that changes over time.\\n    "]],"parameters":[]}]]],[2,"\\n    "],[8,"prose-figure",[],[["@figureId","@figureCaption","@componentName"],["8","Animation","figures/beyond-basics/animated-functions"]],null],[2,"\\n    "],[8,"prose-markdown",[],[[],[]],[["default"],[{"statements":[[2,"\\n        ## Further Reading\\n\\n        If this little tutorial interests you, there are several resources online you can use to help you master this skill.\\n\\n        * [Book of Shader](http://thebookofshaders.com)\\n        * [Ronja Tutorials](http://ronja-tutorials.com)\\n        * [ShaderToy](http://shadertoy.com)\\n    "]],"parameters":[]}]]],[2,"\\n"],[13]],"hasEval":false,"upvars":["root-url"]}',moduleName:"fundamentals/pods/docs/shader-beyond-the-basics/template.hbs"})
e.default=t})),define("fundamentals/pods/docs/shader-getting-started/template",["exports"],(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.HTMLBars.template({id:"Lw5p/4xe",block:'{"symbols":[],"statements":[[10,"div"],[14,0,"relative px-4 sm:px-6 lg:px-8"],[12],[2,"\\n    "],[8,"heading",[],[["@title","@subtitle"],["Getting Started","Hello World 2.0"]],[["default"],[{"statements":[[2,"\\n        Let\'s gain some practical experience writing shaders by rendering a simple 3D object, our hello world equivalent.\\n        We\'ll be using THREE.js and GLSL in this tutorial so you can interact with the embedded editor.\\n    "]],"parameters":[]}]]],[2,"\\n    "],[8,"prose-markdown",[],[[],[]],[["default"],[{"statements":[[2,"\\n        Hopefully the brief introduction into shader theory from the last chapter provided some clarity of on what steps you need to take to get a basic\\n        scene rendered. We haven\'t been focused too much on syntax up to this point for a reason. I wanted you to see, at a high-level\\n        how things would fit together.\\n\\n        ## Supplying Mesh Data\\n\\n        Let\'s introduce a new mesh and add it to the scene. Specifying the mesh vertices, normals, uvs can be a time consuming process. When it\'s not\\n        done procedurally, it\'s modeled in a separate program. Luckily for us, **THREE.js** has some built-in procedural geometry to choose from. Since\\n        this whole series is about shaders, I\'ll avoid manually defining this mesh data so we can focus on mastering shader programming.\\n\\n        The online editor has already been setup for **THREE.js**. If you\'d like to follow along from scratch, I recommend reading the *Getting Started*\\n        page at [THREE](http://threejs.org/). Otherwise, open the "],[6,[37,0],null,[["route"],["playground"]],[["default"],[{"statements":[[2,"Playground"]],"parameters":[]}]]],[2," and follow along.\\n\\n        In **THREE.js**, a mesh can be created by using **THREE.Mesh**. Vertex information is attached to this mesh with **THREE.BufferGeometry**. Shaders are\\n        encapsulated in **THREE.js** as a material. This is a common concept used throughout the graphics industry. Materials are basically shaders and\\n        the terminology are often interchanged.\\n\\n        Let\'s add a sphere mesh to our scene.\\n\\n        ```javascript\\n        const sphere = new THREE.Mesh(\\n            new THREE.SphereBufferGeometry(1, 32, 32), // creates a sphere with radius 1 with 32 segments horizontally and vertically\\n            new THREE.ShaderMaterial({\\n                vertexShader: vertexShaderSource, // vertexShaderSource is the content of the vertex shader editor\\n                fragmentShader: fragmentShaderSource, // fragmentShaderSource is the content of the fragment shader editor\\n            })\\n        );\\n\\n        scene.add(sphere);\\n        ```\\n\\n        In **THREE.js**, there\'s a slew of built-in materials ranging from really basic ones to more advanced physically-based ones. We\'ll be\\n        using **THREE.ShaderMaterial** because we\'re defining our own. We\'ll be using it instead of **THREE.RawShaderMaterial** because\\n        it provides some basic uniforms that will be useful to us.\\n\\n        ## Transform into Clip Space\\n\\n        Now we have vertices. Let\'s lean on **THREE.js** here and rely on it\'s rendering loop. We just need to know that at some point in time,\\n        it will compile the shaders, pass the vertex data, and issue draw calls.\\n\\n        Let\'s define the vertex shader.\\n\\n        ```glsl\\n        // uniform mat4 projectionMatrix; // provided by ShaderMaterial\\n        // uniform mat4 modelViewMatrix; // provided by ShaderMaterial\\n        // attribute vec3 position; // provided by SphereBufferGeometry\\n\\n        void main()\\n        {\\n            gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\\n        }\\n        ```\\n\\n        Let\'s summarize what\'s happening. The goal of the vertex shader is to provide a position in clip space for every vertex. Each shader\\n        invocation is given one vertex to process so it only needs to output one vertex. **gl_Position** is a global variable reserved as the\\n        output of this shader. It\'s a **vec4** because it requires the **w** component which is used for perspective division but that step isn\'t\\n        performed in this stage. Nothing is stopping you from doing it yourself in this shader but **w** needs to be set back to **1.0** so it\'s\\n        not performed again.\\n\\n        The transformation being performed here is pretty vanilla. **position** is converted into a **vec4** because you need a **vec4** in order\\n        to multiply against a "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"4 \\\\times 4"]],"parameters":[]}]]],[2," matrix. **modelViewMatrix** and **projectionMatrix** are "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"4 \\\\times 4"]],"parameters":[]}]]],[2," matrices that are passed in as **uniforms**. Together,\\n        this transformation first transforms the position to view space, followed by a projection.\\n\\n        **modelViewMatrix** is the **worldMatrix** concatenated with the camera\'s view space transform. If you can recall, this is calculated as\\n\\n        ```javascript\\n        camera.matrixWorldInverse * object.matrixWorld\\n        ```\\n\\n        The final multiplication with the projection reshapes the view space into clip space.\\n\\n        ## Color All The Pixels\\n\\n        How do we get color information over to the fragment shader. There are multiple methods. The one you choose will depend on what style\\n        you\'re looking for.\\n\\n        * You can hardcode the color value so that every pixel gets the same color\\n        * You can pass a color in as a **uniform**\\n        * You can pass color as a **vertex attribute**\\n        * You can generate a color per-vertex or per-pixel\\n        * You can sample the color from a texture\\n\\n        We\'ll go over each one of these methods but it\'s important to note that there are generally only 2 ways colors will get shaded. It\'s\\n        either per-vertex or per-pixel shading. Colors defined at the vertex shader output will get interpolated across all pixels the primitive\\n        covers. Calculations done at the vertex-level are cheaper but can give poor results if data is not linear.\\n\\n        Let\'s explore the per-vertex approach and we\'ll follow this up with the per-pixel approach.\\n\\n        ### Hardcoding the color value\\n\\n        ```glsl\\n        void main() {\\n            gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0); // color is a vec4 because of alpha\\n        }\\n        ```\\n\\n        This is how it should look like.\\n    "]],"parameters":[]}]]],[2,"\\n    "],[8,"prose-figure",[],[["@componentName","@figureId","@figureCaption"],["figures/getting-started/hardcoded-color","1","Hardcoding color in the fragment shader"]],null],[2,"\\n    "],[8,"prose-markdown",[],[[],[]],[["default"],[{"statements":[[2,"\\n        Simple as that. We\'ve colored our sphere red. An alpha is 1.0 appropriate for opaque objects. They don\'t come into play until we learn\\n        how to deal with transparent objects.\\n\\n        ### Pass in the color value as a uniform\\n\\n        To make this color configurable, make it a **uniform**. Modify your fragment shader to take a **uniform** input.\\n\\n        ```glsl\\n        uniform vec3 color;\\n\\n        void main() {\\n            gl_FragColor = vec4(color, 1.0);\\n        }\\n        ```\\n\\n        This should output a black sphere. The **uniform** isn\'t bound yet so we have to do that in our scene code. Modify that to add this\\n        new **uniform**.\\n\\n        ```javascript\\n        const sphere = new THREE.Mesh(\\n            new THREE.SphereBufferGeometry(1, 32, 32), // creates a sphere with radius 1 with 32 segments horizontally and vertically\\n            new THREE.ShaderMaterial({\\n                /// new code block ///\\n                uniforms: {\\n                    color: {\\n                        value: new THREE.Color(0xffff00),\\n                    },\\n                },\\n                //////////////////////\\n                vertexShader: vertexShaderSource, // vertexShaderSource is the content of the vertex shader editor\\n                fragmentShader: fragmentShaderSource, // fragmentShaderSource is the content of the fragment shader editor\\n            })\\n        );\\n\\n        scene.add(sphere);\\n        ```\\n    "]],"parameters":[]}]]],[2,"\\n    "],[8,"prose-figure",[],[["@componentName","@figureId","@figureCaption"],["figures/getting-started/uniform-color","2","Passing the color as a uniform"]],null],[2,"\\n    "],[8,"prose-markdown",[],[[],[]],[["default"],[{"statements":[[2,"\\n        ### Pass in the color value as an attribute\\n\\n        Right now, the sphere is looking pretty boring. It\'s just a single color. For the sake of experimentation, let\'s get funky\\n        and randomize the color of the sphere. We can generate this color and assign it to each individual vertex or face or even\\n        pixels. For this exercise, we\'ll focus on per vertex colors. But in case you\'re curious, coloring per face can be done by\\n        giving the same colors to each vertex associated with a face.\\n\\n        In theory, all we would have to do to assign a color value to each vertex is to attach color information to a **vertex attribute**.\\n        Unlike passing **uniforms**, passing **attributes** require we update the **BufferGeometry**. Since **vertex attributes** are per vertex\\n        information, we\'d need to assign a unique color per vertex. Fortunately for us, **BufferGeometry** makes it easy to update these attributes\\n        with **setAttribute**.\\n\\n        Let\'s modify the code again.\\n\\n        ```javascript\\n        const sphereGeometry = new THREE.SphereBufferGeometry(1, 32, 32);\\n        const colors = [];\\n\\n        for (let i = 0; i < sphereGeometry.getAttribute(\'position\').count; ++i) {\\n            const color = [Math.random(255), Math.random(255), Math.random(255)];\\n            colors.push(color[0], color[1], color[2]);\\n        }\\n\\n        sphereGeometry.setAttribute(\'color\', new THREE.Float32Attribute(colors, 3));\\n\\n\\n        const sphere = new THREE.Mesh(\\n            sphereGeometry,\\n            new THREE.ShaderMaterial({\\n                vertexColors: true, // enables vertex coloring so vColor is available to our shader\\n                vertexShader: vertexShaderSource, // vertexShaderSource is the content of the vertex shader editor\\n                fragmentShader: fragmentShaderSource, // fragmentShaderSource is the content of the fragment shader editor\\n            })\\n        );\\n\\n        scene.add(sphere);\\n        ```\\n\\n        Now we have to pipe this per-vertex color out to the fragment shader. We do that by creating a **varying** variable.\\n\\n        vertex shader:\\n\\n        ```glsl\\n        varying vec3 outColor;\\n\\n        void main()\\n        {\\n            gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\\n            outColor = color;\\n        }\\n        ```\\n\\n        fragment shader:\\n\\n        ```glsl\\n        varying vec3 outColor;\\n\\n        void main()\\n        {\\n            gl_FragColor = vec4(outColor, 1.0);\\n        }\\n        ```\\n\\n        And here we have a sphere with smoothly-shaded randomized colors. That seemed like a lot of work. Why would anyone\\n        ever want to do that. Setting up vertex in **THREE.js** is actually fairly straightforward but I understand if\\n        this might seem a little over the top for this use case of generating random colors. You probably already thought\\n        to yourself that this can easily be generated in shaders and you\'d be right.\\n\\n        The truth is, vertex coloring has fallen out of favor long ago, at least as a rendering\\n        technique. It still has usage for creating id maps which are then baked and used in other material processes.\\n        Of course, if you\'re going for that retro look, then this is a performance friendly way to achieve that. Nowadays,\\n        color is provided by textures. More on that later.\\n    "]],"parameters":[]}]]],[2,"\\n    "],[8,"prose-figure",[],[["@componentName","@figureId","@figureCaption"],["figures/getting-started/vertex-colors","3","Passing the color as an attribute"]],null],[2,"\\n    "],[8,"prose-markdown",[],[[],[]],[["default"],[{"statements":[[2,"\\n        NOTE: *There seems to be a problem with the seams of this sphere geometry. While normally with just vertex coloring\\n        you\'re not suppose to get seems as the colors are smoothly blended between neigbhoring vertices. This might be\\n        an issue with the mesh as edges that don\'t share vertices won\'t blend*.\\n\\n        ### Generating colors procedurally in the shader\\n\\n        Let\'s do the same thing but in our vertex shader. Revert your changes to the scene by removing the color generator,\\n        the **setAttribute**, and **vertexColor** flag.\\n\\n        Since we\'re in shader land, there is no built-in random number generator. We\'ll do something else to generate those colors.\\n\\n        vertex shader:\\n        ```glsl\\n        varying vec3 outColor;\\n\\n        void main()\\n        {\\n            gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\\n            outColor=vec3(uv.s, uv.t, 0.0); // uv is another vertex attribute which automatically gets declared by THREE.js and setup with SphereBufferGeometry\\n        }\\n        ```\\n\\n        If you can recall, **uv**s are coordinates that are assigned to each vertex to help determine how a texture can be mapped onto its surface.\\n        In the code above, the red channel increases as **uv.s** increases which means the color of the pixels gets more red when **uv.s** approach 1. At the same time,\\n        **uv.t** increases from bottom to top, increasing the value of the green channel.\\n    "]],"parameters":[]}]]],[2,"\\n    "],[8,"prose-figure",[],[["@componentName","@figureId","@figureCaption"],["figures/getting-started/vertex-gen","4","Generating color in the vertex shader"]],null],[2,"\\n    "],[8,"prose-markdown",[],[[],[]],[["default"],[{"statements":[[2,"\\n        Let\'s do the same thing but in the fragment shader. Modify the vertex and fragment shader.\\n\\n        vertex shader:\\n        ```glsl\\n        varying vec2 vUV;\\n        void main()\\n        {\\n            gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\\n            vUV = uv;\\n        }\\n        ```\\n        fragment shader:\\n\\n        ```glsl\\n        varying vec2 vUV;\\n\\n        void main()\\n        {\\n            gl_FragColor = vec4(vUV.s, vUV.t, 0.0, 1.0);\\n        }\\n        ```\\n    "]],"parameters":[]}]]],[2,"\\n    "],[8,"prose-figure",[],[["@componentName","@figureId","@figureCaption"],["figures/getting-started/frag-gen","5","Generating color in the fragment shader"]],null],[2,"\\n    "],[8,"prose-markdown",[],[[],[]],[["default"],[{"statements":[[2,"\\n        We get the same effect here but we also had to pass the **vertex attribute** over to the fragment shader. So what is the purpose of doing this\\n        in the fragment shader? Well, not much for this use case at least. The UV data is linear in nature so the interpolation actually gives us\\n        the correct results. The value of doing things in the fragment shader becomes more apparent as we try to do things that will vary non-linearly.\\n\\n        Let\'s try a non-linear use case. We\'ll do both a per-vertex and per-pixel approach.\\n\\n        ### Per-vertex non-linear scenario\\n\\n        vertex shader:\\n\\n        ```glsl\\n        varying vec4 vColor;\\n\\n        void main() {\\n            gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\\n            vec3 vPos = (modelViewMatrix * vec4(position, 1.0)).xyz;\\n            vec3 vNormal = normalMatrix * normal;\\n\\n            vec3 lightPos = (viewMatrix * vec4(1.0, 1.0, 1.0, 1.0)).xyz;\\n            float attenuation = 1.0 / pow(length(lightPos - vPos), 2.0);\\n            vec3 lightDir = normalize(lightPos - vPos);\\n            vec3 lightDirView = (viewMatrix * normalize(vec4(lightDir, 0.0))).xyz;\\n\\n            vColor = vec4(1.0, 1.0, 0.0, 1.0) * max(dot(lightDirView, vNormal), 0.0);\\n        }\\n        ```\\n\\n        fragment shader:\\n\\n        ```glsl\\n        varying vec4 vColor;\\n\\n        void main() {\\n            gl_FragColor = vColor;\\n        }\\n        ```\\n    "]],"parameters":[]}]]],[2,"\\n    "],[8,"prose-figure",[],[["@componentName","@figureId","@figureCaption"],["figures/getting-started/per-vertex-lighting","6","Adding basic point lighting to the scene"]],null],[2,"\\n    "],[8,"prose-markdown",[],[[],[]],[["default"],[{"statements":[[2,"\\n        I introduced quite a lot of new concepts and functions here. I\'ll try to walk you through each one.\\n\\n        First, here\'s the theory. I\'m trying to calculate the effect a point light would have on the surface if it was positioned slightly above it.\\n        This involves knowing where this light is positioned in space. Recall from an earlier tutorial on the physics of light, we need to know\\n        the direction of the surface normal and the direction of the light (often expressed as a unit vector pointing towards the light source).\\n\\n        When the surface is directly facing this light source, it gets 100% of the intensity. When it\'s facing away or perpendicular to this, it\\n        gets 0%. Using the relationship between the surface normal and the light direction, this phenomenom can be modeled with a cosine function.\\n        This is where the **dot** function comes in. It calculates the "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\cos"]],"parameters":[]}]]],[2," of the **unit vectors**.\\n\\n        For point lights and spot lights, there\'s another matter we have to consider. The distance away from the light source. Light intensity attenuates\\n        over distances. It fades away in a non-linear way. This attenuation doubles for every unit distance traveled. Using "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"1 \\\\over d^2"]],"parameters":[]}]]],[2,", we can model\\n        this too.\\n\\n        Here\'s the pseudocode.\\n\\n        1. calculate position of vertex in view space.\\n            * multiply position vector by **viewMatrix**\\n        2. calculate normal direction in view space.\\n            * multiply normal vector by **viewMatrix**\\n        3. calculate light position and direction in view space\\n            * define light position in world space.\\n            * multiply light position by **viewMatrix**\\n            * subtract light position from vertex position which creates a directional vector from vertex to light position\\n            * normalize light direction\\n        4. calculate distance fall off\\n            * distance fall off is determined by "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"1 \\\\over d^2"]],"parameters":[]}]]],[2,"\\n            * take length of vector between light position and position vector and square it with pow\\n            * take 1 over the result\\n        5. using normal vector and light direction, calculate diffuse component of this light source and apply it to the objects color\\n            * use **dot(normal, lightDir)** to get **cos** value of -1 to 1\\n            * the diffuse cannot be negative, clamp it at 0 to 1.\\n            * multiply this result by the objects color\\n            * multiply by the distance fall off\\n\\n        NOTE: *the reason why we need to transform everything in view space is because the **normalMatrix** provided by **THREE.js** is derived from the **modelViewMatrix**. This normal matrix\\n        is the matrix used to transform the normals just as **modelViewMatrix** is used to transform positions*.\\n\\n        ## Per-pixel non-linear scenario\\n\\n        Let\'s do that again but perform the same instructions in the fragment shader. We\'ll shift some things around so color is generated\\n        at the pixel level. We need to pass around the vertex position and normal but this time we\'ll do the light calculations there.\\n        Make sure to open a new playground window and keep the other for comparison.\\n\\n        fragment shader:\\n\\n        ```glsl\\n        varying vec3 vPos;\\n        varying vec3 vNormal;\\n\\n        void main() {\\n            gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\\n            vPos = (modelViewMatrix * vec4(position, 1.0)).xyz;\\n            vNormal = normalMatrix * normal;\\n        }\\n        ```\\n\\n        fragment shader:\\n        ```glsl\\n        varying vec3 vPos;\\n        varying vec3 vNormal;\\n\\n        void main() {\\n            vec3 lightPos = (viewMatrix * vec4(1.0, 1.0, 1.0, 1.0)).xyz;\\n            float attenuation = 1.0 / pow(length(lightPos - vPos), 2.0);\\n            vec3 lightDir = normalize(lightPos - vPos);\\n            vec3 lightDirView = (viewMatrix * normalize(vec4(lightDir, 0.0))).xyz;\\n\\n            gl_FragColor = vec4(1.0, 1.0, 0.0, 1.0) * dot(lightDirView, vNormal) * attenuation;\\n        }\\n        ```\\n    "]],"parameters":[]}]]],[2,"\\n    "],[8,"prose-figure",[],[["@componentName","@figureId","@figureCaption"],["figures/getting-started/per-pixel-lighting","7","Adding basic point lighting to the scene (per-pixel)"]],null],[2,"\\n    "],[8,"prose-markdown",[],[[],[]],[["default"],[{"statements":[[2,"\\n        Do you notice a difference. No? Maybe? Try lowering the resolution of the mesh for both examples. 16 might be a good number. See the difference now?\\n        I think the difference was obvious at first but it is true that lowering the resolution amplies the differences. This spot light effect\\n        has more impact with the per-pixel version while per-vertex is duller.\\n\\n        The reason is because in the per-vertex case, color is produced per vertex then blended. If the light\'s intensity was linear, the differences\\n        would be hard to spot but the intensity over distance follows the inverse square law (not linear). The higher the resolution, the more densily\\n        packed the vertices are and the less distance they cover.\\n\\n        If the quality is so great when doing things per-pixel, why don\'t we do it all the time. Well surprise, it\'s because of performance. Doing math\\n        heavy calculations in the fragment shader is much more expensive then in the vertex shader. 1 shader invocation per pixel means performance is\\n        heavily dependent on display resolution. Like everything, there\'s a balance. One way developers have been able to squeeze out every little performance\\n        out of shaders is precomputing things and storing them in textures. Texture fetches do incur a cost but due to modern GPU architecture, it\'s often\\n        cheaper to do that then do math heavy operations. Let\'s talk about textures next.\\n\\n        ## Textures\\n\\n        In shaders, textures are **Samplers**, either (**sampler2D**, or **samplerCube**). Samplers are our gateway for accessing the texture in the shader. In **GLSL**,\\n        a texture lookup requires calling the built-in function **texture** and you pass in the sampler along with a valid texture coordinate. We need a **sampler**\\n        because, well, we\'re not exactly retrieving texels. We\'re retrieving samples. The texture coordinates you provide could map to one or many texels.\\n        It could possibly not address a single texel. You can think of this sampler as a texel generator. It tries to return a pixel color at the coordinates you\\n        requested, and more often then not, this color is generated by taking samples from neighboring texels around that coordinate.\\n\\n        At it\'s roots, it\'s basically performing linear interpolation. For simple one-dimensional linear interpolation, you can picture this operation as drawing\\n        a line between two points and the extrapolated point is taken from this line.\\n    "]],"parameters":[]}]]],[2,"\\n    "],[8,"prose-figure",[],[["@figureId","@figureCaption","@imageUrl"],["8","Using linear interpolation between 2 sample points from the original curve. It is analagous to using sampler2D(u, v) where u and v specifies the point at which we are interested in.",[30,[36,1],["figures/linear-interpolation-1-dc2d9a27527d00599fbc5a43addf7fec.png"],null]]],null],[2,"\\n    "],[8,"prose-markdown",[],[[],[]],[["default"],[{"statements":[[2,"\\n        The shape of the curve affects the accuracy of this interpolation method. If the shape was actually\\n        a line, then the extrapolated point is accurate. If the shape was an exponential curve, then it\'s far from the truth. For textures,\\n        this shape is a lot noisier and discontinous meaning not all values between **x0** and **x1** are there.\\n\\n        In the figure above, you can already see a discrepancy between the actual value vs the extrapolated value. Increasing the number of samples\\n        can actually help. The more samples you have, the closer the line models the curve.\\n    "]],"parameters":[]}]]],[2,"\\n    "],[8,"prose-figure",[],[["@figureId","@figureCaption","@imageUrl"],["9","Increasing the number of samples, we can see that a line between any two neighboring sample points closely matches the original curve.",[30,[36,1],["figures/linear-interpolation-2-e8058e0a1a2acfaff51cab77114710ef.png"],null]]],null],[2,"\\n    "],[8,"prose-markdown",[],[[],[]],[["default"],[{"statements":[[2,"\\n        Another way of thinking of linear interpolation is as a weighted average between 2 points. That\'s probably a more intuitive way of thinking of it and it\'s a closer\\n        representation of what happens with texture sampling. When sampling a texture, the coordinates **u** and **v**, specifies where in the texture to sample.\\n        Texture quality is highest when 1 texel = 1 pixel which just means the size of the texture in screen space matches the original size of the texture.\\n        This almost never occurs in **3D** as you can zoom in and out as well as look at it from any angle. Zooming requires that the texture be magnified or minified.\\n\\n        What happens when you zoom in really far and the pixel doesn\'t line up to a texel at all. That texel has to be constructed from scratch with a best guess method called\\n        filtering. The quality of this reconstruction will be based on the filtering method you choose and the resolution of this image. There\'s only so much you can do because\\n        we\'re actually trying to reconstruct something that doens\'t exist so we use methods like linear interpolation to extrapolate what it might be.\\n\\n        What happens when you zoom in? Well the same thing happens but this time it\'s a minification problem and you have many more samples to choose from.\\n        There are multiple types of filtering methods like **nearest-neighbor**, **linear**, **bilinear**, **anisotropic** with anisotropic being the highest quality. Unfortunately for **WebGL**,\\n        we\'re stuck with using **nearest** and **linear**.\\n\\n        These texture parameters are specified when creating and binding textures. **THREE.js** takes care of this for us when loading textures. When you pass a texture to your shader,\\n        it becomes a sampler.\\n\\n        ### MipMapping\\n\\n        MipMapping is another important topic worth mentioning. MipMapping is a process where multiple resolutions of a texture are created. Since these images are precomputed, they can\\n        use more expensive filtering methods. The resulting image can look more detailed and have less noise overall and it eases the burden on the **GPU**. In **WebGL** 1.0, you are limited\\n        to images that have resolutions that are *POT* (powers of two). Otherwise, you can\'t get the built-in mipmap support. THREE.js handles this under the hood and by default\\n        will generate mipmaps assuming of course the image is a *POT*.\\n    "]],"parameters":[]}]]],[2,"\\n    "],[8,"prose-figure",[],[["@figureId","@figureCaption","@imageUrl"],["10","7 levels of mipmaps with each level having double or half the resolution of the previous",[30,[36,1],["figures/mipmapping-029d812b0a48de17beeebec97801360d.gif"],null]]],null],[2,"\\n    "],[8,"prose-markdown",[],[[],[]],[["default"],[{"statements":[[2,"\\n        ### Texture Example\\n\\n        Enough theory, lets do some exercises. First things first, we need a texture. If you\'re using **playground**, you\'re limited to the ones on this site due to **CORS** (cross-origin resource sharing) policies.\\n        For this example, let\'s use this texture.\\n    "]],"parameters":[]}]]],[2,"\\n    "],[8,"prose-figure",[],[["@figureId","@figureCaption","@imageUrl","@vertical"],["11","This texture came from the megascans archive. They have dozens of free content but with an Unreal account, you can access all of them.",[30,[36,1],["textures/castle_wall-9f8741be56b9c1ad074c0479269223d1.jpg"],null],true]],null],[2,"\\n    "],[8,"prose-markdown",[],[[],[]],[["default"],[{"statements":[[2,"\\n        We need to load this texture and pass this along to our shaders. Textures are generally applied in the fragment shader so we\'ll also need to update it to receive our texture.\\n\\n        scene:\\n\\n        ```javascript\\n        const loader = new THREE.TextureLoader();\\n\\n        loader.load("],[1,[30,[36,1],["textures/castle_wall-9f8741be56b9c1ad074c0479269223d1.jpg"],null]],[2,", function (texture) {\\n            const sphere = new THREE.Mesh(\\n                new THREE.SphereBufferGeometry(1, 32, 32), // creates a sphere with radius 1 with 32 segments horizontally and vertically\\n                new THREE.ShaderMaterial({\\n                    /// new code block ///\\n                    uniforms: {\\n                        map: {\\n                            value: texture,\\n                        },\\n                    },\\n                    //////////////////////\\n                    vertexShader: vertexShaderSource, // vertexShaderSource is the content of the vertex shader editor\\n                    fragmentShader: fragmentShaderSource, // fragmentShaderSource is the content of the fragment shader editor\\n                })\\n            );\\n\\n            scene.add(sphere);\\n        });\\n        ```\\n\\n        In this example, the mesh isn\'t created until the texture is loaded. Once it\'s loaded, the texture can be applied directly to the **uniforms**\\n        where it was given the name **map** just to be consistent with other **THREE** materials. Since this is a **uniform**, it can be accessed by either\\n        vertex shader or fragment shader. No varyings for the texture is needed because the resource is constant across all shader invocation.\\n        We do need to have proper texture coordinates so let\'s create a simple vertex shader to pass that info along.\\n\\n        vertex:\\n        ```glsl\\n        varying vec2 vUv;\\n\\n        void main() {\\n            gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\\n            vUv = uv;\\n        }\\n        ```\\n\\n        Next up is the fragment shader. Texture lookup is simple. Use **texture** and pass in the sampler, and some texture coordinate ranging from 0-1 for both u and v.\\n\\n        ```glsl\\n        varying vec3 vPos;\\n        varying vec3 vNormal;\\n        varying vec2 vUv;\\n\\n        uniform sampler2D map;\\n\\n        void main() {\\n            gl_FragColor = texture(map, vUv);\\n        }\\n        ```\\n    "]],"parameters":[]}]]],[2,"\\n    "],[8,"prose-figure",[],[["@componentName","@figureId","@figureCaption"],["figures/getting-started/texture","12","Adding per-pixel colors with textures"]],null],[2,"\\n    "],[8,"prose-markdown",[],[[],[]],[["default"],[{"statements":[[2,"\\n        We\'re not only limited to storing color information in textures. Pretty much any data can be stored in textures. In more advance materials, **PBR** materials for example,\\n        there are separate textures for normals, roughness, metalness, occlusion, .etc. Even shadows can be stored in textures so that shadows don\'t have to be computed in real time.\\n\\n        ## What Else\\n\\n        I\'ve only scratched the surface with what you can do with shaders. As long as you stick to the requirement that all shaders are\\n        independent, there\'s no limit to what you can do. Continue to the next tutorial if you\'d like to learn how to do cool stuff\\n        with fragment shaders.\\n\\n    "]],"parameters":[]}]]],[2,"\\n"],[13]],"hasEval":false,"upvars":["link-to","root-url"]}',moduleName:"fundamentals/pods/docs/shader-getting-started/template.hbs"})
e.default=t})),define("fundamentals/pods/docs/shader-theory/template",["exports"],(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.HTMLBars.template({id:"3qIG7nRu",block:'{"symbols":[],"statements":[[10,"div"],[14,0,"relative px-4 sm:px-6 lg:px-8"],[12],[2,"\\n    "],[8,"heading",[],[["@title","@subtitle"],["Shaders","Shaders for the win!"]],[["default"],[{"statements":[[2,"\\n        All 3D graphics programming APIs allow you to take control of the GPU. APIs pay for that freedom and flexiblity by being a\\n        little bit cumbersome to use. While in the past, these APIs were somewhat abstract, the trend is gravitating towards more\\n        low level APIs so developers can harness the full power of the hardware. To do anything in 3D nowadays requires some knowledge\\n        on writing shaders. Unless you\'re working in an engine that has powerful material editing workflows,\\n        more than likely you\'ll encounter scenarios that require custom shaders. Even then, the more you know about shaders,\\n        the more complex materials you can create. Let\'s start learning the basics.\\n    "]],"parameters":[]}]]],[2,"\\n    "],[8,"prose-markdown",[],[[],[]],[["default"],[{"statements":[[2,"\\n        ## What Are Shaders\\n\\n        Shaders are programs that are run on the **GPU**. Depending on the **3D** graphics API, (**OpenGL**, **DirectX**, **Metal**, **Vulcan**), and what hardware,\\n        you probably have to provide one as no defaults are given. If you\'re using an engine or higher-level API, like **ThreeJS**, then\\n        this is done for you. But we\'re not here to discuss someone else\'s implementation.\\n\\n        Shaders are compiled by the **GPU**. While it\'s possible to precompile the shaders, you typically want to compile it dynamically\\n        either during loading, through updates to user settings and configurations, or god-forbid during gameplay. Due to the variability\\n        of **PC** hardware, running code compiled on one architecture is bad for many reasons. Driver updates might invalidate or even break\\n        your code. **GPUs** can be changed. Some applications are smart and will compile shaders only once but performance is not the\\n        concern of these tutorials.\\n\\n        Shaders are written in a **C-style** language optimized for vectorized architectures. They contain several built-in functions for\\n        math operations, like **normalize**, **reflect** for vector math; **sin**, **cos** for trig, and **mix** for linear interpolation, and\\n        many many more.\\n\\n        There are 2 dominant shader types, vertex and fragment. Actually there are geometry and tesselation shaders but I\'ll limit the\\n        discussion on vertex and fragment shaders for now.\\n\\n        All the examples here are written in **GLSL** using the **ThreeJS** framework because this is on the Web but what we will discuss here\\n        can be applicable to **OpenGL** and even other shader languages like **HLSL** (**DirectX**) because most **GPUs** are architectured the same way.\\n        I\'ll mention some terminology that might be more relevent to **OpenGL** but the concepts are almost identical in other APIs.\\n\\n        ## Lifecycle\\n\\n        Shaders are resources just like any other asset. They start out as text which needs to be read in. If the text is in a file, the\\n        application needs to take care of reading them from a file. Once read in, they need to be compiled. In **OpenGL**, shaders are attached\\n        to programs and only one program can be active at any point and time.\\n\\n        Shaders will be used during a drawing operation. Drawing operations are issued from the application, along with basic inputs the\\n        shader needs to operate on. From that point on, multiple shader invocations will be made by the **GPU**, outputing the results to the frame\\n        buffer. This cycle starts over again on the next draw call. If using double buffering, the results don\'t appear on screen until the\\n        buffer is swapped. Based on the discussion earlier on the graphics pipeline, the shader will typically follow this order.\\n\\n        1. Read shaders from a file\\n        2. Compile shaders into shader programs\\n        3. Loop through scene objects\\n\\n            * set object\'s perferred shader as active\\n            * bind any data the shader needs (vertices, indices, constants)\\n            * issue draw call\\n\\n        4. Flush commands (commands are sent to the **GPU**)\\n\\n            * vertex data is transferred to gpu memory\\n            * draw commands are issued which tell the **GPU** how to interpet the data\\n            * multiple vertex shaders are invoked for each vertex in the object and they all run to completion\\n            * multiple fragment shaders are invoked for each pixel in the viewport\\n\\n        5. swap back frame buffer with front buffer\\n        6. Start over again with 3\\n\\n        For performance reasons, you might not see this order followed to the tee in practice. **GPU** latency is quite slow so data transfers are\\n        typically avoided during the render loop. Setting up **GPU** buffers for vertex data shouldn\'t be done per frame but passing shader **uniforms** are normally\\n        done in the loop.\\n\\n        ## Inputs\\n\\n        Vertex shaders operate on vertices and fragment shaders operate on pixels. We learned that the rasterizer supplies the inputs to the\\n        fragment shader but where does the inputs for vertex shaders come from? They come from the application, in user code. Since **GPUs** are\\n        high-throughput low-latency devices, it\'s not very efficient to store the vertex data in main memory. Data would need to be\\n        transferred over to **GPU** memory for every draw call, for every frame.\\n\\n        Instead, buffers can be reserved in **GPU** memory and we can use this to dump whatever data we need, in whatever form we need it in.\\n        This really only should be done once, when the object\'s are first loaded. If we have multiple objects, we reserve more **GPU** memory\\n        and when we\'re ready to draw them, we simply tell the **GPU** which buffer is active.\\n\\n        There are 2 kinds of inputs for a vertex shader:\\n\\n        * **Attributes**\\n        * **Uniforms**\\n\\n\\n        ### Attributes\\n\\n        **Attributes** contain per vertex information. For example, **position**, **normal**, and texture **UVs** are all per vertex information. You can\\n        have color, if you want to support vertex coloring. This means that for each vertex, there exist one position vector, one normal\\n        vector, one uv coordinate vector, and one color vector.\\n\\n        **Attributes** aren\'t normally updated during the game loop, especially for static objects. For dynamic objects whose shape can change\\n        overtime, or if streaming vertex data that is normally too large to fit in **GPU** memory, you can update this buffer over time but\\n        it comes at a cost.\\n\\n        When reserving **GPU** memory, we need to let the GPU know how the data is laid out. Let\'s look at an example shader that needs position\\n        and color as inputs.\\n\\n        ```glsl\\n        #version 330 core\\n\\n        layout (location = 0) in vec3 aPos;\\n        layout (location = 1) in vec3 aColor;\\n\\n        out vec3 vColor;\\n\\n        void main()\\n        {\\n            gl_Position = vec(aPos, 1.0);\\n            vColor = aColor;\\n        }\\n        ```\\n\\n        This shader is expecting **aPos** to come from the first position of this buffer, and **aColor** second. **OpenGL** needs to know about the offset and stride\\n        to calculate where those attributes are. **aPos** will take 12 bytes because its a **vec3** (contains 3 **float**s). **aColor** is a similar\\n        data type so it takes 12 bytes. When you layout a single vertex in memory it will look like the diagram below.\\n\\n        "]],"parameters":[]}]]],[2,"\\n        "],[8,"prose-figure",[],[["@figureId","@figureCaption","@imageUrl","@vertical"],["1","This is an example of vertex attributes interleaved into a single vertex buffer. Binding a variable to each attributes just requires the offset into this buffer as well as the amount of bytes to get to the next vertex",[30,[36,0],["figures/vertex-layout-detailed-2af1922b337b78de88c6df312e9c4415.png"],null],true]],null],[2,"\\n        "],[8,"prose-markdown",[],[[],[]],[["default"],[{"statements":[[2,"\\n        The offset describes how many bytes from the beginning of the first vertex attribute.\\n\\n        NOTE: Older **OpenGL** versions pre v3 could not use the keyword **layout** in the vertex shader. The order was implied from the order of declaration.\\n        Keywords like **attribute**, **varying** were used instead of **in** and **out** to show they were inputs or outputs. **WebGL 1.0** is based on **OpenGL**\\n        **ES 2.0** spec so it cannot use **layout**.\\n\\n        ### Uniforms\\n\\n        The other form of input is called a **uniform**. A **uniform**, like the name implies, is constant over all vertices. They don\'t change from one shader\\n        invocation to the next, unlike **vertex attributes**. They are global and can be referenced within the vertex shader or fragment shader. They are often\\n        set per frame.\\n\\n        **Uniforms** are often used to apply textures. **Uniforms** can also be used to animate by passing in elapsed time as a parameter. They can also make shaders more configurable.\\n\\n        ## Outputs\\n\\n        Fragment shader inputs are a bit different from vertex shader inputs. For one, these shaders don\'t take in **attributes**. They can still take **uniforms**\\n        but the pixel inputs come from the rasterizer. The rasterizer will pass along the outputs of the vertex data. Since there are more\\n        pixels then vertices, in most cases, the vertex data is interpolated across all pixels. This means that every pixel will have per-pixel\\n        position data, and color data.\\n\\n        In **OpenGL** v3, use **out** to specify which variable becomes an input for the fragment shader. In previous versions, use **varying**. Vertex shaders should\\n        also output a position to the next stage in the graphics pipeline. You set the global variable **gl_Position** to do this. For fragment shaders, you should output\\n        to **gl_FragColor** or define our own **out** variable if using version 3 and above.\\n    "]],"parameters":[]}]]],[2,"\\n"],[13]],"hasEval":false,"upvars":["root-url"]}',moduleName:"fundamentals/pods/docs/shader-theory/template.hbs"})
e.default=t})),define("fundamentals/pods/docs/template",["exports"],(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.HTMLBars.template({id:"jsfskmis",block:'{"symbols":["nav","subnav"],"statements":[[10,"div"],[14,0,"h-screen flex flex-row"],[12],[2,"\\n    "],[10,"div"],[14,0,"flex flex-col w-72 overflow-y-auto"],[12],[2,"\\n        "],[10,"div"],[14,0,"flex flex-col flex-grow pt-5 pb-4 bg-gray-800"],[12],[2,"\\n            "],[10,"div"],[14,0,"flex px-4"],[12],[2,"\\n                "],[10,"div"],[14,0,"relative flex items-center space-x-4"],[12],[2,"\\n                    "],[10,"div"],[12],[2,"\\n                        "],[8,"svg-icon",[[24,0,"w-10 h-10 text-indigo-300"]],[["@name"],["camera"]],null],[2,"\\n                        "],[10,"div"],[14,0,"text-white font-semibold transform bg-red-600 rounded p-1 text-xs"],[12],[2,"BETA"],[13],[2,"\\n                    "],[13],[2,"\\n                    "],[10,"div"],[14,0,"text-white"],[12],[2,"\\n                        "],[10,"div"],[14,0,"text-m uppercase text-indigo-300"],[12],[2,"Fundamentals of 3D"],[13],[2,"\\n                        "],[10,"div"],[14,0,"text-xl font-semibold"],[12],[2,"Realtime Rendering"],[13],[2,"\\n                    "],[13],[2,"\\n                "],[13],[2,"\\n            "],[13],[2,"\\n            "],[10,"div"],[14,0,"mt-5 flex-grow flex flex-col"],[12],[2,"\\n                "],[10,"nav"],[14,0,"flex-1 px-2 space-y-1 bg-gray-800 text-gray-300"],[14,"aria-label","Sidebar"],[12],[2,"\\n"],[6,[37,5],[[30,[36,4],[[30,[36,4],[[32,0,["navigation"]]],null]],null]],null,[["default"],[{"statements":[[2,"                    "],[10,"div"],[14,0,"space-y-1"],[12],[2,"\\n"],[6,[37,1],[[32,1,["links"]]],null,[["default","else"],[{"statements":[[2,"                            "],[11,"button"],[24,0,"group w-full flex items-center pl-2 pr-1 py-2 text-sm font-medium rounded-md text-gray-300 hover:text-white hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-indigo-500"],[4,[38,7],["click",[30,[36,6],[[32,0,["onNavClicked"]],[32,1,["label"]]],null]],null],[12],[2,"\\n                                "],[8,"svg-icon",[[24,0,"text-gray-300 group-hover:text-gray-300 mr-3 h-6 w-6"]],[["@name"],["folder"]],null],[2,"\\n                                "],[1,[32,1,["label"]]],[2,"\\n                                "],[8,"svg-icon",[[16,0,[31,[[30,[36,1],[[32,1,["expanded"]],"text-white rotate-90","text-gray-300"],null]," ml-auto h-5 w-5 transform group-hover:text-white transition-colors ease-in-out duration-150"]]]],[["@name"],["expand"]],null],[2,"\\n                            "],[13],[2,"\\n"]],"parameters":[]},{"statements":[[6,[37,3],null,[["class","route"],[[30,[36,2],[[30,[36,1],[[30,[36,0],[[32,0,["currentRoute"]],[32,1,["route"]]],null],"bg-gray-900 text-white "],null],"group w-full flex items-center pl-2 py-2 text-sm font-medium rounded-md"],null],[32,1,["route"]]]],[["default"],[{"statements":[[2,"                                "],[8,"svg-icon",[[24,0,"mr-3 h-6 w-6"]],[["@name"],[[31,[[32,1,["icon"]]]]]],null],[2,"\\n                                "],[1,[32,1,["label"]]],[2,"\\n"]],"parameters":[]}]]]],"parameters":[]}]]],[6,[37,1],[[32,1,["expanded"]]],null,[["default"],[{"statements":[[6,[37,5],[[30,[36,4],[[30,[36,4],[[32,1,["links"]]],null]],null]],null,[["default"],[{"statements":[[2,"                                "],[10,"div"],[14,0,"space-y-1"],[12],[2,"\\n"],[6,[37,1],[[32,2,["external"]]],null,[["default","else"],[{"statements":[[2,"                                        "],[10,"a"],[15,6,[32,2,["href"]]],[14,0,"group w-full flex items-center pl-11 pr-2 py-2 text-sm font-medium rounded-md hover:text-white hover:bg-gray-700"],[12],[2,"\\n                                            "],[1,[32,2,["label"]]],[2,"\\n                                        "],[13],[2,"\\n"]],"parameters":[]},{"statements":[[6,[37,3],null,[["class","route"],[[30,[36,2],[[30,[36,1],[[30,[36,0],[[32,0,["currentRoute"]],[32,2,["route"]]],null],"bg-gray-900 text-white "],null],"group w-full flex items-center pl-11 pr-2 py-2 text-sm font-medium rounded-md hover:text-white hover:bg-gray-700"],null],[32,2,["route"]]]],[["default"],[{"statements":[[2,"                                            "],[1,[32,2,["label"]]],[2,"\\n"]],"parameters":[]}]]]],"parameters":[]}]]],[2,"                                "],[13],[2,"\\n"]],"parameters":[2]}]]]],"parameters":[]}]]],[2,"                    "],[13],[2,"\\n"]],"parameters":[1]}]]],[2,"                "],[13],[2,"\\n            "],[13],[2,"\\n        "],[13],[2,"\\n    "],[13],[2,"\\n    "],[10,"div"],[14,0,"min-h-full flex-1 overflow-y-auto bg-gray-900 scroll-container"],[12],[2,"\\n        "],[10,"div"],[14,0,"px-8 py-16 text-white font-medium "],[12],[2,"\\n            "],[1,[30,[36,9],[[30,[36,8],null,null]],null]],[2,"\\n        "],[13],[2,"\\n    "],[13],[2,"\\n"],[13]],"hasEval":false,"upvars":["eq","if","concat","link-to","-track-array","each","fn","on","-outlet","component"]}',moduleName:"fundamentals/pods/docs/template.hbs"})
e.default=t})),define("fundamentals/pods/docs/transformations/template",["exports"],(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.HTMLBars.template({id:"Vy4YS88v",block:'{"symbols":[],"statements":[[10,"div"],[14,0,"relative px-4 sm:px-6 lg:px-8"],[12],[2,"\\n    "],[8,"heading",[],[["@subtitle","@title"],["Describing our world with math","Transformations"]],[["default"],[{"statements":[[2,"\\n        Learning how to transform vectors is a crucial skill if not the most important. While it\'s not necessary to\\n        remember how to construct a rotation matrix by heart, knowing why it works can open the gates to learning\\n        more advance topics. This will be a big article so take your time and don\'t proceed any further until you\\n        have a good intuition on what\'s going on.\\n    "]],"parameters":[]}]]],[2,"\\n    "],[8,"prose-markdown",[],[[],[]],[["default"],[{"statements":[[2,"\\n        ## Vector Operations\\n\\n        Let\'s establish some basic rules for working with vectors. You can add and subtract vectors. Even multiply\\n        and divide them.\\n\\n        ### Addition/Subtraction\\n\\n        Adding vectors is done component-wise. You can treat each component of "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"[v_x, v_y, v_z]"]],"parameters":[]}]]],[2," separately.\\n        Let "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\boldsymbol{a} = [1,1,1]"]],"parameters":[]}]]],[2," and "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\boldsymbol{b} = [1,1,1]"]],"parameters":[]}]]],[2," then\\n        "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\boldsymbol{a} + \\\\boldsymbol{b} = [2,2,2]"]],"parameters":[]}]]],[2,". Subtraction uses the same principle. Subtraction is also basically addition with a\\n        negative value.\\n\\n        "],[8,"katex-block",[],[[],[]],[["default"],[{"statements":[[2,"\\n            \\\\boldsymbol{a} + \\\\boldsymbol{b} = [a_x + b_x,a_y + b_y,a_z + b_z]\\n        "]],"parameters":[]}]]],[2,"\\n    "]],"parameters":[]}]]],[2,"\\n    "],[8,"prose-figure",[],[["@componentName","@figureId","@figureCaption"],["figures/math/adding-vec","1","What\'s the result of adding (5, 2, 3) to A. Can you visualize what that might look like?"]],null],[2,"\\n    "],[8,"prose-markdown",[],[[],[]],[["default"],[{"statements":[[2,"\\n        A good visualization tool to build an intuition for this is to imagine attaching the tail of "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\boldsymbol{b}"]],"parameters":[]}]]],[2,", to the\\n        head of "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\boldsymbol{a}"]],"parameters":[]}]]],[2,". In other words, the point at "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\boldsymbol{a}"]],"parameters":[]}]]],[2," becomes the new origin for "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\boldsymbol{b}"]],"parameters":[]}]]],[2,", and "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\boldsymbol{b}"]],"parameters":[]}]]],[2,"\'s position is relative\\n        to the new coordinate space created from "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\boldsymbol{a}"]],"parameters":[]}]]],[2,".\\n\\n        You can also add a scalar value to a vector. A scalar just means a single number.\\n\\n        "],[8,"katex-block",[],[[],[]],[["default"],[{"statements":[[2,"\\n        s + \\\\boldsymbol{a} = [s + a_x, s + a_y, s + a_z]\\n        "]],"parameters":[]}]]],[2,"\\n\\n        ### Scalar Multiplication\\n\\n        To multiply a vector with a scalar, it\'s the same for adding a scalar. The scalar value is multiplied across\\n        all components.\\n\\n        "],[8,"katex-block",[],[[],[]],[["default"],[{"statements":[[2,"\\n            s\\\\boldsymbol{a} = [s \\\\cdot a_x, s \\\\cdot a_y, s \\\\cdot a_z]\\n        "]],"parameters":[]}]]],[2,"\\n    "]],"parameters":[]}]]],[2,"\\n    "],[8,"prose-figure",[],[["@componentName","@figureId","@figureCaption"],["figures/math/scalar-mul","2",[30,[36,0],["Multiplying a vector by a scalar stretches or scales the vector along it\'s direction.","It\'s length gets longer. Using a negative number inverts the vector. ","If the scalar value was a fraction, it\'s scalar division."],null]]],null],[2,"\\n    "],[8,"prose-markdown",[],[[],[]],[["default"],[{"statements":[[2,"\\n        ### Dot Product\\n\\n        Multiplying a vector by a vector comes in 2 forms. The **dot product** is one that produces a scalar value.\\n        Given two vectors, "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\boldsymbol{a}=[a_x,a_y,a_z]"]],"parameters":[]}]]],[2," and "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\boldsymbol{b}=[b_x, b_y, b_z]"]],"parameters":[]}]]],[2,".\\n\\n        The dot product is defined below:\\n\\n        "],[8,"katex-block",[],[[],[]],[["default"],[{"statements":[[2,"\\n            \\\\boldsymbol{a} \\\\cdotp \\\\boldsymbol{b} = a_x \\\\cdot b_x + a_y \\\\cdot b_y + a_z \\\\cdot b_z\\n        "]],"parameters":[]}]]],[2,"\\n\\n        The components are multiplied together then summed.\\n\\n        Play around with changing the direction for each of the vectors and see if you can figure out the\\n        relationship between the dot product and the angles of the vectors.\\n    "]],"parameters":[]}]]],[2,"\\n    "],[8,"prose-figure",[],[["@componentName","@figureId","@figureCaption"],["figures/math/dot-product","3","Visualizing dot products. The values range from 1 to -1. In this figure, white represents 1 and black represents -1."]],null],[2,"\\n    "],[8,"prose-markdown",[],[[],[]],[["default"],[{"statements":[[2,"\\n        It might not be clear from the demo, but the value of the **dot product** seem to range between -1 and 1. They\'re\\n        capped at 1 due to the vectors being **unit vectors**. You\'ll notice that when the vectors are facing the same direction, the value\\n        is 1 and when they\'re perpendicular, it\'s 0. Written another way, the **dot product** is expressed as the cosine of\\n        the angle between two vectors.\\n\\n        "],[8,"katex-block",[],[[],[]],[["default"],[{"statements":[[2,"\\n        \\\\boldsymbol{a} \\\\cdotp \\\\boldsymbol{b} = \\\\lVert a \\\\rVert \\\\lVert b \\\\rVert \\\\cos \\\\theta\\n        "]],"parameters":[]}]]],[2,"\\n\\n        In the above expression, the length of "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\boldsymbol{a}"]],"parameters":[]}]]],[2," is multiplied by the length of "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\boldsymbol{b}"]],"parameters":[]}]]],[2,".\\n        The product is then scaled by the cosine factor. For **unit vectors**, "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\lVert a \\\\rVert \\\\cdot \\\\lVert b \\\\rVert"]],"parameters":[]}]]],[2,"\\n        is just 1 so the **dot product** is simplified to just "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\cos \\\\theta"]],"parameters":[]}]]],[2,".\\n\\n\\n        To get a better intuition of dot products without having to do mental gymnastics, I think of it as an angle\\n        sensor.\\n        It returns **-1** when the angles are "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"180 \\\\degree"]],"parameters":[]}]]],[2,", and 1 when they\'re aligned. When you plot a **cosine** function, you see\\n        a sinusoidal waveform. Both "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\sin"]],"parameters":[]}]]],[2," and "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\cos"]],"parameters":[]}]]],[2," create the same wave but they\'re offset by "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"90 \\\\degree"]],"parameters":[]}]]],[2,".\\n        A **cosine** would begin at 1 at "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"0 \\\\degree"]],"parameters":[]}]]],[2," and transition to 0 at "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"90 \\\\degree"]],"parameters":[]}]]],[2," while a **sine** would start at 0\\n        and transition to 1 at "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"90 \\\\degree"]],"parameters":[]}]]],[2,".\\n    "]],"parameters":[]}]]],[2,"\\n    "],[8,"prose-figure",[],[["@figureId","@figureCaption","@imageUrl","@vertical"],["4","cos (blue) is 1 at 0 deg and sin (red) is 1 at 90 deg",[30,[36,1],["figures/sincos-c4b858f58770c5c774813d2f1c70d6e5.png"],null],true]],null],[2,"\\n    "],[8,"prose-markdown",[],[[],[]],[["default"],[{"statements":[[2,"\\n        **Dot products** are most commonly used as a scale factor. That is, scaling a term by a certain amount so that it\'s\\n        maximum is achieved when the vectors are aligned. A light source\'s attenution on a surface depends on the angle between\\n        the light direction and the **surface normal**. Light is most bright when the normal is aligned to the light\\n        direction.\\n\\n        Another way **dot products** are used is to find the angle between two vectors. Since the cosine is an angle based\\n        function, taking the inverse, a.k.a "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\arccos"]],"parameters":[]}]]],[2,", gives you the angle. Although you should be careful as multiple angles\\n        can give you the same result. Rotating a vector by "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"90 \\\\degree"]],"parameters":[]}]]],[2," counter-clockwise can be achieved by rotating it "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"-270 \\\\degree"]],"parameters":[]}]]],[2,".\\n        The dot product gives you the smaller of the two.\\n\\n        ### Cross Product\\n\\n        The other product form, called a **cross product**, produces a vector as a result. **Cross products** are slightly less\\n        intuitive and is defined as follows:\\n\\n        "],[8,"katex-block",[],[[],[]],[["default"],[{"statements":[[2,"\\n            \\\\boldsymbol{a} \\\\times \\\\boldsymbol{b} = [a_y \\\\cdot b_z - a_z \\\\cdot b_y, a_z \\\\cdot b_x - a_x \\\\cdot b_z, a_x \\\\cdot b_y - a_y \\\\cdot b_x]\\n        "]],"parameters":[]}]]],[2,"\\n\\n        Just like the **dot product** has the "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\cos"]],"parameters":[]}]]],[2," form, the **cross product** has a similar form.\\n\\n        "],[8,"katex-block",[],[[],[]],[["default"],[{"statements":[[2,"\\n            \\\\boldsymbol{a} \\\\times \\\\boldsymbol{b} = \\\\lVert A \\\\rVert \\\\lVert B \\\\rVert \\\\sin \\\\theta\\n        "]],"parameters":[]}]]],[2,"\\n\\n        For **unit vectors**, the magnitude of the product soley rely on the angle between the vectors. This time,\\n        the relationship is a **sine** function. The magnitude is maximized when the angle is "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"90 \\\\degree"]],"parameters":[]}]]],[2,", basically when the\\n        vectors are perpendicular to each other.\\n\\n        The result is another vector. The direction of this vector is perpendicular to both vectors "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\boldsymbol{a}"]],"parameters":[]}]]],[2," and "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\boldsymbol{b}"]],"parameters":[]}]]],[2,". Using\\n        **cross products**, you can calculate the direction of the "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\hat{z}"]],"parameters":[]}]]],[2," basis vector with only "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\hat{x}"]],"parameters":[]}]]],[2," and "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\hat{y}"]],"parameters":[]}]]],[2,". It\'s commonly used\\n        to figure out the third axis that would be perpendicular to both input axes.\\n\\n        Enough words. Let\'s see cross products in action.\\n    "]],"parameters":[]}]]],[2,"\\n    "],[8,"prose-figure",[],[["@componentName","@figureId","@figureCaption"],["figures/math/cross-product","5","Cross products in action. Like the dot product, the color of the sweeping angle represents the magnitude of the result, only this time the output is a vector."]],null],[2,"\\n    "],[8,"prose-markdown",[],[[],[]],[["default"],[{"statements":[[2,"\\n        As far as other usages go, it can be used to derive angles between vectors. It\'s used to calculate the amount of\\n        force on a wrench. The angle at which you hold the wrench will determine how much force is applied to it.\\n        Pushing down perpendicular to the wrench will apply the most force. This relationship is represented with the\\n        **sine** function.\\n\\n        ## 2D Transformations\\n\\n\\n        A transformation is any operation that take as input, vertices, and converts them in some way, like moving,\\n        reshaping, or rotating them.\\n\\n        ### Translation\\n\\n        Translations are done by adding vectors. Translation is a fancy way of saying move without changing the shape.\\n\\n        "],[8,"katex-block",[],[[],[]],[["default"],[{"statements":[[2,"\\n        \\\\boldsymbol{a} + \\\\boldsymbol{t}  = [a_x + t_x, a_y + t_y, a_z + t_z]\\n        "]],"parameters":[]}]]],[2,"\\n\\n        ### Scaling\\n\\n        Scaling transforms can stretch an object. It can stretch it uniformally in all directions or non-uniformally.\\n        Multiplying a point by unequal amounts across each component will result in a non-uniform scale.\\n\\n        "],[8,"katex-block",[],[[],[]],[["default"],[{"statements":[[2,"\\n        \\\\boldsymbol{s} \\\\cdot \\\\boldsymbol{a} = [a_x \\\\cdot s_x, a_y \\\\cdot s_y, a.z \\\\cdot s_z]\\n        "]],"parameters":[]}]]],[2,"\\n\\n        ### Rotation\\n\\n        While translations and scaling is fairly intuitive without much theory, explaining rotation transforms need\\n        more preparation to make things clear. So far we haven\'t had to deal with **complex numbers**. That is, numbers that\\n        consist of **imaginary numbers**. Learning some **complex** math is essential to intuitively understanding rotation.\\n\\n        In mathematics, "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\boldsymbol{i}"]],"parameters":[]}]]],[2," is the imaginary number. Whether or not this number actually exist doesn\'t really matter. It is useful. Just as\\n        **infinity** doesn\'t actually exist but it\'s useful. Well I guess you can say it exists because it\'s a useful\\n        tool and most constructs in math aren\'t physically real anyways.\\n\\n        "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\boldsymbol{i}"]],"parameters":[]}]]],[2," is "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\sqrt{-1}"]],"parameters":[]}]]],[2,".\\n\\n        Here are some common operations on "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\boldsymbol{i}"]],"parameters":[]}]]],[2,":\\n\\n        "],[8,"katex-block",[],[[],[]],[["default"],[{"statements":[[2,"\\n        \\\\boldsymbol{i^2} = -1\\\\\\\\\\n        \\\\boldsymbol{i^3} = -\\\\boldsymbol{i}\\\\\\\\\\n        \\\\boldsymbol{i^4} = 1\\n        "]],"parameters":[]}]]],[2,"\\n\\n        A **complex number** is one that combines a **real** part, and an **imaginary** part "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"a + b\\\\boldsymbol{i}"]],"parameters":[]}]]],[2,". Here\'s some common operations\\n        on **complex numbers**:\\n\\n        "],[8,"katex-block",[],[[],[]],[["default"],[{"statements":[[2,"\\n        (a + b\\\\boldsymbol{i}) + (c + d\\\\boldsymbol{i}) = (a + c) + (b + d)\\\\boldsymbol{i}\\\\\\\\\\n        (a + b\\\\boldsymbol{i})(c + d\\\\boldsymbol{i}) = a \\\\cdot c + a \\\\cdot d\\\\boldsymbol{i} + c \\\\cdot b\\\\boldsymbol{i} + b\\\\boldsymbol{i} \\\\cdot d\\\\boldsymbol{i} = ac - bd + (ad + cb)\\\\boldsymbol{i}\\n        "]],"parameters":[]}]]],[2,"\\n\\n        Adding **complex numbers** is done component-wise. Add the **reals** together then add the **imaginaries** together. Multiplying them involves the basic\\n        **FOIL** method (first terms + outer terms + inner terms + last terms).\\n\\n        When a **complex number** is multiplied or added with its conjugate, the result is a real number.\\n\\n        "],[8,"katex-block",[],[[],[]],[["default"],[{"statements":[[2,"\\n        (a + b\\\\boldsymbol{i}) \\\\cdot (a - b\\\\boldsymbol{i}) = (a^2 + abi - abi + -b^2i^2) = (a^2 + b^2)\\\\\\\\\\n        (a + b\\\\boldsymbol{i}) + (a - b\\\\boldsymbol{i}) = a\\n        "]],"parameters":[]}]]],[2,"\\n\\n        **Complex numbers** are important to the field of mathematics because it allows us to express numbers in different\\n        dimensions. All numbers, outside of **imaginary numbers** are **real numbers**. They fall on the **real** number line.\\n\\n        Up to now we\'ve expressed vectors as an ordered pair of numbers, and we assume which axis they belong to. More\\n        formally, vectors can be expressed as **complex numbers**. "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"(p_x, p_y)"]],"parameters":[]}]]],[2," can be written as "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"p_x + p_y\\\\boldsymbol{i}"]],"parameters":[]}]]],[2," where\\n        "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"p_x"]],"parameters":[]}]]],[2," lies on the **real** axis and "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"p_y"]],"parameters":[]}]]],[2," lies on the **imaginary** axis.\\n        Together they form the **complex plane**.\\n\\n        Rotations in **2D** space, on this **complex plane** to be precise, are carried out as **complex** multiplications.\\n        Multiplying by "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\boldsymbol{i}"]],"parameters":[]}]]],[2," will rotate a point on this plane by "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"90 \\\\degree"]],"parameters":[]}]]],[2," counter-clockwise. Do it 3 more times and you\\n        end up right back where you started, a full "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"360 \\\\degree"]],"parameters":[]}]]],[2," rotation.\\n\\n        Lets expand this.\\n\\n        For a point "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\boldsymbol{P} = (1, 0)"]],"parameters":[]}]]],[2,"\\n\\n        "],[8,"katex-block",[],[[],[]],[["default"],[{"statements":[[2,"\\n            1 + 0\\\\boldsymbol{i}\\n        "]],"parameters":[]}]]],[2,"\\n\\n        Rotating by "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\boldsymbol{i}"]],"parameters":[]}]]],[2," results in "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"(0, 1)"]],"parameters":[]}]]],[2,".\\n\\n        "],[8,"katex-block",[],[[],[]],[["default"],[{"statements":[[2,"\\n            (1 + 0\\\\boldsymbol{i})\\\\boldsymbol{i} = \\\\boldsymbol{i}\\n        "]],"parameters":[]}]]],[2,"\\n\\n        "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"(0, 1)"]],"parameters":[]}]]],[2," is a "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"90 \\\\degree"]],"parameters":[]}]]],[2," rotation. Do it 3 more times.\\n\\n        "],[8,"katex-block",[],[[],[]],[["default"],[{"statements":[[2,"\\n            (0 + 1\\\\boldsymbol{i})\\\\boldsymbol{i} = -1 \\\\\\\\\\n            (-1 + 0\\\\boldsymbol{i})\\\\boldsymbol{i} = -\\\\boldsymbol{i}\\\\\\\\\\n            (0, -1\\\\boldsymbol{i})\\\\boldsymbol{i} = 1\\n        "]],"parameters":[]}]]],[2,"\\n\\n        "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\boldsymbol{i}^2"]],"parameters":[]}]]],[2," is "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"-1"]],"parameters":[]}]]],[2," and "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"-(-1)"]],"parameters":[]}]]],[2," is "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"1"]],"parameters":[]}]]],[2,".\\n\\n        Let\'s try another example. For a point "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\boldsymbol{P} = (1, 0)"]],"parameters":[]}]]],[2,", rotate it by "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"45 \\\\degree"]],"parameters":[]}]]],[2,".\\n\\n        If you remember your **unit circle** from **Trigonometry**, "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"45 \\\\degree"]],"parameters":[]}]]],[2," can be written as "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"({\\\\sqrt{2} \\\\over 2},{\\\\sqrt{2} \\\\over 2})"]],"parameters":[]}]]],[2,". Simply\\n        multiply that point by "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"({\\\\sqrt{2} \\\\over 2} + {\\\\sqrt{2} \\\\over 2}\\\\boldsymbol{i})"]],"parameters":[]}]]],[2,".\\n\\n        "],[8,"katex-block",[],[[],[]],[["default"],[{"statements":[[2,"\\n        (1 + 0\\\\boldsymbol{i}) \\\\times ({\\\\sqrt{2} \\\\over 2}, {\\\\sqrt{2} \\\\over 2}\\\\boldsymbol{i}) = ({\\\\sqrt{2} \\\\over 2} + {\\\\sqrt{2} \\\\over2}\\\\boldsymbol{i})\\n        "]],"parameters":[]}]]],[2,"\\n\\n        More generally, rotating any point in 2D space is of the form\\n\\n        "],[8,"katex-block",[],[[],[]],[["default"],[{"statements":[[2,"\\n        \\\\bold{R}(\\\\boldsymbol{v}, \\\\theta) = \\\\boldsymbol{v} \\\\cdot (\\\\cos \\\\theta + \\\\sin \\\\theta \\\\boldsymbol{i}).\\n        "]],"parameters":[]}]]],[2,"\\n\\n        When fully expanded it becomes "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"p_x \\\\cdot \\\\cos \\\\theta - p_y \\\\sin \\\\theta + (p_x \\\\cdot \\\\sin + p_y \\\\cdot \\\\cos)\\\\boldsymbol{i}"]],"parameters":[]}]]],[2,".\\n\\n        The **complex number** you multiply by, can be represented as a **unit vector** in **2D** space. Any rotation of a vector (position or directional) in **2D** space can be\\n        performed by simply multiplying that vector by another vector. This transform vector is defined as "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"(\\\\cos \\\\theta + \\\\sin \\\\theta \\\\boldsymbol{i})"]],"parameters":[]}]]],[2,".\\n        This can also be neatly expressed in polar form "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\boldsymbol{e}^{\\\\boldsymbol{i}\\\\theta}"]],"parameters":[]}]]],[2,".\\n    "]],"parameters":[]}]]],[2,"\\n    "],[8,"prose-figure",[],[["@componentName","@figureId","@figureCaption"],["figures/math/rotation-2d","6","Multiplying a vector with a directional vector in polar form"]],null],[2,"\\n    "],[8,"prose-markdown",[],[[],[]],[["default"],[{"statements":[[2,"\\n        ## Chaining Transformations\\n\\n        It\'s normal to apply multiple transformations in succession. The usual routine is to scale first, followed\\n        by rotation, then translation. This is not some standard, just a reasonable convention a lot of APIs use.\\n        That order matches people\'s expectation but it\'s not required. You can chain transformations in any order.\\n        All transforms operate within the original coordinate space of the object being tansformed. This means that transformations\\n        are carried out in the coordinate space the object was defined in. If the object for instance is a simple triangle,\\n        then the coordinate space would typically be found at the center of this triangle.\\n\\n        If this triangle started out centered at the origin and was then translated by "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\bold{T} = (5, 0)"]],"parameters":[]}]]],[2,",\\n        then the triangle\'s center position is moved by 5 units in the **X-axis**  but the coordinate system is still\\n        centered at "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"(0, 0)"]],"parameters":[]}]]],[2,". If you follow it up with a "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"90 \\\\degree"]],"parameters":[]}]]],[2,"rotation,\\n        then this would place the new point at 5 units up on the **Y-axis**.\\n\\n        This ordering can be changed by multiplying out transformations in a different order. Play with the example below to see where\\n        the object will end up using the same transformations but across different orders.\\n    "]],"parameters":[]}]]],[2,"\\n    "],[8,"prose-figure",[],[["@componentName","@figureId","@figureCaption"],["figures/math/chaining","7","Visualize different ordering of transformations"]],null],[2,"\\n    "],[8,"prose-markdown",[],[[],[]],[["default"],[{"statements":[[2,"\\n        ## 3D Transformations and Matrices\\n\\n        Matrices are the cornerstone of transformations. They can neatly pack multiple transformation in one matrix.\\n        They\'re fast, especially on massively parallel architectures like GPUs. Most importantly, we can use them\\n        to rotate in **3D**.\\n\\n        First, a brief intro on matrices. Matrices are really just a group of numbers. Vectors are groups of numbers\\n        as well. Vectors can be represented with matrices but a matrix can have multiple rows or columns. A **2 x 2** matrix\\n        has 2 rows and 2 columns. It\'s commonly implemented as a multi-dimensional array.\\n\\n        Just like with vectors, let\'s go over some basic matrix operations.\\n\\n        ### Addition:\\n\\n        "],[8,"katex-block",[],[[],[]],[["default"],[{"statements":[[2,"\\n        \\\\begin{bmatrix}a_{11} & a_{12} \\\\\\\\ a_{21} & a_{22}\\\\end{bmatrix} + \\\\begin{bmatrix}b_{11} & b_{12} \\\\\\\\ b_{21} & b_{22}\\\\end{bmatrix} = \\\\begin{bmatrix}a_{11}+b_{11} & a_{12}+b_{12} \\\\\\\\ a_{21}+b_{21} & a_{22}+b_{22}\\\\end{bmatrix}\\n        "]],"parameters":[]}]]],[2,"\\n\\n        ### Scalar multiplication:\\n\\n        "],[8,"katex-block",[],[[],[]],[["default"],[{"statements":[[2,"\\n        s \\\\cdot \\\\begin{bmatrix}a_{11} & a_{12} \\\\\\\\ a_{21} & a_{22}\\\\end{bmatrix} = \\\\begin{bmatrix}s \\\\cdot a_{11} & s \\\\cdot a_{12} \\\\\\\\ s \\\\cdot a_{21} & s \\\\cdot a_{22}\\\\end{bmatrix}\\n        "]],"parameters":[]}]]],[2,"\\n\\n        ### Matrix multiplication:\\n\\n        For the matrix "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\bold{A}"]],"parameters":[]}]]],[2," and "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\bold{B}"]],"parameters":[]}]]],[2,", given that the sizes are compatible as shown below\\n\\n        "],[8,"katex-block",[],[[],[]],[["default"],[{"statements":[[2,"\\n        \\\\boldsymbol{size}(\\\\bold{A}) = m \\\\times n\\\\\\\\\\n        \\\\boldsymbol{size}(\\\\bold{B}) = n \\\\times p\\n        "]],"parameters":[]}]]],[2,"\\n\\n\\n        matrix multiplication is defined as follows:\\n\\n        "],[8,"katex-block",[],[[],[]],[["default"],[{"statements":[[2,"\\n            \\\\bold{A} \\\\times \\\\bold{B} =\\n        \\\\begin{bmatrix}\\n        a_{11} \\\\cdot b_{11} + a_{12} \\\\cdot b_{21} & a_{11} \\\\cdot b_{12} + a_{12} \\\\cdot b_{22}\\\\\\\\\\n        a_{21} \\\\cdot b_{11} + a_{22} \\\\cdot b_{21} & a_{21} \\\\cdot b_{12} + a_{22} \\\\cdot b_{22}\\n        \\\\end{bmatrix}\\n        "]],"parameters":[]}]]],[2,"\\n\\n        Matrix multiplication is only possible when the number of columns for **A** matches the number of rows for **B**,\\n        meaning "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"n"]],"parameters":[]}]]],[2," has to be the same. So, matrices where the sizes are "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"m \\\\times n"]],"parameters":[]}]]],[2," and "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"n \\\\times p"]],"parameters":[]}]]],[2," will work.\\n        The resulting matrix would be a "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"m \\\\times p"]],"parameters":[]}]]],[2," matrix.\\n\\n        Here\'s another way of looking at it. For the output matrix, which we\'ll call "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\bold{C}"]],"parameters":[]}]]],[2,", every element can be solved by taking the\\n        the **dot product** of the "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"ith"]],"parameters":[]}]]],[2," row of **A** with the "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"jth"]],"parameters":[]}]]],[2," column of **B**.\\n\\n        "],[8,"katex-block",[],[[],[]],[["default"],[{"statements":[[2,"\\n            C_{ij} = \\\\boldsymbol{a}_i \\\\cdot \\\\boldsymbol{b}_{,j}\\\\\\\\\\n            \\\\\\\\\\n            \\\\bold{A} \\\\times \\\\bold{B} =\\n            \\\\begin{bmatrix}\\n            \\\\boldsymbol{a}_1 \\\\cdotp \\\\boldsymbol{b}_{,1} & \\\\boldsymbol{a}_1 \\\\cdotp \\\\boldsymbol{b}_{,2}\\\\\\\\\\n            \\\\boldsymbol{a}_2 \\\\cdotp \\\\boldsymbol{b}_{,1} & \\\\boldsymbol{a}_2 \\\\cdotp \\\\boldsymbol{b}_{,2}\\n            \\\\end{bmatrix}\\n        "]],"parameters":[]}]]],[2,"\\n\\n        Let me explain the subscript notation used here. To access all the elements in a single row or column\\n        I just use a single subscript. To address all elements for the "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"ith"]],"parameters":[]}]]],[2," row, I will use "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\boldsymbol{a}_{i}"]],"parameters":[]}]]],[2,".\\n\\n        I use a comma in place of the row index to represent all rows. For example, to address the "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"jth"]],"parameters":[]}]]],[2," column\\n        I denote that with "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\boldsymbol{a}_{,j}"]],"parameters":[]}]]],[2,".\\n\\n        Hopefully this visual model helps a lot more then the purely mathematical definition.\\n\\n        "],[8,"katex-block",[],[[],[]],[["default"],[{"statements":[[2,"\\n            \\\\begin{bmatrix}\\n            \\\\color{red}a_{11} & \\\\color{red}a_{12}\\\\\\\\\\n            a_{21} & a_{22}\\n            \\\\end{bmatrix}\\n\\n            \\\\times\\n\\n            \\\\begin{bmatrix}\\n            \\\\color{red}b_{11} & b_{12}\\\\\\\\\\n            \\\\color{red}b_{21} & b_{22}\\n            \\\\end{bmatrix}\\n\\n            =\\n\\n            \\\\begin{bmatrix}\\n            \\\\color{red}c_{11} & c_{12}\\\\\\\\\\n            c_{21} & c_{22}\\n            \\\\end{bmatrix}\\n\\n        "]],"parameters":[]}]]],[2,"\\n        "],[10,"figure"],[12],[2,"\\n            "],[10,"figcaption"],[12],[2,"I highlighted the red to show which vectors were involved in the products. For "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"c_{11}"]],"parameters":[]}]]],[2," we\\n            just needed to take the dot product of the "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"1st"]],"parameters":[]}]]],[2," row with the "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"1st"]],"parameters":[]}]]],[2," column."],[13],[2,"\\n        "],[13],[2,"\\n\\n        Each row and column can be viewed as vectors. Matrix multiplication is a matter of finding the correct vectors\\n        to use for the inner product.\\n\\n        If matrix multiplication is new to you, this could take a lot more practice to get the hang of it.\\n        If there is anything to get out of this it\'s that the inner dimensions has to match. As we\'ve seen,\\n        a "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"2 \\\\times 2"]],"parameters":[]}]]],[2," matrix can be multiplied by a "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"2 \\\\times 2"]],"parameters":[]}]]],[2," and a\\n        "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"3 \\\\times 3"]],"parameters":[]}]]],[2," by a "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"3 \\\\times 3"]],"parameters":[]}]]],[2,". A "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"3 \\\\times 3"]],"parameters":[]}]]],[2,"\\n        cannot be multiplied by "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"1 \\\\times 3"]],"parameters":[]}]]],[2," but a "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"1 \\\\times 3"]],"parameters":[]}]]],[2,"\\n        can be multiplied by a "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"3 \\\\times 3"]],"parameters":[]}]]],[2,".\\n\\n\\n        ### Column-Major Vector\\n\\n        In the math world and OpenGL, vectors take on the **column-major** form.\\n        Because of this choice, vectors being transformed by a matrix always needs to be to the right of the matrix.\\n\\n        Let "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\bold{A}"]],"parameters":[]}]]],[2," be a "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"3 \\\\times 3"]],"parameters":[]}]]],[2," matrix and "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\bold{P}"]],"parameters":[]}]]],[2," be a "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"3 \\\\times 1 "]],"parameters":[]}]]],[2," column vector.\\n        The only possible order to multiply these togther is "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\bold{A} \\\\times \\\\bold{P}"]],"parameters":[]}]]],[2,". It can never\\n        be "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\bold{P} \\\\times \\\\bold{A}"]],"parameters":[]}]]],[2,". Lets add another matrix "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\bold{B}"]],"parameters":[]}]]],[2,", to the mix. It\'s a "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"3 \\\\times 3"]],"parameters":[]}]]],[2," matrix.\\n        You can have "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\bold{A} \\\\times \\\\bold{B} \\\\times \\\\bold{P}"]],"parameters":[]}]]],[2," or "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\bold{B} \\\\times \\\\bold{A} \\\\times \\\\bold{P}"]],"parameters":[]}]]],[2,"\\n        but never "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\bold{A} \\\\times \\\\bold{P} \\\\times \\\\bold{B}"]],"parameters":[]}]]],[2," or "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\bold{B} \\\\times \\\\bold{P} \\\\times \\\\bold{A}"]],"parameters":[]}]]],[2,".\\n\\n        Due to the non-commutative property of matrices, matrices are order dependent. You can\'t actually swap the order,\\n        but you can change when they\'re evaluated.\\n\\n        You can evaluate "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\bold{A} \\\\times \\\\bold{B} \\\\times \\\\bold{P}"]],"parameters":[]}]]],[2," like "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"(\\\\bold{A} \\\\times \\\\bold{B}) \\\\times \\\\bold{P}"]],"parameters":[]}]]],[2,"\\n        or "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\bold{A} \\\\times (\\\\bold{B} \\\\times \\\\bold{P})"]],"parameters":[]}]]],[2,". This is a property of matrix multiplication called\\n        associativity.\\n\\n        If "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\bold{T}"]],"parameters":[]}]]],[2,", "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\bold{R}"]],"parameters":[]}]]],[2,", "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\bold{S}"]],"parameters":[]}]]],[2," were transformations, then you can evaluate this\\n        multiplication "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\bold{TRS}\\\\boldsymbol{p}"]],"parameters":[]}]]],[2," in the following order. "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\bold{S} \\\\times \\\\boldsymbol{p}"]],"parameters":[]}]]],[2," followed by\\n        a multiplication by "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\bold{R}"]],"parameters":[]}]]],[2,", then by "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\bold{T}"]],"parameters":[]}]]],[2,". You can also evaluate "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\bold{TRS}"]],"parameters":[]}]]],[2,"\\n        together to create one combined matrix.\\n\\n        A significant number of people would say you\'d have to evaluate the multiplication by reading right to left. While techically,\\n        that\'s true, I have to make it clear that you can evaluate in whatever order. You just can\'t rearrange them.\\n\\n        One of the reasons a majority of people get this wrong is that this evaluation order gives you a more intuitive\\n        interpretation of how transformations are applied.\\n\\n        Take "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\bold{TRS}\\\\boldsymbol{p}"]],"parameters":[]}]]],[2," for example, "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\bold{T}"]],"parameters":[]}]]],[2," is translation matrix, "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\bold{R}"]],"parameters":[]}]]],[2,"\\n        a rotation, "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\bold{S}"]],"parameters":[]}]]],[2," a scaling matrix and the "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\boldsymbol{p}"]],"parameters":[]}]]],[2," is the point being\\n        transformed. It\'s natural to think of scaling "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\boldsymbol{p}"]],"parameters":[]}]]],[2," by "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\bold{S}"]],"parameters":[]}]]],[2," first, then rotating this scaled point, followed by\\n        a rotation and translation.\\n\\n        You can just as easily evaluate left to right. Instead of looking at it from a perspective of transforming\\n        the point, it\'s actually transforming the coordinate system. Before I lose you, here\'s an example.\\n\\n        Let "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\bold{T}"]],"parameters":[]}]]],[2," be a translation matrix that moves to the right by 3 units. Let "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\bold{R}"]],"parameters":[]}]]],[2," be a "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"90 \\\\degree"]],"parameters":[]}]]],[2," rotation\\n        matrix. Let "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\boldsymbol{p} = (1, 0, 0)"]],"parameters":[]}]]],[2,". Let\'s evaluate "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\bold{TR}\\\\boldsymbol{p}"]],"parameters":[]}]]],[2," left to right and follow what\'s happening.\\n\\n        1. Starting at the original coordinate space, everything is centered at "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"(0,0,0)"]],"parameters":[]}]]],[2,". This would be the absolute world\\n        space.\\n        2. "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\bold{T}"]],"parameters":[]}]]],[2," establishes a new coordinate space where "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"(0,0,0)"]],"parameters":[]}]]],[2," is now at "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"(3,0,0)"]],"parameters":[]}]]],[2,".\\n        3. "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\bold{R}"]],"parameters":[]}]]],[2," establishes a new coordinate system where the origin is still at "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"(3,0,0)"]],"parameters":[]}]]],[2," but the local right axis is\\n        pointing upwards now and the local up is pointing in the "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"-X"]],"parameters":[]}]]],[2," direction.\\n        4. "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\bold{P}"]],"parameters":[]}]]],[2," is drawn at "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"(1,0,0)"]],"parameters":[]}]]],[2," of this coordinate system but "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"(1,0,0)"]],"parameters":[]}]]],[2," is actually pointing up now.\\n        The absolute coordinates for this point would be "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"(3,1,0)"]],"parameters":[]}]]],[2,".\\n\\n        Lets evaluate it from the reverse direction. Remember, we have to look at this from the perspective of the point being transformed.\\n\\n        1. Starting in absolute coordinate space.\\n        2. "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\bold{P}"]],"parameters":[]}]]],[2," is drawn at "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"(1,0,0)"]],"parameters":[]}]]],[2,".\\n        3. "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\bold{P}"]],"parameters":[]}]]],[2," is rotated by "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\bold{R}"]],"parameters":[]}]]],[2," and becomes "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"(0,1,0)"]],"parameters":[]}]]],[2,".\\n        4. "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\bold{P}"]],"parameters":[]}]]],[2," is then translated 3 units to the right and becomes "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"(3,1,0)"]],"parameters":[]}]]],[2,".\\n\\n        Evaluating it from right to left seems easier to visualize for most people which is why many people believe\\n        it\'s the only way to evaluate when using **column-major** vectors.\\n\\n        Since we\'re on the theme of correcting misinformation, this right-to-left evaluation has nothing to do with\\n        being **right-handed**. Nor does it have anything to do with column-major ordering, which is an implementation\\n        detail on how to store the values of a matrix in memory.\\n\\n        Here\'s a visual example of this mental gymnastics.\\n    "]],"parameters":[]}]]],[2,"\\n    "],[8,"prose-figure",[],[["@componentName","@figureId","@figureCaption","@props"],["figures/math/transform-intuition","8","Left-to-right evaluation. Coordinate systems are being transformed. The X-axis now becomes the Y-axis in the first transform. The next transform positions the new coordinate system 3 units to the right of the original. The point P is drawn 1 unit on the X-axis, which is now facing up.",[30,[36,2],null,[["mode"],["left-to-right"]]]]],null],[2,"\\n    "],[8,"prose-figure",[],[["@componentName","@figureId","@figureCaption","@props"],["figures/math/transform-intuition","9","Right-to-left evalution",[30,[36,2],null,[["mode"],["right-to-left"]]]]],null],[2,"\\n    "],[8,"prose-markdown",[],[[],[]],[["default"],[{"statements":[[2,"\\n        Thinking in terms of left-to-right can be helpful as well. It can be visualized like **Fig. 8**. Computationally, this is what is really going on under the hood.\\n        Transforms are being applied to the coordinate system rather then the object. Each transformation reveals a new coordinate system with\\n        a new origin.\\n\\n        ### Scale Matrix\\n\\n        "],[8,"katex-block",[],[[],[]],[["default"],[{"statements":[[2,"\\n        \\\\bold{S} =\\n        \\\\begin{bmatrix}\\n            s_x & 0 & 0\\\\\\\\\\n            0 & s_y & 0\\\\\\\\\\n            0 & 0 & s_z\\\\\\\\\\n        \\\\end{bmatrix}\\n        "]],"parameters":[]}]]],[2,"\\n        "],[8,"katex-block",[],[[],[]],[["default"],[{"statements":[[2,"\\n        \\\\boldsymbol{p} = [p_x, p_y, p_z]^T\\n        "]],"parameters":[]}]]],[2,"\\n\\n        When you multiply "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\bold{S}"]],"parameters":[]}]]],[2," with "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\boldsymbol{p}"]],"parameters":[]}]]],[2,", you get a "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"1 \\\\times 3"]],"parameters":[]}]]],[2,"\\n        since "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"size(\\\\bold{S}) = 3 \\\\times 3"]],"parameters":[]}]]],[2,", and "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"size(\\\\boldsymbol{p}) = 3 \\\\times 1"]],"parameters":[]}]]],[2,". All "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"3 \\\\times 3"]],"parameters":[]}]]],[2," matrices\\n        multiplied by a **3D** point will give a "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"3 \\\\times 1"]],"parameters":[]}]]],[2,".\\n\\n        "],[8,"katex-block",[],[[],[]],[["default"],[{"statements":[[2,"\\n        \\\\bold{S} \\\\times \\\\boldsymbol{p} =\\n\\n        \\\\begin{bmatrix}\\n            s_x & 0 & 0\\\\\\\\\\n            0 & s_y & 0\\\\\\\\\\n            0 & 0 & s_z\\\\\\\\\\n        \\\\end{bmatrix}\\n\\n        \\\\times\\n\\n        \\\\begin{bmatrix}\\n            p_x\\\\\\\\\\n            p_y\\\\\\\\\\n            p_z\\\\\\\\\\n        \\\\end{bmatrix}\\n\\n        =\\n\\n        \\\\begin{bmatrix}\\n            s_x \\\\cdot p_x\\\\\\\\\\n            s_y \\\\cdot p_y\\\\\\\\\\n            s_z \\\\cdot p_z\\\\\\\\\\n        \\\\end{bmatrix}\\n        "]],"parameters":[]}]]],[2,"\\n\\n        ### Translation Matrix\\n\\n        Translating 3D vectors with matrices require a "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"4 \\\\times 4"]],"parameters":[]}]]],[2," matrix.\\n        Since a "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"4 \\\\times 4"]],"parameters":[]}]]],[2," matrix cannot be multiplied by a "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"3 \\\\times 1"]],"parameters":[]}]]],[2," vector,\\n        we have to augment our vectors to be 4 dimensions.\\n        Add an additional component and give it a value of 1. "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"[p_x, p_y, p_z, p_w]"]],"parameters":[]}]]],[2,". These are called homogenous coordinates. To\\n        use vectors against a "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"4 \\\\times 4"]],"parameters":[]}]]],[2," matrix, you must use a **4-component** vector. Set this to 1 for positional vertices\\n        and 0 for directional ones. We\'ll see shortly why 1 is used for positional vectors, and also why 0 is used for directional vectors.\\n\\n        "],[8,"katex-block",[],[[],[]],[["default"],[{"statements":[[2,"\\n        \\\\bold{T} \\\\times \\\\boldsymbol{p} =\\n        \\\\begin{bmatrix}\\n            1 & 0 & 0 & t_x\\\\\\\\\\n            0 & 1 & 0 & t_y\\\\\\\\\\n            0 & 0 & 1 & t_z\\\\\\\\\\n            0 & 0 & 0 & 1\\n        \\\\end{bmatrix}\\n\\n        \\\\times\\n\\n        \\\\begin{bmatrix}\\n            p_x\\\\\\\\\\n            p_y\\\\\\\\\\n            p_z\\\\\\\\\\n            p_w\\\\\\\\\\n        \\\\end{bmatrix}\\n\\n        =\\n\\n        \\\\begin{bmatrix}\\n            p_x + t_x \\\\cdot p_w\\\\\\\\\\n            p_y + t_y \\\\cdot p_w\\\\\\\\\\n            p_z + t_z \\\\cdot p_w\\\\\\\\\\n            p_w\\\\\\\\\\n        \\\\end{bmatrix}\\n        "]],"parameters":[]}]]],[2,"\\n\\n        As you can see, the resulting vector is the original vector plus the translation when "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"p_w"]],"parameters":[]}]]],[2," is 1. Directional\\n        vectors are always assumed to be attached to the origin because they have no positional concept. They express directions and thus shouldn\'t\\n        be modified by a translation matrix. When you set "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"p_w"]],"parameters":[]}]]],[2," to 0, the vector doesn\'t get transformed.\\n\\n        ### Rotation Matrix\\n\\n        A 3D rotation matrix requires a little more explaining. Recall that a 2D rotation transform is the complex number\\n        "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\cos \\\\theta + \\\\sin \\\\theta \\\\boldsymbol{i}"]],"parameters":[]}]]],[2," or the vector "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"[\\\\cos \\\\theta, \\\\sin \\\\theta]"]],"parameters":[]}]]],[2,".\\n        Setting up a **2D** rotation matrix for this is not as straightforward but I\'ll walk through it.\\n\\n        "],[8,"katex-block",[],[[],[]],[["default"],[{"statements":[[2,"\\n        \\\\bold{R} \\\\times \\\\boldsymbol{p} =\\n        \\\\begin{bmatrix}\\n            \\\\cos \\\\theta & -\\\\sin \\\\theta \\\\\\\\\\n            \\\\sin \\\\theta & \\\\cos \\\\theta \\\\\\\\\\n        \\\\end{bmatrix}\\n\\n        \\\\times\\n\\n        \\\\begin{bmatrix}\\n            p_x\\\\\\\\\\n            p_y\\\\\\\\\\n        \\\\end{bmatrix}\\n\\n        =\\n\\n        \\\\begin{bmatrix}\\n            p_x \\\\cos \\\\theta - p_y \\\\sin \\\\theta\\\\\\\\\\n            p_x \\\\sin \\\\theta + p_y \\\\cos \\\\theta\\\\\\\\\\n        \\\\end{bmatrix}\\n        "]],"parameters":[]}]]],[2,"\\n\\n        Recall that the fully expanded vector based rotation is "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"[p_x \\\\cos \\\\theta - p_y \\\\sin \\\\theta, p_x \\\\sin \\\\theta + p_y \\\\cos \\\\theta]"]],"parameters":[]}]]],[2,".\\n        Focusing on just the **x** component, let\'s build this matrix piece by piece.\\n\\n        "],[8,"katex-block",[],[[],[]],[["default"],[{"statements":[[2,"\\n        \\\\begin{bmatrix}\\n            \\\\cos \\\\theta & -\\\\sin \\\\theta\\\\\\\\\\n            0 & 0\\\\\\\\\\n        \\\\end{bmatrix}\\n\\n        \\\\times\\n\\n        \\\\begin{bmatrix}\\n            p_x\\\\\\\\\\n            p_y\\\\\\\\\\n        \\\\end{bmatrix}\\n\\n        =\\n\\n        \\\\begin{bmatrix}\\n            p_x \\\\cdot \\\\cos \\\\theta - p_y \\\\cdot \\\\sin \\\\theta\\\\\\\\\\n            0\\n        \\\\end{bmatrix}\\n        "]],"parameters":[]}]]],[2,"\\n\\n        The matrix transforms only the "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"p_x"]],"parameters":[]}]]],[2," component. If you compare this with the **complex version**, you\'d notice they match up.\\n        We can do the same operation with the **y** component.\\n\\n        "],[8,"katex-block",[],[[],[]],[["default"],[{"statements":[[2,"\\n        \\\\begin{bmatrix}\\n            0 & 0\\\\\\\\\\n            \\\\sin \\\\theta & \\\\cos \\\\theta\\\\\\\\\\n        \\\\end{bmatrix}\\n\\n        \\\\times\\n\\n        \\\\begin{bmatrix}\\n            p_x\\\\\\\\\\n            p_y\\\\\\\\\\n        \\\\end{bmatrix}\\n\\n        =\\n\\n        \\\\begin{bmatrix}\\n            0\\\\\\\\\\n            p_x \\\\cdot \\\\sin \\\\theta + p_y \\\\cdot \\\\cos \\\\theta\\n        \\\\end{bmatrix}\\n        "]],"parameters":[]}]]],[2,"\\n\\n        Integrating the two gives you the full **2D** rotation matrix.\\n\\n        Another visual aid for constructing this matrix is to imagine each column of the rotation matrix establishing\\n        the new basis vectors for the rotation. Earlier, I said you can think of matrices as creating a new\\n        coordinate system. The coordinate system\'s orientation and position in space is determined by these basis\\n        vectors. Any point in this space can be determined as a linear combination of these vectors.\\n\\n        Knowing this we can write all transformations, at least of the "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"2 \\\\times 2"]],"parameters":[]}]]],[2," and "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"3 \\\\times 3"]],"parameters":[]}]]],[2," variety like this.\\n\\n        "],[8,"katex-block",[],[[],[]],[["default"],[{"statements":[[2,"\\n        \\\\begin{bmatrix}\\n        i_x & j_x & k_x\\\\\\\\\\n        i_y & j_y & k_y\\\\\\\\\\n        i_z & j_z & k_z\\\\\\\\\\n        \\\\end{bmatrix}\\n        "]],"parameters":[]}]]],[2,"\\n\\n        "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\hat{i} \\\\space \\\\hat{j} \\\\space \\\\hat{k}"]],"parameters":[]}]]],[2," vectors are commonly used as basis vectors.\\n\\n        For a "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"90 \\\\degree"]],"parameters":[]}]]],[2," 2D rotation, this matrix looks like this:\\n\\n        "],[8,"katex-block",[],[[],[]],[["default"],[{"statements":[[2,"\\n        \\\\begin{bmatrix}\\n            0 & -1\\\\\\\\\\n            1 & 0\\\\\\\\\\n        \\\\end{bmatrix}\\n        "]],"parameters":[]}]]],[2,"\\n\\n        Let\'s check our answer against the general form and see if they match\\n\\n        "],[8,"katex-block",[],[[],[]],[["default"],[{"statements":[[2,"\\n        \\\\begin{bmatrix}\\n        cos 90 \\\\degree & -sin 90 \\\\degree\\\\\\\\\\n        sin 90 \\\\degree & cos 90 \\\\degree\\\\\\\\\\n        \\\\end{bmatrix}\\n\\n        =\\n\\n        \\\\begin{bmatrix}\\n            0 & -1\\\\\\\\\\n            1 & 0\\\\\\\\\\n        \\\\end{bmatrix}\\n        "]],"parameters":[]}]]],[2,"\\n\\n        This looks correct. This is a powerful way of constructing transformations and we can use this to help us construct **3D** rotations easier.\\n\\n        Let\'s extend this to **3D**. In **2D**, rotation is only done about one axis, an imaginary axis not on the complex plane.\\n        In **3D**, you can rotate about any of the 3 axes **x**, **y**, or **z**. Rotation in **2D** is still possible in **3D**. In fact,\\n        it\'s generally easier to think of rotation in **3D** as a set of rotations about any of the 3 axes. Rotation around any one axis\\n        is a **2D** rotation. For example, a normal **2D** rotation can be seen as a rotation about the **z** axis. Let\'s define that matrix.\\n\\n        "],[8,"katex-block",[],[[],[]],[["default"],[{"statements":[[2,"\\n        \\\\bold{R} \\\\times \\\\boldsymbol{p} =\\n\\n        \\\\begin{bmatrix}\\n            \\\\cos \\\\theta & -\\\\sin \\\\theta & 0\\\\\\\\\\n            \\\\sin \\\\theta & \\\\cos \\\\theta & 0\\\\\\\\\\n            0 & 0 & 1\\\\\\\\\\n        \\\\end{bmatrix}\\n\\n        \\\\times\\n\\n        \\\\begin{bmatrix}\\n            p_x\\\\\\\\\\n            p_y\\\\\\\\\\n            p_z\\\\\\\\\\n        \\\\end{bmatrix}\\n\\n        =\\n\\n        \\\\begin{bmatrix}\\n            p_x \\\\cdot \\\\cos \\\\theta - p_y \\\\cdot \\\\sin \\\\theta\\\\\\\\\\n            p_x \\\\cdot \\\\sin \\\\theta + p_y \\\\cdot \\\\cos \\\\theta\\\\\\\\\\n            p_z\\\\\\\\\\n        \\\\end{bmatrix}\\n        "]],"parameters":[]}]]],[2,"\\n\\n        Notice the transformed vertex is the same as the **2D** example.\\n\\n        The third row and column is 1 and has the effect of keeping the current value of "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"p_z"]],"parameters":[]}]]],[2,". There\'s a special matrix,\\n        that when multiplied by it, will always return the original matrix. This is called an identity matrix. It\'s an\\n        almost empty matrix with the diagonals filled with 1. I hope that by now, there\'s some kind of intuition forming about the 1 and 0\\n        picking specific parts of the vector to keep. Just like we saw in the **3D** rotation about **z**. Let\'s formally introduce the **identity** matrix.\\n\\n        "],[8,"katex-block",[],[[],[]],[["default"],[{"statements":[[2,"\\n        \\\\bold{I} =\\n\\n        \\\\begin{bmatrix}\\n            1 & 0 & 0\\\\\\\\\\n            0 & 1 & 0\\\\\\\\\\n            0 & 0 & 1\\\\\\\\\\n        \\\\end{bmatrix}\\n        \\\\\\\\\\n        \\\\bold{I} \\\\times \\\\boldsymbol{p} = \\\\boldsymbol{p}\\n        "]],"parameters":[]}]]],[2,"\\n\\n        When evaluating the "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"p_x"]],"parameters":[]}]]],[2," component of the transformed point, the first row "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"[1,0,0]"]],"parameters":[]}]]],[2," will be multiplied out,\\n        keeping only the "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"p_x"]],"parameters":[]}]]],[2," component and scaling it by 1. For "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"p_y"]],"parameters":[]}]]],[2,", the second row "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"[0,1,0]"]],"parameters":[]}]]],[2," will be multiplied\\n        and keeps only "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"p_y"]],"parameters":[]}]]],[2,". It\'s the same story for "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"p_z"]],"parameters":[]}]]],[2,".\\n\\n        When rotating about any vector **x** **y** or **z**, that axis needs to keep its current value. Rotating about **Z** should\\n        keep an object\'s depth intact and only points along the **XY** plane are transformed.\\n\\n        Here\'s the rotation matrices for the rest.\\n\\n        Rotation about **X**:\\n\\n        "],[8,"katex-block",[],[[],[]],[["default"],[{"statements":[[2,"\\n        \\\\bold{R}_x =\\n        \\\\begin{bmatrix}\\n        1 & 0 & 0\\\\\\\\\\n        0 & \\\\cos \\\\theta & -\\\\sin \\\\theta\\\\\\\\\\n        0 & \\\\sin \\\\theta & \\\\cos \\\\theta\\\\\\\\\\n        \\\\end{bmatrix}\\n        "]],"parameters":[]}]]],[2,"\\n\\n        Rotation about **Y**:\\n\\n        "],[8,"katex-block",[],[[],[]],[["default"],[{"statements":[[2,"\\n        \\\\bold{R}_y =\\n        \\\\begin{bmatrix}\\n            \\\\cos \\\\theta & 0 & \\\\sin \\\\theta\\\\\\\\\\n            0 & 1 & 0\\\\\\\\\\n            -\\\\sin \\\\theta & 0 & \\\\cos \\\\theta\\\\\\\\\\n        \\\\end{bmatrix}\\n        "]],"parameters":[]}]]],[2,"\\n\\n        ### Projection Transformations\\n\\n        Projection matrices play an important role in **3D**. Both perspective and orthographic are commonly used.\\n        Perspective, for photorealism and orthographic for **CAD** or **2D games**.\\n\\n        Unfortunately, this chapter is already too big and there is a lot left to cover. We\'ll revisit it in a future\\n        chapter so projection can get its own treatment. For now, all you need to know is that perspective projection\\n        is what allows us to figure out the **2D** coordinates for **3D** points. I discussed the basic theory in the Photography\\n        chapter.\\n\\n        ### Concatenation\\n\\n        One the of best features of matrices is the ability to collapse multiple transformations into a single transformation.\\n        Rather than evaluating each matrix one by one, a single matrix can be precomputed which would be equivalent to\\n        evaluating each one individually.\\n\\n        ## More On Rotation\\n\\n        Rotations in **3D** can be done in 2 ways. We\'ve already discussed one way using independent axes. By combining\\n        multiple rotations about different axis, it\'s gives you 3 degrees of freedom. This approach is called *Euler*\\n        (pronounced oiler) transforms. The other method is using **quaternion** (pronounced qua-terni-on) transforms.\\n\\n        ### Euler Transforms\\n\\n        With **Euler** transforms, any orientation in **3D** space can be represented with 3 angles, rotations about **X**,**Y**,**Z**.\\n        Since these rotations are chained, the order matters. There\'s no standard order for rotation. One is often chosen to help avoid\\n        getting into **gimbal lock**. **Gimbal lock** is a phenomenon that only affects **Euler** transforms. This can be\\n        experienced by rotating an axis so that it aligns with another axis. With 2 axes aligned, rotating one\\n        would result in the same rotation so this extra axis becomes redundant. Not only is it redundant but you\\n        lose an axis to rotate it about independently of the other axes. When gimbal lock occurs, it can become\\n        difficult to get out of, especially when it\'s not certain what rotation resulted in the lock.\\n\\n        **Gimbal lock** can be a serious problem, but the simplicity of using **Euler** angles makes it the goto method for most.\\n        Animators stick with Euler angles since it\'s easier to express movements.\\n    "]],"parameters":[]}]]],[2,"\\n    "],[8,"prose-figure",[],[["@componentName","@figureId","@figureCaption"],["figures/math/gimbal-lock","7","Gimbal lock exercise. Can you get this into gimbal lock."]],null],[2,"\\n    "],[8,"prose-markdown",[],[[],[]],[["default"],[{"statements":[[2,"\\n        ### Quaternions to the Rescue\\n\\n        Let\'s review the other approach, called **quaternions**. **Quaternions** provide a vector-based method for rotation.\\n        Using complex numbers, it\'s not possible to do rotations in **3D**. Simply augmenting complex numbers with an\\n        extra dimension doesn\'t work out. Turns out you need 4 dimensions. **2D** rotations has 1 degree of freedom.\\n        In **3D**, we need 3 degrees of freedom. To get 3 degrees of freedom, we need **4D** rotations which is similar to\\n        how **2D** rotations give us 1 degree of freedom.\\n\\n        **Quaternions** provide an efficient way to neatly represent rotation. It doesn\'t involve matrix operations\\n        and has minimal storage requirements. It doesn\'t suffer from the same issues as **Euler** transforms and\\n        is superior when used to smoothly interpolate spherical motion.\\n\\n        Like with **complex numbers**, **quaternation operations** are identical. Now that we\'re dealing with 3 additional\\n        dimensions, new imaginary numbers are introduced. Let\'s introduce them now.\\n\\n        "],[8,"katex-block",[],[[],[]],[["default"],[{"statements":[[2,"\\n        \\\\boldsymbol i^2 = \\\\boldsymbol j^2 = \\\\boldsymbol k^2 = -1\\\\\\\\\\n        \\\\boldsymbol j \\\\boldsymbol k = -\\\\boldsymbol k \\\\boldsymbol j = \\\\boldsymbol i\\\\\\\\\\n        \\\\boldsymbol k \\\\boldsymbol i = -\\\\boldsymbol i \\\\boldsymbol k = \\\\boldsymbol j\\\\\\\\\\n        \\\\boldsymbol i \\\\boldsymbol j = -\\\\boldsymbol j \\\\boldsymbol i = \\\\boldsymbol k\\\\\\\\\\n        "]],"parameters":[]}]]],[2,"\\n\\n        These properties are used to resolve multiplication involving those imaginary numbers. For example, multiplying\\n        by "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\boldsymbol i"]],"parameters":[]}]]],[2," results in a "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"90 \\\\degree"]],"parameters":[]}]]],[2," rotation. Multiplying by\\n        "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\boldsymbol i"]],"parameters":[]}]]],[2," again ("],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\boldsymbol i^2"]],"parameters":[]}]]],[2,") it becomes **-1** which lies on the **x-axis** in the\\n        **complex plane**. With **quaternions**, multiplying the "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\boldsymbol i"]],"parameters":[]}]]],[2," with "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\boldsymbol j"]],"parameters":[]}]]],[2," will give you\\n        "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\boldsymbol k"]],"parameters":[]}]]],[2,". Relating back to the\\n        cartesian coordinate system, "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\hat x \\\\times \\\\hat y = \\\\hat z"]],"parameters":[]}]]],[2,". This should look familiar to you. It\'s the cross product.\\n\\n        A **quaternion** is of this form:\\n\\n        "],[8,"katex-block",[],[[],[]],[["default"],[{"statements":[[2,"\\n        \\\\boldsymbol q = x \\\\boldsymbol i + y \\\\boldsymbol j + z \\\\boldsymbol k + w\\n        "]],"parameters":[]}]]],[2,"\\n\\n        It\'s common to refer to a **quaternion** as having a **vector** part and a **real** part. It\'s often written as "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\boldsymbol q = \\\\boldsymbol q_v + q_w"]],"parameters":[]}]]],[2,"\\n        or "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\boldsymbol q = [\\\\boldsymbol v, w]"]],"parameters":[]}]]],[2,".\\n\\n        **Quaternion** transformations are kind of weird. It takes the form "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\boldsymbol{qpq}^{-1}"]],"parameters":[]}]]],[2,". You surround the point being transformed\\n        with a **unit quaternion** and its **conjugate**. A **quaternion conjugate** is similar to a **complex conjugate** where the **real** is the same but the\\n        **imaginary** part is negated.\\n\\n        A **unit quaternion** takes this form "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\boldsymbol q = [\\\\sin \\\\theta \\\\cdot \\\\boldsymbol v, \\\\cos \\\\theta \\\\cdot w]"]],"parameters":[]}]]],[2," and the conjugate\\n        is "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\boldsymbol q = [-\\\\sin \\\\theta \\\\cdot \\\\boldsymbol v, \\\\cos \\\\theta \\\\cdot w]"]],"parameters":[]}]]],[2,".\\n\\n        Here\'s my best attempt at explaining **quaternion** transforms in laymens terms. **Unit quaternions** allow you to rotate\\n        about an arbitrary axis defined by the vector part "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\sin \\\\theta \\\\cdot (x \\\\boldsymbol i + y \\\\boldsymbol j + z \\\\boldsymbol k)"]],"parameters":[]}]]],[2,".\\n        The angle at which it rotates, is defined by the real part "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\cos \\\\theta \\\\cdot w"]],"parameters":[]}]]],[2,". To be more accurate "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\cos \\\\theta \\\\cdot w"]],"parameters":[]}]]],[2,"\\n        equals the half-angle. Multiplying by "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\boldsymbol q"]],"parameters":[]}]]],[2,", involves a half-angle rotation, and "],[8,"katex-span",[],[[],[]],[["default"],[{"statements":[[2,"\\\\boldsymbol q^{-1}"]],"parameters":[]}]]],[2,"\\n        doubles that rotation.\\n\\n\\n        There are whole collections of books devoted to **quaternions** alone. It\'s a complex topic. **4D** rotations are hard\\n        to visualize and I won\'t bore you with more details. However, if there is one thing I want you to get out of this then it\\n        is to understand that **unit quaternions** allow you to rotate about an abitrary axis. You can use the method above\\n        to perform the transform, plugging in the axis and the half-angle and you shouldn\'t need to know anything else.\\n\\n        If you\'re dying to learn more about this, I recommend a series of interactive videos about quaternions from [3Blue1Brown](https://eater.net/quaternions)\\n\\n        My demos aren\'t as fancy but I have an example that can show what quaternions are excellent at, slerp.\\n    "]],"parameters":[]}]]],[2,"\\n    "],[8,"prose-figure",[],[["@componentName","@figureId","@figureCaption"],["figures/math/quaternion","9","Quaternion slerp is being performed on the vector inside the red sphere. Linear interpolation is being performed on Euler angles in blue sphere."]],null],[2,"\\n"],[13],[2,"\\n"]],"hasEval":false,"upvars":["concat","root-url","hash"]}',moduleName:"fundamentals/pods/docs/transformations/template.hbs"})
e.default=t})),define("fundamentals/pods/index/route",["exports"],(function(e){function t(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function n(e,t){for(var n=0;n<t.length;n++){var r=t[n]
r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function r(e,t){return(r=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function o(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1
if(Reflect.construct.sham)return!1
if("function"==typeof Proxy)return!0
try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}()
return function(){var n,r=i(e)
if(t){var o=i(this).constructor
n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments)
return a(this,n)}}function a(e,t){return!t||"object"!==_typeof(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
return e}(e):t}function i(e){return(i=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var s=function(e){(function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function")
e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&r(e,t)})(u,Ember.Route)
var a,i,s,l=o(u)
function u(){return t(this,u),l.apply(this,arguments)}return a=u,(i=[{key:"redirect",value:function(){this.transitionTo("docs.introduction")}}])&&n(a.prototype,i),s&&n(a,s),u}()
e.default=s})),define("fundamentals/pods/playground/controller",["exports"],(function(e){function t(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function n(e,t){return(n=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function r(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1
if(Reflect.construct.sham)return!1
if("function"==typeof Proxy)return!0
try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}()
return function(){var n,r=i(e)
if(t){var a=i(this).constructor
n=Reflect.construct(r,arguments,a)}else n=r.apply(this,arguments)
return o(this,n)}}function o(e,t){return!t||"object"!==_typeof(t)&&"function"!=typeof t?a(e):t}function a(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
return e}function i(e){return(i=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var l=function(e){(function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function")
e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&n(e,t)})(i,Ember.Controller)
var o=r(i)
function i(){var e
t(this,i)
for(var n=arguments.length,r=new Array(n),l=0;l<n;l++)r[l]=arguments[l]
return s(a(e=o.call.apply(o,[this].concat(r))),"sceneEditorValue","\nconst geo = new THREE.BoxGeometry(1,1,1);\nconst mat = new THREE.ShaderMaterial({\n    vertexShader: vertexShaderSource,\n    fragmentShader: fragmentShaderSource\n});\n\nconst cube = new THREE.Mesh(geo, mat);\nscene.add(cube);\n"),s(a(e),"vertexEditorValue","void main()\n{\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n}\n"),s(a(e),"fragmentEditorValue","void main()\n{\n    gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0);\n}\n"),e}return i}()
e.default=l})),define("fundamentals/pods/playground/template",["exports"],(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.HTMLBars.template({id:"XzSFpnk1",block:'{"symbols":[],"statements":[[8,"demo-viewer",[],[["@isFullSize","@container","@cameraPosition","@cameraLookAt","@sceneEditorValue","@vertexEditorValue","@fragmentEditorValue","@isFullscreenEnabled"],[true,"body",[30,[36,0],null,[["x","y","z"],[0,5,10]]],[30,[36,0],null,[["x","y","z"],[0,0,0]]],[32,0,["sceneEditorValue"]],[32,0,["vertexEditorValue"]],[32,0,["fragmentEditorValue"]],false]],null]],"hasEval":false,"upvars":["hash"]}',moduleName:"fundamentals/pods/playground/template.hbs"})
e.default=t}))
define("fundamentals/router",["exports","fundamentals/config/environment"],(function(e,t){function n(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function r(e,t){return(r=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function o(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1
if(Reflect.construct.sham)return!1
if("function"==typeof Proxy)return!0
try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}()
return function(){var n,r=s(e)
if(t){var o=s(this).constructor
n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments)
return a(this,n)}}function a(e,t){return!t||"object"!==_typeof(t)&&"function"!=typeof t?i(e):t}function i(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
return e}function s(e){return(s=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var u=function(e){(function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function")
e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&r(e,t)})(s,Ember.Router)
var a=o(s)
function s(){var e
n(this,s)
for(var r=arguments.length,o=new Array(r),u=0;u<r;u++)o[u]=arguments[u]
return l(i(e=a.call.apply(a,[this].concat(o))),"location",t.default.locationType),l(i(e),"rootURL",t.default.rootURL),e}return s}()
e.default=u,u.map((function(){this.route("playground"),this.route("docs",(function(){this.route("introduction"),this.route("photography"),this.route("physics-of-light"),this.route("language-of-3d"),this.route("object-modeling"),this.route("transformations"),this.route("scene-graphs"),this.route("graphics-pipeline"),this.route("shader-theory"),this.route("shader-getting-started"),this.route("shader-beyond-the-basics")}))}))})),define("fundamentals/serializers/-default",["exports","@ember-data/serializer/json"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("fundamentals/serializers/-json-api",["exports","@ember-data/serializer/json-api"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("fundamentals/serializers/-rest",["exports","@ember-data/serializer/rest"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("fundamentals/services/page-title-list",["exports","ember-page-title/services/page-title-list"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("fundamentals/services/page-title",["exports","ember-page-title/services/page-title"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("fundamentals/services/root-url",["exports","ember-root-url/services/root-url"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("fundamentals/services/store",["exports","ember-data/store"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("fundamentals/tailwind.config",[],(function(){function e(e,t){var n=Object.keys(e)
if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e)
t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function t(t){for(var r=1;r<arguments.length;r++){var o=null!=arguments[r]?arguments[r]:{}
r%2?e(Object(o),!0).forEach((function(e){n(t,e,o[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(o)):e(Object(o)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(o,e))}))}return t}function n(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){(null==t||t>e.length)&&(t=e.length)
for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n]
return r}var o,a=require("tailwindcss/colors"),i=require("tailwindcss/defaultTheme")
module.exports={purge:[],presets:[],darkMode:!1,theme:{extend:{fontFamily:{sans:["Inter var"].concat((o=i.fontFamily.sans,function(e){if(Array.isArray(e))return r(e)}(o)||function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(o)||function(e,t){if(e){if("string"==typeof e)return r(e,t)
var n=Object.prototype.toString.call(e).slice(8,-1)
return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?r(e,t):void 0}}(o)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()))},typography:{DEFAULT:{css:{"h1,h2,h3,h4,h5,blockquote,strong,code,thead":{color:"white"},a:{color:"rgba(165, 180, 252)"}}}}},screens:{sm:"640px",md:"768px",lg:"1024px",xl:"1280px","2xl":"1536px"},colors:{transparent:"transparent",current:"currentColor",black:a.black,white:a.white,gray:a.coolGray,red:a.red,yellow:a.amber,green:a.emerald,blue:a.blue,indigo:a.indigo,purple:a.violet,pink:a.pink},spacing:{px:"1px",0:"0px",.5:"0.125rem",1:"0.25rem",1.5:"0.375rem",2:"0.5rem",2.5:"0.625rem",3:"0.75rem",3.5:"0.875rem",4:"1rem",5:"1.25rem",6:"1.5rem",7:"1.75rem",8:"2rem",9:"2.25rem",10:"2.5rem",11:"2.75rem",12:"3rem",14:"3.5rem",16:"4rem",20:"5rem",24:"6rem",28:"7rem",32:"8rem",36:"9rem",40:"10rem",44:"11rem",48:"12rem",52:"13rem",56:"14rem",60:"15rem",64:"16rem",72:"18rem",80:"20rem",96:"24rem"},animation:{none:"none",spin:"spin 1s linear infinite",ping:"ping 1s cubic-bezier(0, 0, 0.2, 1) infinite",pulse:"pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite",bounce:"bounce 1s infinite"},backgroundColor:function(e){return e("colors")},backgroundImage:{none:"none","gradient-to-t":"linear-gradient(to top, var(--tw-gradient-stops))","gradient-to-tr":"linear-gradient(to top right, var(--tw-gradient-stops))","gradient-to-r":"linear-gradient(to right, var(--tw-gradient-stops))","gradient-to-br":"linear-gradient(to bottom right, var(--tw-gradient-stops))","gradient-to-b":"linear-gradient(to bottom, var(--tw-gradient-stops))","gradient-to-bl":"linear-gradient(to bottom left, var(--tw-gradient-stops))","gradient-to-l":"linear-gradient(to left, var(--tw-gradient-stops))","gradient-to-tl":"linear-gradient(to top left, var(--tw-gradient-stops))"},backgroundOpacity:function(e){return e("opacity")},backgroundPosition:{bottom:"bottom",center:"center",left:"left","left-bottom":"left bottom","left-top":"left top",right:"right","right-bottom":"right bottom","right-top":"right top",top:"top"},backgroundSize:{auto:"auto",cover:"cover",contain:"contain"},borderColor:function(e){return t(t({},e("colors")),{},{DEFAULT:e("colors.gray.200","currentColor")})},borderOpacity:function(e){return e("opacity")},borderRadius:{none:"0px",sm:"0.125rem",DEFAULT:"0.25rem",md:"0.375rem",lg:"0.5rem",xl:"0.75rem","2xl":"1rem","3xl":"1.5rem",full:"9999px"},borderWidth:{DEFAULT:"1px",0:"0px",2:"2px",4:"4px",8:"8px"},boxShadow:{sm:"0 1px 2px 0 rgba(0, 0, 0, 0.05)",DEFAULT:"0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06)",md:"0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)",lg:"0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05)",xl:"0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04)","2xl":"0 25px 50px -12px rgba(0, 0, 0, 0.25)",inner:"inset 0 2px 4px 0 rgba(0, 0, 0, 0.06)",none:"none"},container:{},cursor:{auto:"auto",default:"default",pointer:"pointer",wait:"wait",text:"text",move:"move","not-allowed":"not-allowed"},divideColor:function(e){return e("borderColor")},divideOpacity:function(e){return e("borderOpacity")},divideWidth:function(e){return e("borderWidth")},fill:{current:"currentColor"},flex:{1:"1 1 0%",auto:"1 1 auto",initial:"0 1 auto",none:"none"},flexGrow:{0:"0",DEFAULT:"1",1:"1",2:"2",3:"3"},flexShrink:{0:"0",DEFAULT:"1"},fontFamily:{sans:["ui-sans-serif","system-ui","-apple-system","BlinkMacSystemFont",'"Segoe UI"',"Roboto",'"Helvetica Neue"',"Arial",'"Noto Sans"',"sans-serif",'"Apple Color Emoji"','"Segoe UI Emoji"','"Segoe UI Symbol"','"Noto Color Emoji"'],serif:["ui-serif","Georgia","Cambria",'"Times New Roman"',"Times","serif"],mono:["ui-monospace","SFMono-Regular","Menlo","Monaco","Consolas",'"Liberation Mono"','"Courier New"',"monospace"]},fontSize:{xs:["0.75rem",{lineHeight:"1rem"}],sm:["0.875rem",{lineHeight:"1.25rem"}],base:["1rem",{lineHeight:"1.5rem"}],lg:["1.125rem",{lineHeight:"1.75rem"}],xl:["1.25rem",{lineHeight:"1.75rem"}],"2xl":["1.5rem",{lineHeight:"2rem"}],"3xl":["1.875rem",{lineHeight:"2.25rem"}],"4xl":["2.25rem",{lineHeight:"2.5rem"}],"5xl":["3rem",{lineHeight:"1"}],"6xl":["3.75rem",{lineHeight:"1"}],"7xl":["4.5rem",{lineHeight:"1"}],"8xl":["6rem",{lineHeight:"1"}],"9xl":["8rem",{lineHeight:"1"}]},fontWeight:{thin:"100",extralight:"200",light:"300",normal:"400",medium:"500",semibold:"600",bold:"700",extrabold:"800",black:"900"},gap:function(e){return e("spacing")},gradientColorStops:function(e){return e("colors")},gridAutoColumns:{auto:"auto",min:"min-content",max:"max-content",fr:"minmax(0, 1fr)"},gridAutoRows:{auto:"auto",min:"min-content",max:"max-content",fr:"minmax(0, 1fr)"},gridColumn:{auto:"auto","span-1":"span 1 / span 1","span-2":"span 2 / span 2","span-3":"span 3 / span 3","span-4":"span 4 / span 4","span-5":"span 5 / span 5","span-6":"span 6 / span 6","span-7":"span 7 / span 7","span-8":"span 8 / span 8","span-9":"span 9 / span 9","span-10":"span 10 / span 10","span-11":"span 11 / span 11","span-12":"span 12 / span 12","span-full":"1 / -1"},gridColumnEnd:{auto:"auto",1:"1",2:"2",3:"3",4:"4",5:"5",6:"6",7:"7",8:"8",9:"9",10:"10",11:"11",12:"12",13:"13"},gridColumnStart:{auto:"auto",1:"1",2:"2",3:"3",4:"4",5:"5",6:"6",7:"7",8:"8",9:"9",10:"10",11:"11",12:"12",13:"13"},gridRow:{auto:"auto","span-1":"span 1 / span 1","span-2":"span 2 / span 2","span-3":"span 3 / span 3","span-4":"span 4 / span 4","span-5":"span 5 / span 5","span-6":"span 6 / span 6","span-full":"1 / -1"},gridRowStart:{auto:"auto",1:"1",2:"2",3:"3",4:"4",5:"5",6:"6",7:"7"},gridRowEnd:{auto:"auto",1:"1",2:"2",3:"3",4:"4",5:"5",6:"6",7:"7"},transformOrigin:{center:"center",top:"top","top-right":"top right",right:"right","bottom-right":"bottom right",bottom:"bottom","bottom-left":"bottom left",left:"left","top-left":"top left"},gridTemplateColumns:{none:"none",1:"repeat(1, minmax(0, 1fr))",2:"repeat(2, minmax(0, 1fr))",3:"repeat(3, minmax(0, 1fr))",4:"repeat(4, minmax(0, 1fr))",5:"repeat(5, minmax(0, 1fr))",6:"repeat(6, minmax(0, 1fr))",7:"repeat(7, minmax(0, 1fr))",8:"repeat(8, minmax(0, 1fr))",9:"repeat(9, minmax(0, 1fr))",10:"repeat(10, minmax(0, 1fr))",11:"repeat(11, minmax(0, 1fr))",12:"repeat(12, minmax(0, 1fr))"},gridTemplateRows:{none:"none",1:"repeat(1, minmax(0, 1fr))",2:"repeat(2, minmax(0, 1fr))",3:"repeat(3, minmax(0, 1fr))",4:"repeat(4, minmax(0, 1fr))",5:"repeat(5, minmax(0, 1fr))",6:"repeat(6, minmax(0, 1fr))"},height:function(e){return t(t({auto:"auto"},e("spacing")),{},{"1/2":"50%","1/3":"33.333333%","2/3":"66.666667%","1/4":"25%","2/4":"50%","3/4":"75%","1/5":"20%","2/5":"40%","3/5":"60%","4/5":"80%","1/6":"16.666667%","2/6":"33.333333%","3/6":"50%","4/6":"66.666667%","5/6":"83.333333%",full:"100%",screen:"100vh"})},inset:function(e,n){var r=n.negative
return t(t(t({auto:"auto"},e("spacing")),r(e("spacing"))),{},{"1/2":"50%","1/3":"33.333333%","2/3":"66.666667%","1/4":"25%","2/4":"50%","3/4":"75%",full:"100%","-1/2":"-50%","-1/3":"-33.333333%","-2/3":"-66.666667%","-1/4":"-25%","-2/4":"-50%","-3/4":"-75%","-full":"-100%"})},keyframes:{spin:{to:{transform:"rotate(360deg)"}},ping:{"75%, 100%":{transform:"scale(2)",opacity:"0"}},pulse:{"50%":{opacity:".5"}},bounce:{"0%, 100%":{transform:"translateY(-25%)",animationTimingFunction:"cubic-bezier(0.8,0,1,1)"},"50%":{transform:"none",animationTimingFunction:"cubic-bezier(0,0,0.2,1)"}}},letterSpacing:{tighter:"-0.05em",tight:"-0.025em",normal:"0em",wide:"0.025em",wider:"0.05em",widest:"0.1em"},lineHeight:{none:"1",tight:"1.25",snug:"1.375",normal:"1.5",relaxed:"1.625",loose:"2",3:".75rem",4:"1rem",5:"1.25rem",6:"1.5rem",7:"1.75rem",8:"2rem",9:"2.25rem",10:"2.5rem"},listStyleType:{none:"none",disc:"disc",decimal:"decimal"},margin:function(e,n){var r=n.negative
return t(t({auto:"auto"},e("spacing")),r(e("spacing")))},maxHeight:function(e){return t(t({},e("spacing")),{},{full:"100%",screen:"100vh"})},maxWidth:function(e,n){return t({none:"none",0:"0rem",xs:"20rem",sm:"24rem",md:"28rem",lg:"32rem",xl:"36rem","2xl":"42rem","3xl":"48rem","4xl":"56rem","5xl":"64rem","6xl":"72rem","7xl":"80rem",full:"100%",min:"min-content",max:"max-content",prose:"65ch"},(0,n.breakpoints)(e("screens")))},minHeight:{0:"0px",full:"100%",screen:"100vh"},minWidth:{0:"0px",full:"100%",min:"min-content",max:"max-content"},objectPosition:{bottom:"bottom",center:"center",left:"left","left-bottom":"left bottom","left-top":"left top",right:"right","right-bottom":"right bottom","right-top":"right top",top:"top"},opacity:{0:"0",5:"0.05",10:"0.1",20:"0.2",25:"0.25",30:"0.3",40:"0.4",50:"0.5",60:"0.6",70:"0.7",75:"0.75",80:"0.8",90:"0.9",95:"0.95",100:"1"},order:{first:"-9999",last:"9999",none:"0",1:"1",2:"2",3:"3",4:"4",5:"5",6:"6",7:"7",8:"8",9:"9",10:"10",11:"11",12:"12"},outline:{none:["2px solid transparent","2px"],white:["2px dotted white","2px"],black:["2px dotted black","2px"]},padding:function(e){return e("spacing")},placeholderColor:function(e){return e("colors")},placeholderOpacity:function(e){return e("opacity")},ringColor:function(e){return t({DEFAULT:e("colors.blue.500","#3b82f6")},e("colors"))},ringOffsetColor:function(e){return e("colors")},ringOffsetWidth:{0:"0px",1:"1px",2:"2px",4:"4px",8:"8px"},ringOpacity:function(e){return t({DEFAULT:"0.5"},e("opacity"))},ringWidth:{DEFAULT:"3px",0:"0px",1:"1px",2:"2px",4:"4px",8:"8px"},rotate:{"-180":"-180deg","-90":"-90deg","-45":"-45deg","-12":"-12deg","-6":"-6deg","-3":"-3deg","-2":"-2deg","-1":"-1deg",0:"0deg",1:"1deg",2:"2deg",3:"3deg",6:"6deg",12:"12deg",45:"45deg",90:"90deg",180:"180deg"},scale:{0:"0",50:".5",75:".75",90:".9",95:".95",100:"1",105:"1.05",110:"1.1",125:"1.25",150:"1.5"},skew:{"-12":"-12deg","-6":"-6deg","-3":"-3deg","-2":"-2deg","-1":"-1deg",0:"0deg",1:"1deg",2:"2deg",3:"3deg",6:"6deg",12:"12deg"},space:function(e,n){var r=n.negative
return t(t({},e("spacing")),r(e("spacing")))},stroke:{current:"currentColor"},strokeWidth:{0:"0",1:"1",2:"2"},textColor:function(e){return e("colors")},textOpacity:function(e){return e("opacity")},transitionDuration:{DEFAULT:"150ms",75:"75ms",100:"100ms",150:"150ms",200:"200ms",300:"300ms",500:"500ms",700:"700ms",1e3:"1000ms"},transitionDelay:{75:"75ms",100:"100ms",150:"150ms",200:"200ms",300:"300ms",500:"500ms",700:"700ms",1e3:"1000ms"},transitionProperty:{none:"none",all:"all",DEFAULT:"background-color, border-color, color, fill, stroke, opacity, box-shadow, transform",colors:"background-color, border-color, color, fill, stroke",opacity:"opacity",shadow:"box-shadow",transform:"transform"},transitionTimingFunction:{DEFAULT:"cubic-bezier(0.4, 0, 0.2, 1)",linear:"linear",in:"cubic-bezier(0.4, 0, 1, 1)",out:"cubic-bezier(0, 0, 0.2, 1)","in-out":"cubic-bezier(0.4, 0, 0.2, 1)"},translate:function(e,n){var r=n.negative
return t(t(t({},e("spacing")),r(e("spacing"))),{},{"1/2":"50%","1/3":"33.333333%","2/3":"66.666667%","1/4":"25%","2/4":"50%","3/4":"75%",full:"100%","-1/2":"-50%","-1/3":"-33.333333%","-2/3":"-66.666667%","-1/4":"-25%","-2/4":"-50%","-3/4":"-75%","-full":"-100%"})},width:function(e){return t(t({auto:"auto"},e("spacing")),{},{"1/2":"50%","1/3":"33.333333%","2/3":"66.666667%","1/4":"25%","2/4":"50%","3/4":"75%","1/5":"20%","2/5":"40%","3/5":"60%","4/5":"80%","1/6":"16.666667%","2/6":"33.333333%","3/6":"50%","4/6":"66.666667%","5/6":"83.333333%","1/12":"8.333333%","2/12":"16.666667%","3/12":"25%","4/12":"33.333333%","5/12":"41.666667%","6/12":"50%","7/12":"58.333333%","8/12":"66.666667%","9/12":"75%","10/12":"83.333333%","11/12":"91.666667%",full:"100%",screen:"100vw",min:"min-content",max:"max-content"})},zIndex:{auto:"auto",0:"0",10:"10",20:"20",30:"30",40:"40",50:"50"}},variantOrder:["first","last","odd","even","visited","checked","group-hover","group-focus","focus-within","hover","focus","focus-visible","active","disabled"],variants:{accessibility:["responsive","focus-within","focus"],alignContent:["responsive"],alignItems:["responsive"],alignSelf:["responsive"],animation:["responsive"],appearance:["responsive"],backgroundAttachment:["responsive"],backgroundClip:["responsive"],backgroundColor:["responsive","dark","group-hover","focus-within","hover","focus"],backgroundImage:["responsive"],backgroundOpacity:["responsive","group-hover","focus-within","hover","focus"],backgroundPosition:["responsive"],backgroundRepeat:["responsive"],backgroundSize:["responsive"],borderCollapse:["responsive"],borderColor:["responsive","dark","group-hover","focus-within","hover","focus"],borderOpacity:["responsive","group-hover","focus-within","hover","focus"],borderRadius:["responsive"],borderStyle:["responsive"],borderWidth:["responsive"],boxShadow:["responsive","group-hover","focus-within","hover","focus"],boxSizing:["responsive"],clear:["responsive"],container:["responsive"],cursor:["responsive"],display:["responsive"],divideColor:["responsive","dark"],divideOpacity:["responsive"],divideStyle:["responsive"],divideWidth:["responsive"],fill:["responsive"],flex:["responsive"],flexDirection:["responsive"],flexGrow:["responsive"],flexShrink:["responsive"],flexWrap:["responsive"],float:["responsive"],fontFamily:["responsive"],fontSize:["responsive"],fontSmoothing:["responsive"],fontStyle:["responsive"],fontVariantNumeric:["responsive"],fontWeight:["responsive"],gap:["responsive"],gradientColorStops:["responsive","dark","hover","focus"],gridAutoColumns:["responsive"],gridAutoFlow:["responsive"],gridAutoRows:["responsive"],gridColumn:["responsive"],gridColumnEnd:["responsive"],gridColumnStart:["responsive"],gridRow:["responsive"],gridRowEnd:["responsive"],gridRowStart:["responsive"],gridTemplateColumns:["responsive"],gridTemplateRows:["responsive"],height:["responsive"],inset:["responsive"],justifyContent:["responsive"],justifyItems:["responsive"],justifySelf:["responsive"],letterSpacing:["responsive"],lineHeight:["responsive"],listStylePosition:["responsive"],listStyleType:["responsive"],margin:["responsive"],maxHeight:["responsive"],maxWidth:["responsive"],minHeight:["responsive"],minWidth:["responsive"],objectFit:["responsive"],objectPosition:["responsive"],opacity:["responsive","group-hover","focus-within","hover","focus"],order:["responsive"],outline:["responsive","focus-within","focus"],overflow:["responsive"],overscrollBehavior:["responsive"],padding:["responsive"],placeContent:["responsive"],placeItems:["responsive"],placeSelf:["responsive"],placeholderColor:["responsive","dark","focus"],placeholderOpacity:["responsive","focus"],pointerEvents:["responsive"],position:["responsive"],resize:["responsive"],ringColor:["responsive","dark","focus-within","focus"],ringOffsetColor:["responsive","dark","focus-within","focus"],ringOffsetWidth:["responsive","focus-within","focus"],ringOpacity:["responsive","focus-within","focus"],ringWidth:["responsive","focus-within","focus"],rotate:["responsive","hover","focus"],scale:["responsive","hover","focus"],skew:["responsive","hover","focus"],space:["responsive"],stroke:["responsive"],strokeWidth:["responsive"],tableLayout:["responsive"],textAlign:["responsive"],textColor:["responsive","dark","group-hover","focus-within","hover","focus"],textDecoration:["responsive","group-hover","focus-within","hover","focus"],textOpacity:["responsive","group-hover","focus-within","hover","focus"],textOverflow:["responsive"],textTransform:["responsive"],transform:["responsive"],transformOrigin:["responsive"],transitionDelay:["responsive"],transitionDuration:["responsive"],transitionProperty:["responsive"],transitionTimingFunction:["responsive"],translate:["responsive","hover","focus"],userSelect:["responsive"],verticalAlign:["responsive"],visibility:["responsive"],whitespace:["responsive"],width:["responsive"],wordBreak:["responsive"],zIndex:["responsive","focus-within","focus"]},plugins:[require("@tailwindcss/typography")]}})),define("fundamentals/transforms/boolean",["exports","@ember-data/serializer/-private"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.BooleanTransform}})})),define("fundamentals/transforms/date",["exports","@ember-data/serializer/-private"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.DateTransform}})})),define("fundamentals/transforms/number",["exports","@ember-data/serializer/-private"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.NumberTransform}})})),define("fundamentals/transforms/string",["exports","@ember-data/serializer/-private"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.StringTransform}})})),define("fundamentals/utils/orbit-controls",["exports","three"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.MapControls=e.OrbitControls=void 0
var n=function(e,n){var r,o,a,i,s,l
void 0===n&&console.warn('THREE.OrbitControls: The second parameter "domElement" is now mandatory.'),n===document&&console.error('THREE.OrbitControls: "document" should not be used as the target "domElement". Please use "renderer.domElement" instead.'),this.object=e,this.domElement=n,this.enabled=!0,this.target=new t.Vector3,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:37,UP:38,RIGHT:39,BOTTOM:40},this.mouseButtons={LEFT:t.MOUSE.ROTATE,MIDDLE:t.MOUSE.DOLLY,RIGHT:t.MOUSE.PAN},this.touches={ONE:t.TOUCH.ROTATE,TWO:t.TOUCH.DOLLY_PAN},this.target0=this.target.clone()
this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this.getPolarAngle=function(){return b.phi},this.getAzimuthalAngle=function(){return b.theta},this.listenToKeyEvents=function(e){e.addEventListener("keydown",Q),this._domElementKeyEvents=e},this.saveState=function(){u.target0.copy(u.target),u.position0.copy(u.object.position),u.zoom0=u.object.zoom},this.reset=function(){u.target.copy(u.target0),u.object.position.copy(u.position0),u.object.zoom=u.zoom0,u.object.updateProjectionMatrix(),u.dispatchEvent(c),u.update(),m=p.NONE},this.update=(r=new t.Vector3,o=(new t.Quaternion).setFromUnitVectors(e.up,new t.Vector3(0,1,0)),a=o.clone().invert(),i=new t.Vector3,s=new t.Quaternion,l=2*Math.PI,function(){var e=u.object.position
r.copy(e).sub(u.target),r.applyQuaternion(o),b.setFromVector3(r),u.autoRotate&&m===p.NONE&&R(2*Math.PI/60/60*u.autoRotateSpeed),u.enableDamping?(b.theta+=y.theta*u.dampingFactor,b.phi+=y.phi*u.dampingFactor):(b.theta+=y.theta,b.phi+=y.phi)
var t=u.minAzimuthAngle,n=u.maxAzimuthAngle
return isFinite(t)&&isFinite(n)&&(t<-Math.PI?t+=l:t>Math.PI&&(t-=l),n<-Math.PI?n+=l:n>Math.PI&&(n-=l),b.theta=t<=n?Math.max(t,Math.min(n,b.theta)):b.theta>(t+n)/2?Math.max(t,b.theta):Math.min(n,b.theta)),b.phi=Math.max(u.minPolarAngle,Math.min(u.maxPolarAngle,b.phi)),b.makeSafe(),b.radius*=g,b.radius=Math.max(u.minDistance,Math.min(u.maxDistance,b.radius)),!0===u.enableDamping?u.target.addScaledVector(v,u.dampingFactor):u.target.add(v),r.setFromSpherical(b),r.applyQuaternion(a),e.copy(u.target).add(r),u.object.lookAt(u.target),!0===u.enableDamping?(y.theta*=1-u.dampingFactor,y.phi*=1-u.dampingFactor,v.multiplyScalar(1-u.dampingFactor)):(y.set(0,0,0),v.set(0,0,0)),g=1,!!(w||i.distanceToSquared(u.object.position)>h||8*(1-s.dot(u.object.quaternion))>h)&&(u.dispatchEvent(c),i.copy(u.object.position),s.copy(u.object.quaternion),w=!1,!0)}),this.dispose=function(){u.domElement.removeEventListener("contextmenu",te),u.domElement.removeEventListener("pointerdown",Y),u.domElement.removeEventListener("wheel",K),u.domElement.removeEventListener("touchstart",J),u.domElement.removeEventListener("touchend",ee),u.domElement.removeEventListener("touchmove",$),u.domElement.ownerDocument.removeEventListener("pointermove",X),u.domElement.ownerDocument.removeEventListener("pointerup",Z),null!==u._domElementKeyEvents&&u._domElementKeyEvents.removeEventListener("keydown",Q)}
var u=this,c={type:"change"},f={type:"start"},d={type:"end"},p={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6},m=p.NONE,h=1e-6,b=new t.Spherical,y=new t.Spherical,g=1,v=new t.Vector3,w=!1,x=new t.Vector2,_=new t.Vector2,k=new t.Vector2,j=new t.Vector2,O=new t.Vector2,E=new t.Vector2,P=new t.Vector2,S=new t.Vector2,T=new t.Vector2
function M(){return Math.pow(.95,u.zoomSpeed)}function R(e){y.theta-=e}function z(e){y.phi-=e}var C,I=(C=new t.Vector3,function(e,t){C.setFromMatrixColumn(t,0),C.multiplyScalar(-e),v.add(C)}),A=function(){var e=new t.Vector3
return function(t,n){!0===u.screenSpacePanning?e.setFromMatrixColumn(n,1):(e.setFromMatrixColumn(n,0),e.crossVectors(u.object.up,e)),e.multiplyScalar(t),v.add(e)}}(),D=function(){var e=new t.Vector3
return function(t,n){var r=u.domElement
if(u.object.isPerspectiveCamera){var o=u.object.position
e.copy(o).sub(u.target)
var a=e.length()
a*=Math.tan(u.object.fov/2*Math.PI/180),I(2*t*a/r.clientHeight,u.object.matrix),A(2*n*a/r.clientHeight,u.object.matrix)}else u.object.isOrthographicCamera?(I(t*(u.object.right-u.object.left)/u.object.zoom/r.clientWidth,u.object.matrix),A(n*(u.object.top-u.object.bottom)/u.object.zoom/r.clientHeight,u.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),u.enablePan=!1)}}()
function V(e){u.object.isPerspectiveCamera?g/=e:u.object.isOrthographicCamera?(u.object.zoom=Math.max(u.minZoom,Math.min(u.maxZoom,u.object.zoom*e)),u.object.updateProjectionMatrix(),w=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),u.enableZoom=!1)}function L(e){u.object.isPerspectiveCamera?g*=e:u.object.isOrthographicCamera?(u.object.zoom=Math.max(u.minZoom,Math.min(u.maxZoom,u.object.zoom/e)),u.object.updateProjectionMatrix(),w=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),u.enableZoom=!1)}function H(e){x.set(e.clientX,e.clientY)}function U(e){j.set(e.clientX,e.clientY)}function B(e){if(1==e.touches.length)x.set(e.touches[0].pageX,e.touches[0].pageY)
else{var t=.5*(e.touches[0].pageX+e.touches[1].pageX),n=.5*(e.touches[0].pageY+e.touches[1].pageY)
x.set(t,n)}}function F(e){if(1==e.touches.length)j.set(e.touches[0].pageX,e.touches[0].pageY)
else{var t=.5*(e.touches[0].pageX+e.touches[1].pageX),n=.5*(e.touches[0].pageY+e.touches[1].pageY)
j.set(t,n)}}function N(e){var t=e.touches[0].pageX-e.touches[1].pageX,n=e.touches[0].pageY-e.touches[1].pageY,r=Math.sqrt(t*t+n*n)
P.set(0,r)}function G(e){if(1==e.touches.length)_.set(e.touches[0].pageX,e.touches[0].pageY)
else{var t=.5*(e.touches[0].pageX+e.touches[1].pageX),n=.5*(e.touches[0].pageY+e.touches[1].pageY)
_.set(t,n)}k.subVectors(_,x).multiplyScalar(u.rotateSpeed)
var r=u.domElement
R(2*Math.PI*k.x/r.clientHeight),z(2*Math.PI*k.y/r.clientHeight),x.copy(_)}function W(e){if(1==e.touches.length)O.set(e.touches[0].pageX,e.touches[0].pageY)
else{var t=.5*(e.touches[0].pageX+e.touches[1].pageX),n=.5*(e.touches[0].pageY+e.touches[1].pageY)
O.set(t,n)}E.subVectors(O,j).multiplyScalar(u.panSpeed),D(E.x,E.y),j.copy(O)}function q(e){var t=e.touches[0].pageX-e.touches[1].pageX,n=e.touches[0].pageY-e.touches[1].pageY,r=Math.sqrt(t*t+n*n)
S.set(0,r),T.set(0,Math.pow(S.y/P.y,u.zoomSpeed)),V(T.y),P.copy(S)}function Y(e){if(!1!==u.enabled)switch(e.pointerType){case"mouse":case"pen":(function(e){var n
switch(e.preventDefault(),u.domElement.focus?u.domElement.focus():window.focus(),e.button){case 0:n=u.mouseButtons.LEFT
break
case 1:n=u.mouseButtons.MIDDLE
break
case 2:n=u.mouseButtons.RIGHT
break
default:n=-1}switch(n){case t.MOUSE.DOLLY:if(!1===u.enableZoom)return;(function(e){P.set(e.clientX,e.clientY)})(e),m=p.DOLLY
break
case t.MOUSE.ROTATE:if(e.ctrlKey||e.metaKey||e.shiftKey){if(!1===u.enablePan)return
U(e),m=p.PAN}else{if(!1===u.enableRotate)return
H(e),m=p.ROTATE}break
case t.MOUSE.PAN:if(e.ctrlKey||e.metaKey||e.shiftKey){if(!1===u.enableRotate)return
H(e),m=p.ROTATE}else{if(!1===u.enablePan)return
U(e),m=p.PAN}break
default:m=p.NONE}m!==p.NONE&&(u.domElement.ownerDocument.addEventListener("pointermove",X),u.domElement.ownerDocument.addEventListener("pointerup",Z),u.dispatchEvent(f))})(e)}}function X(e){if(!1!==u.enabled)switch(e.pointerType){case"mouse":case"pen":(function(e){if(!1===u.enabled)return
switch(e.preventDefault(),m){case p.ROTATE:if(!1===u.enableRotate)return;(function(e){_.set(e.clientX,e.clientY),k.subVectors(_,x).multiplyScalar(u.rotateSpeed)
var t=u.domElement
R(2*Math.PI*k.x/t.clientHeight),z(2*Math.PI*k.y/t.clientHeight),x.copy(_),u.update()})(e)
break
case p.DOLLY:if(!1===u.enableZoom)return;(function(e){S.set(e.clientX,e.clientY),T.subVectors(S,P),T.y>0?V(M()):T.y<0&&L(M()),P.copy(S),u.update()})(e)
break
case p.PAN:if(!1===u.enablePan)return;(function(e){O.set(e.clientX,e.clientY),E.subVectors(O,j).multiplyScalar(u.panSpeed),D(E.x,E.y),j.copy(O),u.update()})(e)}})(e)}}function Z(e){switch(e.pointerType){case"mouse":case"pen":(function(e){if(u.domElement.ownerDocument.removeEventListener("pointermove",X),u.domElement.ownerDocument.removeEventListener("pointerup",Z),!1===u.enabled)return
u.dispatchEvent(d),m=p.NONE})()}}function K(e){!1===u.enabled||!1===u.enableZoom||m!==p.NONE&&m!==p.ROTATE||(e.preventDefault(),e.stopPropagation(),u.dispatchEvent(f),function(e){e.deltaY<0?L(M()):e.deltaY>0&&V(M()),u.update()}(e),u.dispatchEvent(d))}function Q(e){!1!==u.enabled&&!1!==u.enablePan&&function(e){var t=!1
switch(e.keyCode){case u.keys.UP:D(0,u.keyPanSpeed),t=!0
break
case u.keys.BOTTOM:D(0,-u.keyPanSpeed),t=!0
break
case u.keys.LEFT:D(u.keyPanSpeed,0),t=!0
break
case u.keys.RIGHT:D(-u.keyPanSpeed,0),t=!0}t&&(e.preventDefault(),u.update())}(e)}function J(e){if(!1!==u.enabled){switch(e.preventDefault(),e.touches.length){case 1:switch(u.touches.ONE){case t.TOUCH.ROTATE:if(!1===u.enableRotate)return
B(e),m=p.TOUCH_ROTATE
break
case t.TOUCH.PAN:if(!1===u.enablePan)return
F(e),m=p.TOUCH_PAN
break
default:m=p.NONE}break
case 2:switch(u.touches.TWO){case t.TOUCH.DOLLY_PAN:if(!1===u.enableZoom&&!1===u.enablePan)return;(function(e){u.enableZoom&&N(e),u.enablePan&&F(e)})(e),m=p.TOUCH_DOLLY_PAN
break
case t.TOUCH.DOLLY_ROTATE:if(!1===u.enableZoom&&!1===u.enableRotate)return;(function(e){u.enableZoom&&N(e),u.enableRotate&&B(e)})(e),m=p.TOUCH_DOLLY_ROTATE
break
default:m=p.NONE}break
default:m=p.NONE}m!==p.NONE&&u.dispatchEvent(f)}}function $(e){if(!1!==u.enabled)switch(e.preventDefault(),e.stopPropagation(),m){case p.TOUCH_ROTATE:if(!1===u.enableRotate)return
G(e),u.update()
break
case p.TOUCH_PAN:if(!1===u.enablePan)return
W(e),u.update()
break
case p.TOUCH_DOLLY_PAN:if(!1===u.enableZoom&&!1===u.enablePan)return;(function(e){u.enableZoom&&q(e),u.enablePan&&W(e)})(e),u.update()
break
case p.TOUCH_DOLLY_ROTATE:if(!1===u.enableZoom&&!1===u.enableRotate)return;(function(e){u.enableZoom&&q(e),u.enableRotate&&G(e)})(e),u.update()
break
default:m=p.NONE}}function ee(e){!1!==u.enabled&&(u.dispatchEvent(d),m=p.NONE)}function te(e){!1!==u.enabled&&e.preventDefault()}u.domElement.addEventListener("contextmenu",te),u.domElement.addEventListener("pointerdown",Y),u.domElement.addEventListener("wheel",K),u.domElement.addEventListener("touchstart",J),u.domElement.addEventListener("touchend",ee),u.domElement.addEventListener("touchmove",$),this.update()}
e.OrbitControls=n,(n.prototype=Object.create(t.EventDispatcher.prototype)).constructor=n
var r=function(e,r){n.call(this,e,r),this.screenSpacePanning=!1,this.mouseButtons.LEFT=t.MOUSE.PAN,this.mouseButtons.RIGHT=t.MOUSE.ROTATE,this.touches.ONE=t.TOUCH.PAN,this.touches.TWO=t.TOUCH.DOLLY_ROTATE}
e.MapControls=r,(r.prototype=Object.create(t.EventDispatcher.prototype)).constructor=r})),define("fundamentals/config/environment",[],(function(){try{var e="fundamentals/config/environment",t=document.querySelector('meta[name="'+e+'"]').getAttribute("content"),n={default:JSON.parse(decodeURIComponent(t))}
return Object.defineProperty(n,"__esModule",{value:!0}),n}catch(r){throw new Error('Could not read config from meta tag with name "'+e+'".')}})),runningTests||require("fundamentals/app").default.create({name:"fundamentals",version:"0.0.0+80e5565b"})
